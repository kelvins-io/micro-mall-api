// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.5.1
// source: proto/micro_mall_sku_proto/sku_business/sku.proto

package sku_business

import (
	context "context"
	_ "gitee.com/kelvins-io/common/proto/google/api"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RetCode int32

const (
	RetCode_SUCCESS               RetCode = 0
	RetCode_ERROR                 RetCode = 500
	RetCode_USER_NOT_EXIST        RetCode = 50001
	RetCode_USER_EXIST            RetCode = 50002
	RetCode_MERCHANT_NOT_EXIST    RetCode = 50003
	RetCode_MERCHANT_EXIST        RetCode = 50004
	RetCode_SHOP_NOT_EXIST        RetCode = 50005
	RetCode_SHOP_EXIST            RetCode = 50006
	RetCode_SKU_NOT_EXIST         RetCode = 50007
	RetCode_SKU_EXIST             RetCode = 50008
	RetCode_SKU_AMOUNT_NOT_ENOUGH RetCode = 50009
	RetCode_TRANSACTION_FAILED    RetCode = 50010
)

// Enum value maps for RetCode.
var (
	RetCode_name = map[int32]string{
		0:     "SUCCESS",
		500:   "ERROR",
		50001: "USER_NOT_EXIST",
		50002: "USER_EXIST",
		50003: "MERCHANT_NOT_EXIST",
		50004: "MERCHANT_EXIST",
		50005: "SHOP_NOT_EXIST",
		50006: "SHOP_EXIST",
		50007: "SKU_NOT_EXIST",
		50008: "SKU_EXIST",
		50009: "SKU_AMOUNT_NOT_ENOUGH",
		50010: "TRANSACTION_FAILED",
	}
	RetCode_value = map[string]int32{
		"SUCCESS":               0,
		"ERROR":                 500,
		"USER_NOT_EXIST":        50001,
		"USER_EXIST":            50002,
		"MERCHANT_NOT_EXIST":    50003,
		"MERCHANT_EXIST":        50004,
		"SHOP_NOT_EXIST":        50005,
		"SHOP_EXIST":            50006,
		"SKU_NOT_EXIST":         50007,
		"SKU_EXIST":             50008,
		"SKU_AMOUNT_NOT_ENOUGH": 50009,
		"TRANSACTION_FAILED":    50010,
	}
)

func (x RetCode) Enum() *RetCode {
	p := new(RetCode)
	*p = x
	return p
}

func (x RetCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RetCode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_micro_mall_sku_proto_sku_business_sku_proto_enumTypes[0].Descriptor()
}

func (RetCode) Type() protoreflect.EnumType {
	return &file_proto_micro_mall_sku_proto_sku_business_sku_proto_enumTypes[0]
}

func (x RetCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RetCode.Descriptor instead.
func (RetCode) EnumDescriptor() ([]byte, []int) {
	return file_proto_micro_mall_sku_proto_sku_business_sku_proto_rawDescGZIP(), []int{0}
}

type OperationType int32

const (
	OperationType_CREATE   OperationType = 0
	OperationType_UPDATE   OperationType = 1
	OperationType_DELETE   OperationType = 2
	OperationType_AUDIT    OperationType = 3
	OperationType_PUT_AWAY OperationType = 4
)

// Enum value maps for OperationType.
var (
	OperationType_name = map[int32]string{
		0: "CREATE",
		1: "UPDATE",
		2: "DELETE",
		3: "AUDIT",
		4: "PUT_AWAY",
	}
	OperationType_value = map[string]int32{
		"CREATE":   0,
		"UPDATE":   1,
		"DELETE":   2,
		"AUDIT":    3,
		"PUT_AWAY": 4,
	}
)

func (x OperationType) Enum() *OperationType {
	p := new(OperationType)
	*p = x
	return p
}

func (x OperationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperationType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_micro_mall_sku_proto_sku_business_sku_proto_enumTypes[1].Descriptor()
}

func (OperationType) Type() protoreflect.EnumType {
	return &file_proto_micro_mall_sku_proto_sku_business_sku_proto_enumTypes[1]
}

func (x OperationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperationType.Descriptor instead.
func (OperationType) EnumDescriptor() ([]byte, []int) {
	return file_proto_micro_mall_sku_proto_sku_business_sku_proto_rawDescGZIP(), []int{1}
}

type OperationMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpUid int64  `protobuf:"varint,1,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
	OpIp  string `protobuf:"bytes,2,opt,name=op_ip,json=opIp,proto3" json:"op_ip,omitempty"`
}

func (x *OperationMeta) Reset() {
	*x = OperationMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationMeta) ProtoMessage() {}

func (x *OperationMeta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationMeta.ProtoReflect.Descriptor instead.
func (*OperationMeta) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_sku_proto_sku_business_sku_proto_rawDescGZIP(), []int{0}
}

func (x *OperationMeta) GetOpUid() int64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

func (x *OperationMeta) GetOpIp() string {
	if x != nil {
		return x.OpIp
	}
	return ""
}

type InventoryEntryShop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopId int64                   `protobuf:"varint,1,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	Detail []*InventoryEntryDetail `protobuf:"bytes,2,rep,name=detail,proto3" json:"detail,omitempty"`
}

func (x *InventoryEntryShop) Reset() {
	*x = InventoryEntryShop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InventoryEntryShop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryEntryShop) ProtoMessage() {}

func (x *InventoryEntryShop) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryEntryShop.ProtoReflect.Descriptor instead.
func (*InventoryEntryShop) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_sku_proto_sku_business_sku_proto_rawDescGZIP(), []int{1}
}

func (x *InventoryEntryShop) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *InventoryEntryShop) GetDetail() []*InventoryEntryDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

type InventoryEntryDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuCode string `protobuf:"bytes,1,opt,name=sku_code,json=skuCode,proto3" json:"sku_code,omitempty"`
	Amount  int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *InventoryEntryDetail) Reset() {
	*x = InventoryEntryDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InventoryEntryDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryEntryDetail) ProtoMessage() {}

func (x *InventoryEntryDetail) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryEntryDetail.ProtoReflect.Descriptor instead.
func (*InventoryEntryDetail) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_sku_proto_sku_business_sku_proto_rawDescGZIP(), []int{2}
}

func (x *InventoryEntryDetail) GetSkuCode() string {
	if x != nil {
		return x.SkuCode
	}
	return ""
}

func (x *InventoryEntryDetail) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type DeductInventoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List          []*InventoryEntryShop `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	OutTradeNo    string                `protobuf:"bytes,2,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"`
	OperationMeta *OperationMeta        `protobuf:"bytes,199,opt,name=operation_meta,json=operationMeta,proto3" json:"operation_meta,omitempty"`
}

func (x *DeductInventoryRequest) Reset() {
	*x = DeductInventoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeductInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeductInventoryRequest) ProtoMessage() {}

func (x *DeductInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeductInventoryRequest.ProtoReflect.Descriptor instead.
func (*DeductInventoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_sku_proto_sku_business_sku_proto_rawDescGZIP(), []int{3}
}

func (x *DeductInventoryRequest) GetList() []*InventoryEntryShop {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *DeductInventoryRequest) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *DeductInventoryRequest) GetOperationMeta() *OperationMeta {
	if x != nil {
		return x.OperationMeta
	}
	return nil
}

type DeductInventoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common    *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	IsSuccess bool            `protobuf:"varint,2,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"` // 是否成功，要么全部成功，要么全部失败
}

func (x *DeductInventoryResponse) Reset() {
	*x = DeductInventoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeductInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeductInventoryResponse) ProtoMessage() {}

func (x *DeductInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeductInventoryResponse.ProtoReflect.Descriptor instead.
func (*DeductInventoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_sku_proto_sku_business_sku_proto_rawDescGZIP(), []int{4}
}

func (x *DeductInventoryResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *DeductInventoryResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type RestoreInventoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List          []*InventoryEntryShop `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	OutTradeNo    string                `protobuf:"bytes,2,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"`
	OperationMeta *OperationMeta        `protobuf:"bytes,199,opt,name=operation_meta,json=operationMeta,proto3" json:"operation_meta,omitempty"`
}

func (x *RestoreInventoryRequest) Reset() {
	*x = RestoreInventoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreInventoryRequest) ProtoMessage() {}

func (x *RestoreInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreInventoryRequest.ProtoReflect.Descriptor instead.
func (*RestoreInventoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_sku_proto_sku_business_sku_proto_rawDescGZIP(), []int{5}
}

func (x *RestoreInventoryRequest) GetList() []*InventoryEntryShop {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *RestoreInventoryRequest) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *RestoreInventoryRequest) GetOperationMeta() *OperationMeta {
	if x != nil {
		return x.OperationMeta
	}
	return nil
}

type RestoreInventoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common    *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	IsSuccess bool            `protobuf:"varint,2,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"` // 是否成功，要么全部成功，要么全部失败
}

func (x *RestoreInventoryResponse) Reset() {
	*x = RestoreInventoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreInventoryResponse) ProtoMessage() {}

func (x *RestoreInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreInventoryResponse.ProtoReflect.Descriptor instead.
func (*RestoreInventoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_sku_proto_sku_business_sku_proto_rawDescGZIP(), []int{6}
}

func (x *RestoreInventoryResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *RestoreInventoryResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type SupplementSkuPropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopId            int64          `protobuf:"varint,11,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	SkuCode           string         `protobuf:"bytes,12,opt,name=sku_code,json=skuCode,proto3" json:"sku_code,omitempty"` // 商品唯一sku
	Size              string         `protobuf:"bytes,13,opt,name=size,proto3" json:"size,omitempty"`
	Shape             string         `protobuf:"bytes,14,opt,name=shape,proto3" json:"shape,omitempty"`
	ProductionCountry string         `protobuf:"bytes,15,opt,name=production_country,json=productionCountry,proto3" json:"production_country,omitempty"`
	ProductionDate    string         `protobuf:"bytes,16,opt,name=production_date,json=productionDate,proto3" json:"production_date,omitempty"`
	ShelfLife         string         `protobuf:"bytes,17,opt,name=shelf_life,json=shelfLife,proto3" json:"shelf_life,omitempty"`
	Name              string         `protobuf:"bytes,18,opt,name=name,proto3" json:"name,omitempty"`
	OutTradeNo        string         `protobuf:"bytes,2,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"`
	OperationMeta     *OperationMeta `protobuf:"bytes,199,opt,name=operation_meta,json=operationMeta,proto3" json:"operation_meta,omitempty"`
	OperationType     OperationType  `protobuf:"varint,299,opt,name=operation_type,json=operationType,proto3,enum=sku_business.OperationType" json:"operation_type,omitempty"`
}

func (x *SupplementSkuPropertyRequest) Reset() {
	*x = SupplementSkuPropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupplementSkuPropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupplementSkuPropertyRequest) ProtoMessage() {}

func (x *SupplementSkuPropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupplementSkuPropertyRequest.ProtoReflect.Descriptor instead.
func (*SupplementSkuPropertyRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_sku_proto_sku_business_sku_proto_rawDescGZIP(), []int{7}
}

func (x *SupplementSkuPropertyRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *SupplementSkuPropertyRequest) GetSkuCode() string {
	if x != nil {
		return x.SkuCode
	}
	return ""
}

func (x *SupplementSkuPropertyRequest) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *SupplementSkuPropertyRequest) GetShape() string {
	if x != nil {
		return x.Shape
	}
	return ""
}

func (x *SupplementSkuPropertyRequest) GetProductionCountry() string {
	if x != nil {
		return x.ProductionCountry
	}
	return ""
}

func (x *SupplementSkuPropertyRequest) GetProductionDate() string {
	if x != nil {
		return x.ProductionDate
	}
	return ""
}

func (x *SupplementSkuPropertyRequest) GetShelfLife() string {
	if x != nil {
		return x.ShelfLife
	}
	return ""
}

func (x *SupplementSkuPropertyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SupplementSkuPropertyRequest) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *SupplementSkuPropertyRequest) GetOperationMeta() *OperationMeta {
	if x != nil {
		return x.OperationMeta
	}
	return nil
}

func (x *SupplementSkuPropertyRequest) GetOperationType() OperationType {
	if x != nil {
		return x.OperationType
	}
	return OperationType_CREATE
}

type SupplementSkuPropertyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *SupplementSkuPropertyResponse) Reset() {
	*x = SupplementSkuPropertyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupplementSkuPropertyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupplementSkuPropertyResponse) ProtoMessage() {}

func (x *SupplementSkuPropertyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupplementSkuPropertyResponse.ProtoReflect.Descriptor instead.
func (*SupplementSkuPropertyResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_sku_proto_sku_business_sku_proto_rawDescGZIP(), []int{8}
}

func (x *SupplementSkuPropertyResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

type GetSkuListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopId int64 `protobuf:"varint,2,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"` // 指定店铺搜索，为0则搜索全部
}

func (x *GetSkuListRequest) Reset() {
	*x = GetSkuListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSkuListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSkuListRequest) ProtoMessage() {}

func (x *GetSkuListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSkuListRequest.ProtoReflect.Descriptor instead.
func (*GetSkuListRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_sku_proto_sku_business_sku_proto_rawDescGZIP(), []int{9}
}

func (x *GetSkuListRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

type GetSkuListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SkuInventoryInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetSkuListResponse) Reset() {
	*x = GetSkuListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSkuListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSkuListResponse) ProtoMessage() {}

func (x *GetSkuListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSkuListResponse.ProtoReflect.Descriptor instead.
func (*GetSkuListResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_sku_proto_sku_business_sku_proto_rawDescGZIP(), []int{10}
}

func (x *GetSkuListResponse) GetList() []*SkuInventoryInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// 商品库存数据
type SkuInventoryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuCode       string `protobuf:"bytes,1,opt,name=sku_code,json=skuCode,proto3" json:"sku_code,omitempty"` // 商品唯一标识，代表同一个商品
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Price         string `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	Title         string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	SubTitle      string `protobuf:"bytes,5,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`
	Desc          string `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	Production    string `protobuf:"bytes,7,opt,name=production,proto3" json:"production,omitempty"`
	Supplier      string `protobuf:"bytes,8,opt,name=supplier,proto3" json:"supplier,omitempty"`
	Category      int32  `protobuf:"varint,9,opt,name=category,proto3" json:"category,omitempty"`
	Color         string `protobuf:"bytes,10,opt,name=color,proto3" json:"color,omitempty"`
	ColorCode     int32  `protobuf:"varint,11,opt,name=color_code,json=colorCode,proto3" json:"color_code,omitempty"`
	Specification string `protobuf:"bytes,12,opt,name=specification,proto3" json:"specification,omitempty"`
	DescLink      string `protobuf:"bytes,13,opt,name=desc_link,json=descLink,proto3" json:"desc_link,omitempty"`
	State         int32  `protobuf:"varint,14,opt,name=state,proto3" json:"state,omitempty"`
	Amount        int64  `protobuf:"varint,198,opt,name=amount,proto3" json:"amount,omitempty"`               // 入库数量
	ShopId        int64  `protobuf:"varint,199,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"` // 店铺id
}

func (x *SkuInventoryInfo) Reset() {
	*x = SkuInventoryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuInventoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuInventoryInfo) ProtoMessage() {}

func (x *SkuInventoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuInventoryInfo.ProtoReflect.Descriptor instead.
func (*SkuInventoryInfo) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_sku_proto_sku_business_sku_proto_rawDescGZIP(), []int{11}
}

func (x *SkuInventoryInfo) GetSkuCode() string {
	if x != nil {
		return x.SkuCode
	}
	return ""
}

func (x *SkuInventoryInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SkuInventoryInfo) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *SkuInventoryInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SkuInventoryInfo) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *SkuInventoryInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SkuInventoryInfo) GetProduction() string {
	if x != nil {
		return x.Production
	}
	return ""
}

func (x *SkuInventoryInfo) GetSupplier() string {
	if x != nil {
		return x.Supplier
	}
	return ""
}

func (x *SkuInventoryInfo) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *SkuInventoryInfo) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *SkuInventoryInfo) GetColorCode() int32 {
	if x != nil {
		return x.ColorCode
	}
	return 0
}

func (x *SkuInventoryInfo) GetSpecification() string {
	if x != nil {
		return x.Specification
	}
	return ""
}

func (x *SkuInventoryInfo) GetDescLink() string {
	if x != nil {
		return x.DescLink
	}
	return ""
}

func (x *SkuInventoryInfo) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *SkuInventoryInfo) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *SkuInventoryInfo) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

type PutAwaySkuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sku           *SkuInventoryInfo `protobuf:"bytes,1,opt,name=sku,proto3" json:"sku,omitempty"`
	OperationType OperationType     `protobuf:"varint,299,opt,name=operation_type,json=operationType,proto3,enum=sku_business.OperationType" json:"operation_type,omitempty"`
	OperationMeta *OperationMeta    `protobuf:"bytes,300,opt,name=operation_meta,json=operationMeta,proto3" json:"operation_meta,omitempty"`
}

func (x *PutAwaySkuRequest) Reset() {
	*x = PutAwaySkuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutAwaySkuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutAwaySkuRequest) ProtoMessage() {}

func (x *PutAwaySkuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutAwaySkuRequest.ProtoReflect.Descriptor instead.
func (*PutAwaySkuRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_sku_proto_sku_business_sku_proto_rawDescGZIP(), []int{12}
}

func (x *PutAwaySkuRequest) GetSku() *SkuInventoryInfo {
	if x != nil {
		return x.Sku
	}
	return nil
}

func (x *PutAwaySkuRequest) GetOperationType() OperationType {
	if x != nil {
		return x.OperationType
	}
	return OperationType_CREATE
}

func (x *PutAwaySkuRequest) GetOperationMeta() *OperationMeta {
	if x != nil {
		return x.OperationMeta
	}
	return nil
}

type PutAwaySkuResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *PutAwaySkuResponse) Reset() {
	*x = PutAwaySkuResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutAwaySkuResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutAwaySkuResponse) ProtoMessage() {}

func (x *PutAwaySkuResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutAwaySkuResponse.ProtoReflect.Descriptor instead.
func (*PutAwaySkuResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_sku_proto_sku_business_sku_proto_rawDescGZIP(), []int{13}
}

func (x *PutAwaySkuResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

type CommonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code RetCode `protobuf:"varint,1,opt,name=code,proto3,enum=sku_business.RetCode" json:"code,omitempty"`
	Msg  string  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *CommonResponse) Reset() {
	*x = CommonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResponse) ProtoMessage() {}

func (x *CommonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResponse.ProtoReflect.Descriptor instead.
func (*CommonResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_sku_proto_sku_business_sku_proto_rawDescGZIP(), []int{14}
}

func (x *CommonResponse) GetCode() RetCode {
	if x != nil {
		return x.Code
	}
	return RetCode_SUCCESS
}

func (x *CommonResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_proto_micro_mall_sku_proto_sku_business_sku_proto protoreflect.FileDescriptor

var file_proto_micro_mall_sku_proto_sku_business_sku_proto_rawDesc = []byte{
	0x0a, 0x31, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x5f, 0x6d, 0x61,
	0x6c, 0x6c, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x6b, 0x75,
	0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x73, 0x6b, 0x75, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x73, 0x6b, 0x75, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x1a, 0x3e, 0x67, 0x69, 0x74, 0x65, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x65, 0x6c,
	0x76, 0x69, 0x6e, 0x73, 0x2d, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x3b, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x74, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x70, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6f, 0x70, 0x55, 0x69, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x6f, 0x70, 0x5f,
	0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x70, 0x49, 0x70, 0x22, 0x69,
	0x0a, 0x12, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x53, 0x68, 0x6f, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x3a, 0x0a,
	0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x73, 0x6b, 0x75, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x49, 0x0a, 0x14, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb5, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x34, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x73, 0x6b, 0x75, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x70, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x43, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0xc7, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x73, 0x6b, 0x75, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0d, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x6e, 0x0a, 0x17,
	0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x6b, 0x75, 0x5f, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xb6, 0x01, 0x0a,
	0x17, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x6b, 0x75, 0x5f, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f,
	0x12, 0x43, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0xc7, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x6b, 0x75, 0x5f,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x6f, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x34, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x6b, 0x75, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xb3, 0x03, 0x0a, 0x1c, 0x53, 0x75, 0x70, 0x70, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x6b, 0x75, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x68, 0x61, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x68, 0x65, 0x6c, 0x66, 0x5f, 0x6c, 0x69, 0x66, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x68, 0x65, 0x6c, 0x66, 0x4c, 0x69, 0x66, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x4e, 0x6f, 0x12, 0x43, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x18, 0xc7, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x6b,
	0x75, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x43, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0xab, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x73, 0x6b, 0x75, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x55, 0x0a, 0x1d,
	0x53, 0x75, 0x70, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x6b, 0x75, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a,
	0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x73, 0x6b, 0x75, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x22, 0x2c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x6b, 0x75, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49,
	0x64, 0x22, 0x48, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x6b, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6b, 0x75, 0x5f, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xb7, 0x03, 0x0a, 0x10,
	0x53, 0x6b, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x17, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0xc6, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0xc7, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x68, 0x6f, 0x70, 0x49, 0x64, 0x22, 0xcf, 0x01, 0x0a, 0x11, 0x50, 0x75, 0x74, 0x41, 0x77, 0x61,
	0x79, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x03, 0x73,
	0x6b, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6b, 0x75, 0x5f, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x73, 0x6b, 0x75, 0x12, 0x43, 0x0a,
	0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0xab, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x6b, 0x75, 0x5f, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x43, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x6b,
	0x75, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x4a, 0x0a, 0x12, 0x50, 0x75, 0x74, 0x41, 0x77,
	0x61, 0x79, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a,
	0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x73, 0x6b, 0x75, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x22, 0x4d, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x73, 0x6b, 0x75, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x2a, 0xff, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x05, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0xf4, 0x03, 0x12, 0x14, 0x0a, 0x0e, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xd1, 0x86, 0x03, 0x12, 0x10, 0x0a,
	0x0a, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xd2, 0x86, 0x03, 0x12,
	0x18, 0x0a, 0x12, 0x4d, 0x45, 0x52, 0x43, 0x48, 0x41, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xd3, 0x86, 0x03, 0x12, 0x14, 0x0a, 0x0e, 0x4d, 0x45, 0x52,
	0x43, 0x48, 0x41, 0x4e, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xd4, 0x86, 0x03, 0x12,
	0x14, 0x0a, 0x0e, 0x53, 0x48, 0x4f, 0x50, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53,
	0x54, 0x10, 0xd5, 0x86, 0x03, 0x12, 0x10, 0x0a, 0x0a, 0x53, 0x48, 0x4f, 0x50, 0x5f, 0x45, 0x58,
	0x49, 0x53, 0x54, 0x10, 0xd6, 0x86, 0x03, 0x12, 0x13, 0x0a, 0x0d, 0x53, 0x4b, 0x55, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xd7, 0x86, 0x03, 0x12, 0x0f, 0x0a, 0x09,
	0x53, 0x4b, 0x55, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xd8, 0x86, 0x03, 0x12, 0x1b, 0x0a,
	0x15, 0x53, 0x4b, 0x55, 0x5f, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x45, 0x4e, 0x4f, 0x55, 0x47, 0x48, 0x10, 0xd9, 0x86, 0x03, 0x12, 0x18, 0x0a, 0x12, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0xda, 0x86, 0x03, 0x2a, 0x4c, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a,
	0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x55, 0x44,
	0x49, 0x54, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x55, 0x54, 0x5f, 0x41, 0x57, 0x41, 0x59,
	0x10, 0x04, 0x32, 0xa8, 0x05, 0x0a, 0x12, 0x53, 0x6b, 0x75, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x76, 0x0a, 0x0a, 0x50, 0x75, 0x74,
	0x41, 0x77, 0x61, 0x79, 0x53, 0x6b, 0x75, 0x12, 0x1f, 0x2e, 0x73, 0x6b, 0x75, 0x5f, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x50, 0x75, 0x74, 0x41, 0x77, 0x61, 0x79, 0x53, 0x6b,
	0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x6b, 0x75, 0x5f, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x50, 0x75, 0x74, 0x41, 0x77, 0x61, 0x79, 0x53,
	0x6b, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1f, 0x22, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6b, 0x75, 0x2f, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x70, 0x75, 0x74, 0x5f, 0x61, 0x77, 0x61, 0x79, 0x3a, 0x01,
	0x2a, 0x12, 0x6f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x6b, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1f, 0x2e, 0x73, 0x6b, 0x75, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x6b, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x73, 0x6b, 0x75, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x6b, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x6b, 0x75, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x98, 0x01, 0x0a, 0x15, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x6b, 0x75, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x2a, 0x2e, 0x73,
	0x6b, 0x75, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x75, 0x70, 0x70,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x6b, 0x75, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73, 0x6b, 0x75, 0x5f, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x6b, 0x75, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x1a, 0x1b, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x6b, 0x75, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2f,
	0x73, 0x75, 0x70, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x83, 0x01,
	0x0a, 0x0f, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x24, 0x2e, 0x73, 0x6b, 0x75, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x6b, 0x75, 0x5f, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x1a, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6b, 0x75, 0x2f,
	0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2f, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x3a, 0x01, 0x2a, 0x12, 0x87, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x25, 0x2e, 0x73, 0x6b, 0x75, 0x5f, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x73, 0x6b, 0x75, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x52,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x1a,
	0x19, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6b, 0x75, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x3a, 0x01, 0x2a, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_micro_mall_sku_proto_sku_business_sku_proto_rawDescOnce sync.Once
	file_proto_micro_mall_sku_proto_sku_business_sku_proto_rawDescData = file_proto_micro_mall_sku_proto_sku_business_sku_proto_rawDesc
)

func file_proto_micro_mall_sku_proto_sku_business_sku_proto_rawDescGZIP() []byte {
	file_proto_micro_mall_sku_proto_sku_business_sku_proto_rawDescOnce.Do(func() {
		file_proto_micro_mall_sku_proto_sku_business_sku_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_micro_mall_sku_proto_sku_business_sku_proto_rawDescData)
	})
	return file_proto_micro_mall_sku_proto_sku_business_sku_proto_rawDescData
}

var file_proto_micro_mall_sku_proto_sku_business_sku_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_micro_mall_sku_proto_sku_business_sku_proto_goTypes = []interface{}{
	(RetCode)(0),                          // 0: sku_business.RetCode
	(OperationType)(0),                    // 1: sku_business.OperationType
	(*OperationMeta)(nil),                 // 2: sku_business.OperationMeta
	(*InventoryEntryShop)(nil),            // 3: sku_business.InventoryEntryShop
	(*InventoryEntryDetail)(nil),          // 4: sku_business.InventoryEntryDetail
	(*DeductInventoryRequest)(nil),        // 5: sku_business.DeductInventoryRequest
	(*DeductInventoryResponse)(nil),       // 6: sku_business.DeductInventoryResponse
	(*RestoreInventoryRequest)(nil),       // 7: sku_business.RestoreInventoryRequest
	(*RestoreInventoryResponse)(nil),      // 8: sku_business.RestoreInventoryResponse
	(*SupplementSkuPropertyRequest)(nil),  // 9: sku_business.SupplementSkuPropertyRequest
	(*SupplementSkuPropertyResponse)(nil), // 10: sku_business.SupplementSkuPropertyResponse
	(*GetSkuListRequest)(nil),             // 11: sku_business.GetSkuListRequest
	(*GetSkuListResponse)(nil),            // 12: sku_business.GetSkuListResponse
	(*SkuInventoryInfo)(nil),              // 13: sku_business.SkuInventoryInfo
	(*PutAwaySkuRequest)(nil),             // 14: sku_business.PutAwaySkuRequest
	(*PutAwaySkuResponse)(nil),            // 15: sku_business.PutAwaySkuResponse
	(*CommonResponse)(nil),                // 16: sku_business.CommonResponse
}
var file_proto_micro_mall_sku_proto_sku_business_sku_proto_depIdxs = []int32{
	4,  // 0: sku_business.InventoryEntryShop.detail:type_name -> sku_business.InventoryEntryDetail
	3,  // 1: sku_business.DeductInventoryRequest.list:type_name -> sku_business.InventoryEntryShop
	2,  // 2: sku_business.DeductInventoryRequest.operation_meta:type_name -> sku_business.OperationMeta
	16, // 3: sku_business.DeductInventoryResponse.common:type_name -> sku_business.CommonResponse
	3,  // 4: sku_business.RestoreInventoryRequest.list:type_name -> sku_business.InventoryEntryShop
	2,  // 5: sku_business.RestoreInventoryRequest.operation_meta:type_name -> sku_business.OperationMeta
	16, // 6: sku_business.RestoreInventoryResponse.common:type_name -> sku_business.CommonResponse
	2,  // 7: sku_business.SupplementSkuPropertyRequest.operation_meta:type_name -> sku_business.OperationMeta
	1,  // 8: sku_business.SupplementSkuPropertyRequest.operation_type:type_name -> sku_business.OperationType
	16, // 9: sku_business.SupplementSkuPropertyResponse.common:type_name -> sku_business.CommonResponse
	13, // 10: sku_business.GetSkuListResponse.list:type_name -> sku_business.SkuInventoryInfo
	13, // 11: sku_business.PutAwaySkuRequest.sku:type_name -> sku_business.SkuInventoryInfo
	1,  // 12: sku_business.PutAwaySkuRequest.operation_type:type_name -> sku_business.OperationType
	2,  // 13: sku_business.PutAwaySkuRequest.operation_meta:type_name -> sku_business.OperationMeta
	16, // 14: sku_business.PutAwaySkuResponse.common:type_name -> sku_business.CommonResponse
	0,  // 15: sku_business.CommonResponse.code:type_name -> sku_business.RetCode
	14, // 16: sku_business.SkuBusinessService.PutAwaySku:input_type -> sku_business.PutAwaySkuRequest
	11, // 17: sku_business.SkuBusinessService.GetSkuList:input_type -> sku_business.GetSkuListRequest
	9,  // 18: sku_business.SkuBusinessService.SupplementSkuProperty:input_type -> sku_business.SupplementSkuPropertyRequest
	5,  // 19: sku_business.SkuBusinessService.DeductInventory:input_type -> sku_business.DeductInventoryRequest
	7,  // 20: sku_business.SkuBusinessService.RestoreInventory:input_type -> sku_business.RestoreInventoryRequest
	15, // 21: sku_business.SkuBusinessService.PutAwaySku:output_type -> sku_business.PutAwaySkuResponse
	12, // 22: sku_business.SkuBusinessService.GetSkuList:output_type -> sku_business.GetSkuListResponse
	10, // 23: sku_business.SkuBusinessService.SupplementSkuProperty:output_type -> sku_business.SupplementSkuPropertyResponse
	6,  // 24: sku_business.SkuBusinessService.DeductInventory:output_type -> sku_business.DeductInventoryResponse
	8,  // 25: sku_business.SkuBusinessService.RestoreInventory:output_type -> sku_business.RestoreInventoryResponse
	21, // [21:26] is the sub-list for method output_type
	16, // [16:21] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_proto_micro_mall_sku_proto_sku_business_sku_proto_init() }
func file_proto_micro_mall_sku_proto_sku_business_sku_proto_init() {
	if File_proto_micro_mall_sku_proto_sku_business_sku_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InventoryEntryShop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InventoryEntryDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeductInventoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeductInventoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreInventoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreInventoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupplementSkuPropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupplementSkuPropertyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSkuListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSkuListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuInventoryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutAwaySkuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutAwaySkuResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_micro_mall_sku_proto_sku_business_sku_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_micro_mall_sku_proto_sku_business_sku_proto_goTypes,
		DependencyIndexes: file_proto_micro_mall_sku_proto_sku_business_sku_proto_depIdxs,
		EnumInfos:         file_proto_micro_mall_sku_proto_sku_business_sku_proto_enumTypes,
		MessageInfos:      file_proto_micro_mall_sku_proto_sku_business_sku_proto_msgTypes,
	}.Build()
	File_proto_micro_mall_sku_proto_sku_business_sku_proto = out.File
	file_proto_micro_mall_sku_proto_sku_business_sku_proto_rawDesc = nil
	file_proto_micro_mall_sku_proto_sku_business_sku_proto_goTypes = nil
	file_proto_micro_mall_sku_proto_sku_business_sku_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SkuBusinessServiceClient is the client API for SkuBusinessService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SkuBusinessServiceClient interface {
	// 上架商品
	PutAwaySku(ctx context.Context, in *PutAwaySkuRequest, opts ...grpc.CallOption) (*PutAwaySkuResponse, error)
	// 获取店铺sku列表
	GetSkuList(ctx context.Context, in *GetSkuListRequest, opts ...grpc.CallOption) (*GetSkuListResponse, error)
	// 补充sku商品属性
	SupplementSkuProperty(ctx context.Context, in *SupplementSkuPropertyRequest, opts ...grpc.CallOption) (*SupplementSkuPropertyResponse, error)
	// 扣减库存
	DeductInventory(ctx context.Context, in *DeductInventoryRequest, opts ...grpc.CallOption) (*DeductInventoryResponse, error)
	// 恢复库存
	RestoreInventory(ctx context.Context, in *RestoreInventoryRequest, opts ...grpc.CallOption) (*RestoreInventoryResponse, error)
}

type skuBusinessServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSkuBusinessServiceClient(cc grpc.ClientConnInterface) SkuBusinessServiceClient {
	return &skuBusinessServiceClient{cc}
}

func (c *skuBusinessServiceClient) PutAwaySku(ctx context.Context, in *PutAwaySkuRequest, opts ...grpc.CallOption) (*PutAwaySkuResponse, error) {
	out := new(PutAwaySkuResponse)
	err := c.cc.Invoke(ctx, "/sku_business.SkuBusinessService/PutAwaySku", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *skuBusinessServiceClient) GetSkuList(ctx context.Context, in *GetSkuListRequest, opts ...grpc.CallOption) (*GetSkuListResponse, error) {
	out := new(GetSkuListResponse)
	err := c.cc.Invoke(ctx, "/sku_business.SkuBusinessService/GetSkuList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *skuBusinessServiceClient) SupplementSkuProperty(ctx context.Context, in *SupplementSkuPropertyRequest, opts ...grpc.CallOption) (*SupplementSkuPropertyResponse, error) {
	out := new(SupplementSkuPropertyResponse)
	err := c.cc.Invoke(ctx, "/sku_business.SkuBusinessService/SupplementSkuProperty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *skuBusinessServiceClient) DeductInventory(ctx context.Context, in *DeductInventoryRequest, opts ...grpc.CallOption) (*DeductInventoryResponse, error) {
	out := new(DeductInventoryResponse)
	err := c.cc.Invoke(ctx, "/sku_business.SkuBusinessService/DeductInventory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *skuBusinessServiceClient) RestoreInventory(ctx context.Context, in *RestoreInventoryRequest, opts ...grpc.CallOption) (*RestoreInventoryResponse, error) {
	out := new(RestoreInventoryResponse)
	err := c.cc.Invoke(ctx, "/sku_business.SkuBusinessService/RestoreInventory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SkuBusinessServiceServer is the server API for SkuBusinessService service.
type SkuBusinessServiceServer interface {
	// 上架商品
	PutAwaySku(context.Context, *PutAwaySkuRequest) (*PutAwaySkuResponse, error)
	// 获取店铺sku列表
	GetSkuList(context.Context, *GetSkuListRequest) (*GetSkuListResponse, error)
	// 补充sku商品属性
	SupplementSkuProperty(context.Context, *SupplementSkuPropertyRequest) (*SupplementSkuPropertyResponse, error)
	// 扣减库存
	DeductInventory(context.Context, *DeductInventoryRequest) (*DeductInventoryResponse, error)
	// 恢复库存
	RestoreInventory(context.Context, *RestoreInventoryRequest) (*RestoreInventoryResponse, error)
}

// UnimplementedSkuBusinessServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSkuBusinessServiceServer struct {
}

func (*UnimplementedSkuBusinessServiceServer) PutAwaySku(context.Context, *PutAwaySkuRequest) (*PutAwaySkuResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutAwaySku not implemented")
}
func (*UnimplementedSkuBusinessServiceServer) GetSkuList(context.Context, *GetSkuListRequest) (*GetSkuListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSkuList not implemented")
}
func (*UnimplementedSkuBusinessServiceServer) SupplementSkuProperty(context.Context, *SupplementSkuPropertyRequest) (*SupplementSkuPropertyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SupplementSkuProperty not implemented")
}
func (*UnimplementedSkuBusinessServiceServer) DeductInventory(context.Context, *DeductInventoryRequest) (*DeductInventoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeductInventory not implemented")
}
func (*UnimplementedSkuBusinessServiceServer) RestoreInventory(context.Context, *RestoreInventoryRequest) (*RestoreInventoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RestoreInventory not implemented")
}

func RegisterSkuBusinessServiceServer(s *grpc.Server, srv SkuBusinessServiceServer) {
	s.RegisterService(&_SkuBusinessService_serviceDesc, srv)
}

func _SkuBusinessService_PutAwaySku_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutAwaySkuRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SkuBusinessServiceServer).PutAwaySku(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sku_business.SkuBusinessService/PutAwaySku",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SkuBusinessServiceServer).PutAwaySku(ctx, req.(*PutAwaySkuRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SkuBusinessService_GetSkuList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSkuListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SkuBusinessServiceServer).GetSkuList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sku_business.SkuBusinessService/GetSkuList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SkuBusinessServiceServer).GetSkuList(ctx, req.(*GetSkuListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SkuBusinessService_SupplementSkuProperty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SupplementSkuPropertyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SkuBusinessServiceServer).SupplementSkuProperty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sku_business.SkuBusinessService/SupplementSkuProperty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SkuBusinessServiceServer).SupplementSkuProperty(ctx, req.(*SupplementSkuPropertyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SkuBusinessService_DeductInventory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeductInventoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SkuBusinessServiceServer).DeductInventory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sku_business.SkuBusinessService/DeductInventory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SkuBusinessServiceServer).DeductInventory(ctx, req.(*DeductInventoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SkuBusinessService_RestoreInventory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RestoreInventoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SkuBusinessServiceServer).RestoreInventory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sku_business.SkuBusinessService/RestoreInventory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SkuBusinessServiceServer).RestoreInventory(ctx, req.(*RestoreInventoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SkuBusinessService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sku_business.SkuBusinessService",
	HandlerType: (*SkuBusinessServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PutAwaySku",
			Handler:    _SkuBusinessService_PutAwaySku_Handler,
		},
		{
			MethodName: "GetSkuList",
			Handler:    _SkuBusinessService_GetSkuList_Handler,
		},
		{
			MethodName: "SupplementSkuProperty",
			Handler:    _SkuBusinessService_SupplementSkuProperty_Handler,
		},
		{
			MethodName: "DeductInventory",
			Handler:    _SkuBusinessService_DeductInventory_Handler,
		},
		{
			MethodName: "RestoreInventory",
			Handler:    _SkuBusinessService_RestoreInventory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/micro_mall_sku_proto/sku_business/sku.proto",
}
