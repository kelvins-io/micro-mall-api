// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.5.1
// source: proto/micro_mall_order_proto/order_business/order_business.proto

package order_business

import (
	context "context"
	_ "gitee.com/kelvins-io/common/proto/google/api"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RetCode int32

const (
	RetCode_SUCCESS                     RetCode = 0
	RetCode_ERROR                       RetCode = 500
	RetCode_ERR_REQUEST_DATA_FORMAT     RetCode = 40000
	RetCode_USER_NOT_EXIST              RetCode = 50001
	RetCode_USER_EXIST                  RetCode = 50002
	RetCode_MERCHANT_NOT_EXIST          RetCode = 50003
	RetCode_MERCHANT_EXIST              RetCode = 50004
	RetCode_SHOP_NOT_EXIST              RetCode = 50005
	RetCode_SHOP_EXIST                  RetCode = 50006
	RetCode_SKU_NOT_EXIST               RetCode = 50007
	RetCode_SKU_EXIST                   RetCode = 50008
	RetCode_SKU_AMOUNT_NOT_ENOUGH       RetCode = 50009
	RetCode_TRANSACTION_FAILED          RetCode = 50010
	RetCode_ORDER_NOT_EXIST             RetCode = 50011
	RetCode_ORDER_EXIST                 RetCode = 50012
	RetCode_ORDER_STATE_PROHIBIT        RetCode = 50013 // 订单状态不允许修改
	RetCode_ORDER_STATE_LOCKED          RetCode = 50014 // 订单处于锁定状态
	RetCode_OPERATION_NOT_EFFECT        RetCode = 50015 // 操作未生效
	RetCode_ORDER_TX_CODE_EMPTY         RetCode = 50016 // 订单事务号为空
	RetCode_ORDER_DELIVERY_NOT_EXIST    RetCode = 50017 // 订单交付信息不存在
	RetCode_ORDER_TX_CODE_NOT_EXIST     RetCode = 50018 // 订单交易号不存在
	RetCode_SKU_PRICE_VERSION_NOT_EXIST RetCode = 50019 // 商品价格版本不存在或不符合规则
	RetCode_ORDER_PAY_COMPLETED         RetCode = 50020 // 订单支付完成
	RetCode_ORDER_EXPIRE                RetCode = 50021 // 订单过期
	RetCode_ORDER_STATE_INVALID         RetCode = 50022 // 订单无效
	RetCode_REQUEST_DATA_TOO_MUCH       RetCode = 50023 // 请求数据太多
)

// Enum value maps for RetCode.
var (
	RetCode_name = map[int32]string{
		0:     "SUCCESS",
		500:   "ERROR",
		40000: "ERR_REQUEST_DATA_FORMAT",
		50001: "USER_NOT_EXIST",
		50002: "USER_EXIST",
		50003: "MERCHANT_NOT_EXIST",
		50004: "MERCHANT_EXIST",
		50005: "SHOP_NOT_EXIST",
		50006: "SHOP_EXIST",
		50007: "SKU_NOT_EXIST",
		50008: "SKU_EXIST",
		50009: "SKU_AMOUNT_NOT_ENOUGH",
		50010: "TRANSACTION_FAILED",
		50011: "ORDER_NOT_EXIST",
		50012: "ORDER_EXIST",
		50013: "ORDER_STATE_PROHIBIT",
		50014: "ORDER_STATE_LOCKED",
		50015: "OPERATION_NOT_EFFECT",
		50016: "ORDER_TX_CODE_EMPTY",
		50017: "ORDER_DELIVERY_NOT_EXIST",
		50018: "ORDER_TX_CODE_NOT_EXIST",
		50019: "SKU_PRICE_VERSION_NOT_EXIST",
		50020: "ORDER_PAY_COMPLETED",
		50021: "ORDER_EXPIRE",
		50022: "ORDER_STATE_INVALID",
		50023: "REQUEST_DATA_TOO_MUCH",
	}
	RetCode_value = map[string]int32{
		"SUCCESS":                     0,
		"ERROR":                       500,
		"ERR_REQUEST_DATA_FORMAT":     40000,
		"USER_NOT_EXIST":              50001,
		"USER_EXIST":                  50002,
		"MERCHANT_NOT_EXIST":          50003,
		"MERCHANT_EXIST":              50004,
		"SHOP_NOT_EXIST":              50005,
		"SHOP_EXIST":                  50006,
		"SKU_NOT_EXIST":               50007,
		"SKU_EXIST":                   50008,
		"SKU_AMOUNT_NOT_ENOUGH":       50009,
		"TRANSACTION_FAILED":          50010,
		"ORDER_NOT_EXIST":             50011,
		"ORDER_EXIST":                 50012,
		"ORDER_STATE_PROHIBIT":        50013,
		"ORDER_STATE_LOCKED":          50014,
		"OPERATION_NOT_EFFECT":        50015,
		"ORDER_TX_CODE_EMPTY":         50016,
		"ORDER_DELIVERY_NOT_EXIST":    50017,
		"ORDER_TX_CODE_NOT_EXIST":     50018,
		"SKU_PRICE_VERSION_NOT_EXIST": 50019,
		"ORDER_PAY_COMPLETED":         50020,
		"ORDER_EXPIRE":                50021,
		"ORDER_STATE_INVALID":         50022,
		"REQUEST_DATA_TOO_MUCH":       50023,
	}
)

func (x RetCode) Enum() *RetCode {
	p := new(RetCode)
	*p = x
	return p
}

func (x RetCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RetCode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_enumTypes[0].Descriptor()
}

func (RetCode) Type() protoreflect.EnumType {
	return &file_proto_micro_mall_order_proto_order_business_order_business_proto_enumTypes[0]
}

func (x RetCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RetCode.Descriptor instead.
func (RetCode) EnumDescriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{0}
}

type OperationType int32

const (
	OperationType_CREATE   OperationType = 0
	OperationType_UPDATE   OperationType = 1
	OperationType_DELETE   OperationType = 2
	OperationType_AUDIT    OperationType = 3
	OperationType_PUT_AWAY OperationType = 4
)

// Enum value maps for OperationType.
var (
	OperationType_name = map[int32]string{
		0: "CREATE",
		1: "UPDATE",
		2: "DELETE",
		3: "AUDIT",
		4: "PUT_AWAY",
	}
	OperationType_value = map[string]int32{
		"CREATE":   0,
		"UPDATE":   1,
		"DELETE":   2,
		"AUDIT":    3,
		"PUT_AWAY": 4,
	}
)

func (x OperationType) Enum() *OperationType {
	p := new(OperationType)
	*p = x
	return p
}

func (x OperationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperationType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_enumTypes[1].Descriptor()
}

func (OperationType) Type() protoreflect.EnumType {
	return &file_proto_micro_mall_order_proto_order_business_order_business_proto_enumTypes[1]
}

func (x OperationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperationType.Descriptor instead.
func (OperationType) EnumDescriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{1}
}

type CoinType int32

const (
	CoinType_CNY CoinType = 0
	CoinType_USD CoinType = 1
)

// Enum value maps for CoinType.
var (
	CoinType_name = map[int32]string{
		0: "CNY",
		1: "USD",
	}
	CoinType_value = map[string]int32{
		"CNY": 0,
		"USD": 1,
	}
)

func (x CoinType) Enum() *CoinType {
	p := new(CoinType)
	*p = x
	return p
}

func (x CoinType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CoinType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_enumTypes[2].Descriptor()
}

func (CoinType) Type() protoreflect.EnumType {
	return &file_proto_micro_mall_order_proto_order_business_order_business_proto_enumTypes[2]
}

func (x CoinType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CoinType.Descriptor instead.
func (CoinType) EnumDescriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{2}
}

type AccountState int32

const (
	AccountState_NORMAL  AccountState = 0
	AccountState_LOCK    AccountState = 1
	AccountState_INVALID AccountState = 2
)

// Enum value maps for AccountState.
var (
	AccountState_name = map[int32]string{
		0: "NORMAL",
		1: "LOCK",
		2: "INVALID",
	}
	AccountState_value = map[string]int32{
		"NORMAL":  0,
		"LOCK":    1,
		"INVALID": 2,
	}
)

func (x AccountState) Enum() *AccountState {
	p := new(AccountState)
	*p = x
	return p
}

func (x AccountState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountState) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_enumTypes[3].Descriptor()
}

func (AccountState) Type() protoreflect.EnumType {
	return &file_proto_micro_mall_order_proto_order_business_order_business_proto_enumTypes[3]
}

func (x AccountState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountState.Descriptor instead.
func (AccountState) EnumDescriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{3}
}

type AccountType int32

const (
	AccountType_PERSONAL AccountType = 0
	AccountType_COMPANY  AccountType = 1
	AccountType_SYSTEM   AccountType = 2
)

// Enum value maps for AccountType.
var (
	AccountType_name = map[int32]string{
		0: "PERSONAL",
		1: "COMPANY",
		2: "SYSTEM",
	}
	AccountType_value = map[string]int32{
		"PERSONAL": 0,
		"COMPANY":  1,
		"SYSTEM":   2,
	}
)

func (x AccountType) Enum() *AccountType {
	p := new(AccountType)
	*p = x
	return p
}

func (x AccountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_enumTypes[4].Descriptor()
}

func (AccountType) Type() protoreflect.EnumType {
	return &file_proto_micro_mall_order_proto_order_business_order_business_proto_enumTypes[4]
}

func (x AccountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountType.Descriptor instead.
func (AccountType) EnumDescriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{4}
}

type OrderStateType int32

const (
	OrderStateType_ORDER_EFFECTIVE OrderStateType = 0 // 有效
	OrderStateType_ORDER_LOCKED    OrderStateType = 1 // 锁定中
	OrderStateType_ORDER_INVALID   OrderStateType = 2 // 无效
)

// Enum value maps for OrderStateType.
var (
	OrderStateType_name = map[int32]string{
		0: "ORDER_EFFECTIVE",
		1: "ORDER_LOCKED",
		2: "ORDER_INVALID",
	}
	OrderStateType_value = map[string]int32{
		"ORDER_EFFECTIVE": 0,
		"ORDER_LOCKED":    1,
		"ORDER_INVALID":   2,
	}
)

func (x OrderStateType) Enum() *OrderStateType {
	p := new(OrderStateType)
	*p = x
	return p
}

func (x OrderStateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderStateType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_enumTypes[5].Descriptor()
}

func (OrderStateType) Type() protoreflect.EnumType {
	return &file_proto_micro_mall_order_proto_order_business_order_business_proto_enumTypes[5]
}

func (x OrderStateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderStateType.Descriptor instead.
func (OrderStateType) EnumDescriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{5}
}

type OrderPayStateType int32

const (
	OrderPayStateType_PAY_READY   OrderPayStateType = 0 // 支付就绪，未支付
	OrderPayStateType_PAY_RUN     OrderPayStateType = 1 // 正在支付中
	OrderPayStateType_PAY_FAILED  OrderPayStateType = 2 // 支付失败
	OrderPayStateType_PAY_SUCCESS OrderPayStateType = 3 // 支付成功
	OrderPayStateType_PAY_CANCEL  OrderPayStateType = 4 // 支付取消
)

// Enum value maps for OrderPayStateType.
var (
	OrderPayStateType_name = map[int32]string{
		0: "PAY_READY",
		1: "PAY_RUN",
		2: "PAY_FAILED",
		3: "PAY_SUCCESS",
		4: "PAY_CANCEL",
	}
	OrderPayStateType_value = map[string]int32{
		"PAY_READY":   0,
		"PAY_RUN":     1,
		"PAY_FAILED":  2,
		"PAY_SUCCESS": 3,
		"PAY_CANCEL":  4,
	}
)

func (x OrderPayStateType) Enum() *OrderPayStateType {
	p := new(OrderPayStateType)
	*p = x
	return p
}

func (x OrderPayStateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderPayStateType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_enumTypes[6].Descriptor()
}

func (OrderPayStateType) Type() protoreflect.EnumType {
	return &file_proto_micro_mall_order_proto_order_business_order_business_proto_enumTypes[6]
}

func (x OrderPayStateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderPayStateType.Descriptor instead.
func (OrderPayStateType) EnumDescriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{6}
}

type CommonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code RetCode `protobuf:"varint,1,opt,name=code,proto3,enum=order_business.RetCode" json:"code,omitempty"`
	Msg  string  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *CommonResponse) Reset() {
	*x = CommonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResponse) ProtoMessage() {}

func (x *CommonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResponse.ProtoReflect.Descriptor instead.
func (*CommonResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{0}
}

func (x *CommonResponse) GetCode() RetCode {
	if x != nil {
		return x.Code
	}
	return RetCode_SUCCESS
}

func (x *CommonResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type OperationMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpUid      int64  `protobuf:"varint,1,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
	OpIp       string `protobuf:"bytes,2,opt,name=op_ip,json=opIp,proto3" json:"op_ip,omitempty"`
	OpPlatform string `protobuf:"bytes,3,opt,name=op_platform,json=opPlatform,proto3" json:"op_platform,omitempty"` // 操作平台
	OpDevice   string `protobuf:"bytes,4,opt,name=op_device,json=opDevice,proto3" json:"op_device,omitempty"`       // 操作设备
}

func (x *OperationMeta) Reset() {
	*x = OperationMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationMeta) ProtoMessage() {}

func (x *OperationMeta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationMeta.ProtoReflect.Descriptor instead.
func (*OperationMeta) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{1}
}

func (x *OperationMeta) GetOpUid() int64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

func (x *OperationMeta) GetOpIp() string {
	if x != nil {
		return x.OpIp
	}
	return ""
}

func (x *OperationMeta) GetOpPlatform() string {
	if x != nil {
		return x.OpPlatform
	}
	return ""
}

func (x *OperationMeta) GetOpDevice() string {
	if x != nil {
		return x.OpDevice
	}
	return ""
}

type PageMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int32 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *PageMeta) Reset() {
	*x = PageMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageMeta) ProtoMessage() {}

func (x *PageMeta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageMeta.ProtoReflect.Descriptor instead.
func (*PageMeta) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{2}
}

func (x *PageMeta) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *PageMeta) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type FiltrateTimeMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime string `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   string `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *FiltrateTimeMeta) Reset() {
	*x = FiltrateTimeMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FiltrateTimeMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FiltrateTimeMeta) ProtoMessage() {}

func (x *FiltrateTimeMeta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FiltrateTimeMeta.ProtoReflect.Descriptor instead.
func (*FiltrateTimeMeta) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{3}
}

func (x *FiltrateTimeMeta) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *FiltrateTimeMeta) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type OrderStateEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderCode string            `protobuf:"bytes,1,opt,name=order_code,json=orderCode,proto3" json:"order_code,omitempty"`
	State     OrderStateType    `protobuf:"varint,2,opt,name=state,proto3,enum=order_business.OrderStateType" json:"state,omitempty"`
	PayState  OrderPayStateType `protobuf:"varint,3,opt,name=pay_state,json=payState,proto3,enum=order_business.OrderPayStateType" json:"pay_state,omitempty"`
}

func (x *OrderStateEntry) Reset() {
	*x = OrderStateEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderStateEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderStateEntry) ProtoMessage() {}

func (x *OrderStateEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderStateEntry.ProtoReflect.Descriptor instead.
func (*OrderStateEntry) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{4}
}

func (x *OrderStateEntry) GetOrderCode() string {
	if x != nil {
		return x.OrderCode
	}
	return ""
}

func (x *OrderStateEntry) GetState() OrderStateType {
	if x != nil {
		return x.State
	}
	return OrderStateType_ORDER_EFFECTIVE
}

func (x *OrderStateEntry) GetPayState() OrderPayStateType {
	if x != nil {
		return x.PayState
	}
	return OrderPayStateType_PAY_READY
}

type UpdateOrderStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntryList     []*OrderStateEntry `protobuf:"bytes,1,rep,name=entry_list,json=entryList,proto3" json:"entry_list,omitempty"`
	OperationMeta *OperationMeta     `protobuf:"bytes,2,opt,name=operation_meta,json=operationMeta,proto3" json:"operation_meta,omitempty"`
}

func (x *UpdateOrderStateRequest) Reset() {
	*x = UpdateOrderStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderStateRequest) ProtoMessage() {}

func (x *UpdateOrderStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderStateRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrderStateRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateOrderStateRequest) GetEntryList() []*OrderStateEntry {
	if x != nil {
		return x.EntryList
	}
	return nil
}

func (x *UpdateOrderStateRequest) GetOperationMeta() *OperationMeta {
	if x != nil {
		return x.OperationMeta
	}
	return nil
}

type CheckOrderStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderCodes []string `protobuf:"bytes,1,rep,name=order_codes,json=orderCodes,proto3" json:"order_codes,omitempty"`
}

func (x *CheckOrderStateRequest) Reset() {
	*x = CheckOrderStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckOrderStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckOrderStateRequest) ProtoMessage() {}

func (x *CheckOrderStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckOrderStateRequest.ProtoReflect.Descriptor instead.
func (*CheckOrderStateRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{6}
}

func (x *CheckOrderStateRequest) GetOrderCodes() []string {
	if x != nil {
		return x.OrderCodes
	}
	return nil
}

type OrderState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderCode string            `protobuf:"bytes,1,opt,name=order_code,json=orderCode,proto3" json:"order_code,omitempty"`
	PayState  OrderPayStateType `protobuf:"varint,2,opt,name=pay_state,json=payState,proto3,enum=order_business.OrderPayStateType" json:"pay_state,omitempty"`
	State     OrderStateType    `protobuf:"varint,3,opt,name=state,proto3,enum=order_business.OrderStateType" json:"state,omitempty"`
	IsExist   bool              `protobuf:"varint,4,opt,name=is_exist,json=isExist,proto3" json:"is_exist,omitempty"`
}

func (x *OrderState) Reset() {
	*x = OrderState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderState) ProtoMessage() {}

func (x *OrderState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderState.ProtoReflect.Descriptor instead.
func (*OrderState) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{7}
}

func (x *OrderState) GetOrderCode() string {
	if x != nil {
		return x.OrderCode
	}
	return ""
}

func (x *OrderState) GetPayState() OrderPayStateType {
	if x != nil {
		return x.PayState
	}
	return OrderPayStateType_PAY_READY
}

func (x *OrderState) GetState() OrderStateType {
	if x != nil {
		return x.State
	}
	return OrderStateType_ORDER_EFFECTIVE
}

func (x *OrderState) GetIsExist() bool {
	if x != nil {
		return x.IsExist
	}
	return false
}

type CheckOrderStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	List   []*OrderState   `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *CheckOrderStateResponse) Reset() {
	*x = CheckOrderStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckOrderStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckOrderStateResponse) ProtoMessage() {}

func (x *CheckOrderStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckOrderStateResponse.ProtoReflect.Descriptor instead.
func (*CheckOrderStateResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{8}
}

func (x *CheckOrderStateResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *CheckOrderStateResponse) GetList() []*OrderState {
	if x != nil {
		return x.List
	}
	return nil
}

type InspectShopOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	ShopId    int64  `protobuf:"varint,2,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	OrderCode string `protobuf:"bytes,3,opt,name=order_code,json=orderCode,proto3" json:"order_code,omitempty"`
}

func (x *InspectShopOrderRequest) Reset() {
	*x = InspectShopOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InspectShopOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InspectShopOrderRequest) ProtoMessage() {}

func (x *InspectShopOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InspectShopOrderRequest.ProtoReflect.Descriptor instead.
func (*InspectShopOrderRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{9}
}

func (x *InspectShopOrderRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *InspectShopOrderRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *InspectShopOrderRequest) GetOrderCode() string {
	if x != nil {
		return x.OrderCode
	}
	return ""
}

type InspectShopOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *InspectShopOrderResponse) Reset() {
	*x = InspectShopOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InspectShopOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InspectShopOrderResponse) ProtoMessage() {}

func (x *InspectShopOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InspectShopOrderResponse.ProtoReflect.Descriptor instead.
func (*InspectShopOrderResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{10}
}

func (x *InspectShopOrderResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

type FindOrderListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopIdList []int64           `protobuf:"varint,1,rep,packed,name=shop_id_list,json=shopIdList,proto3" json:"shop_id_list,omitempty"` // 店铺ID，用户ID不能都为空
	UidList    []int64           `protobuf:"varint,2,rep,packed,name=uid_list,json=uidList,proto3" json:"uid_list,omitempty"`            // 用户ID，店铺ID不能都为空
	TimeMeta   *FiltrateTimeMeta `protobuf:"bytes,198,opt,name=time_meta,json=timeMeta,proto3" json:"time_meta,omitempty"`               // 时间参数
	PageMeta   *PageMeta         `protobuf:"bytes,199,opt,name=page_meta,json=pageMeta,proto3" json:"page_meta,omitempty"`               // 分页
}

func (x *FindOrderListRequest) Reset() {
	*x = FindOrderListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOrderListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOrderListRequest) ProtoMessage() {}

func (x *FindOrderListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOrderListRequest.ProtoReflect.Descriptor instead.
func (*FindOrderListRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{11}
}

func (x *FindOrderListRequest) GetShopIdList() []int64 {
	if x != nil {
		return x.ShopIdList
	}
	return nil
}

func (x *FindOrderListRequest) GetUidList() []int64 {
	if x != nil {
		return x.UidList
	}
	return nil
}

func (x *FindOrderListRequest) GetTimeMeta() *FiltrateTimeMeta {
	if x != nil {
		return x.TimeMeta
	}
	return nil
}

func (x *FindOrderListRequest) GetPageMeta() *PageMeta {
	if x != nil {
		return x.PageMeta
	}
	return nil
}

type OrderListEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderCode   string            `protobuf:"bytes,1,opt,name=order_code,json=orderCode,proto3" json:"order_code,omitempty"`
	Uid         int64             `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	ShopId      int64             `protobuf:"varint,3,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	Description string            `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	ClientIp    string            `protobuf:"bytes,5,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	DeviceCode  string            `protobuf:"bytes,6,opt,name=device_code,json=deviceCode,proto3" json:"device_code,omitempty"`
	State       OrderStateType    `protobuf:"varint,7,opt,name=state,proto3,enum=order_business.OrderStateType" json:"state,omitempty"`
	PayState    OrderPayStateType `protobuf:"varint,8,opt,name=pay_state,json=payState,proto3,enum=order_business.OrderPayStateType" json:"pay_state,omitempty"`
	Money       string            `protobuf:"bytes,9,opt,name=money,proto3" json:"money,omitempty"`
	CreateTime  string            `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
}

func (x *OrderListEntry) Reset() {
	*x = OrderListEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderListEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderListEntry) ProtoMessage() {}

func (x *OrderListEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderListEntry.ProtoReflect.Descriptor instead.
func (*OrderListEntry) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{12}
}

func (x *OrderListEntry) GetOrderCode() string {
	if x != nil {
		return x.OrderCode
	}
	return ""
}

func (x *OrderListEntry) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *OrderListEntry) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *OrderListEntry) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OrderListEntry) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *OrderListEntry) GetDeviceCode() string {
	if x != nil {
		return x.DeviceCode
	}
	return ""
}

func (x *OrderListEntry) GetState() OrderStateType {
	if x != nil {
		return x.State
	}
	return OrderStateType_ORDER_EFFECTIVE
}

func (x *OrderListEntry) GetPayState() OrderPayStateType {
	if x != nil {
		return x.PayState
	}
	return OrderPayStateType_PAY_READY
}

func (x *OrderListEntry) GetMoney() string {
	if x != nil {
		return x.Money
	}
	return ""
}

func (x *OrderListEntry) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type FindOrderListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonResponse   `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	List   []*OrderListEntry `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	Total  int64             `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"` // 当前条件下订单总数
}

func (x *FindOrderListResponse) Reset() {
	*x = FindOrderListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOrderListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOrderListResponse) ProtoMessage() {}

func (x *FindOrderListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOrderListResponse.ProtoReflect.Descriptor instead.
func (*FindOrderListResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{13}
}

func (x *FindOrderListResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *FindOrderListResponse) GetList() []*OrderListEntry {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *FindOrderListResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type OrderTradeNoticeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	OrderTxCode string `protobuf:"bytes,2,opt,name=order_tx_code,json=orderTxCode,proto3" json:"order_tx_code,omitempty"` // 订单交易号
	PayId       string `protobuf:"bytes,3,opt,name=pay_id,json=payId,proto3" json:"pay_id,omitempty"`                     // 支付ID（支付后产生）
}

func (x *OrderTradeNoticeRequest) Reset() {
	*x = OrderTradeNoticeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderTradeNoticeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderTradeNoticeRequest) ProtoMessage() {}

func (x *OrderTradeNoticeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderTradeNoticeRequest.ProtoReflect.Descriptor instead.
func (*OrderTradeNoticeRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{14}
}

func (x *OrderTradeNoticeRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *OrderTradeNoticeRequest) GetOrderTxCode() string {
	if x != nil {
		return x.OrderTxCode
	}
	return ""
}

func (x *OrderTradeNoticeRequest) GetPayId() string {
	if x != nil {
		return x.PayId
	}
	return ""
}

type OrderTradeNoticeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *OrderTradeNoticeResponse) Reset() {
	*x = OrderTradeNoticeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderTradeNoticeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderTradeNoticeResponse) ProtoMessage() {}

func (x *OrderTradeNoticeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderTradeNoticeResponse.ProtoReflect.Descriptor instead.
func (*OrderTradeNoticeResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{15}
}

func (x *OrderTradeNoticeResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

type UpdateOrderStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *UpdateOrderStateResponse) Reset() {
	*x = UpdateOrderStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderStateResponse) ProtoMessage() {}

func (x *UpdateOrderStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderStateResponse.ProtoReflect.Descriptor instead.
func (*UpdateOrderStateResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateOrderStateResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

type GetOrderSkuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxCode string `protobuf:"bytes,1,opt,name=tx_code,json=txCode,proto3" json:"tx_code,omitempty"`
}

func (x *GetOrderSkuRequest) Reset() {
	*x = GetOrderSkuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderSkuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderSkuRequest) ProtoMessage() {}

func (x *GetOrderSkuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderSkuRequest.ProtoReflect.Descriptor instead.
func (*GetOrderSkuRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{17}
}

func (x *GetOrderSkuRequest) GetTxCode() string {
	if x != nil {
		return x.TxCode
	}
	return ""
}

type GetOrderSkuResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common    *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	OrderList []*OrderSku     `protobuf:"bytes,2,rep,name=order_list,json=orderList,proto3" json:"order_list,omitempty"`
}

func (x *GetOrderSkuResponse) Reset() {
	*x = GetOrderSkuResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderSkuResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderSkuResponse) ProtoMessage() {}

func (x *GetOrderSkuResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderSkuResponse.ProtoReflect.Descriptor instead.
func (*GetOrderSkuResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{18}
}

func (x *GetOrderSkuResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetOrderSkuResponse) GetOrderList() []*OrderSku {
	if x != nil {
		return x.OrderList
	}
	return nil
}

type OrderSku struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderCode string        `protobuf:"bytes,1,opt,name=order_code,json=orderCode,proto3" json:"order_code,omitempty"`
	Goods     []*OrderGoods `protobuf:"bytes,2,rep,name=goods,proto3" json:"goods,omitempty"` // 商品列表
}

func (x *OrderSku) Reset() {
	*x = OrderSku{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderSku) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderSku) ProtoMessage() {}

func (x *OrderSku) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderSku.ProtoReflect.Descriptor instead.
func (*OrderSku) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{19}
}

func (x *OrderSku) GetOrderCode() string {
	if x != nil {
		return x.OrderCode
	}
	return ""
}

func (x *OrderSku) GetGoods() []*OrderGoods {
	if x != nil {
		return x.Goods
	}
	return nil
}

type GetOrderDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxCode string `protobuf:"bytes,1,opt,name=tx_code,json=txCode,proto3" json:"tx_code,omitempty"`
}

func (x *GetOrderDetailRequest) Reset() {
	*x = GetOrderDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderDetailRequest) ProtoMessage() {}

func (x *GetOrderDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderDetailRequest.ProtoReflect.Descriptor instead.
func (*GetOrderDetailRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{20}
}

func (x *GetOrderDetailRequest) GetTxCode() string {
	if x != nil {
		return x.TxCode
	}
	return ""
}

type ShopOrderDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderCode   string            `protobuf:"bytes,1,opt,name=order_code,json=orderCode,proto3" json:"order_code,omitempty"`
	Merchant    string            `protobuf:"bytes,2,opt,name=merchant,proto3" json:"merchant,omitempty"`                       // 店铺商户,店铺主体
	TimeExpire  string            `protobuf:"bytes,3,opt,name=time_expire,json=timeExpire,proto3" json:"time_expire,omitempty"` // 订单有效期
	NotifyUrl   string            `protobuf:"bytes,4,opt,name=notify_url,json=notifyUrl,proto3" json:"notify_url,omitempty"`    // 订单支付成功通知
	Description string            `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`                 // 订单描述
	Detail      *TradeGoodsDetail `protobuf:"bytes,199,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *ShopOrderDetail) Reset() {
	*x = ShopOrderDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopOrderDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopOrderDetail) ProtoMessage() {}

func (x *ShopOrderDetail) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopOrderDetail.ProtoReflect.Descriptor instead.
func (*ShopOrderDetail) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{21}
}

func (x *ShopOrderDetail) GetOrderCode() string {
	if x != nil {
		return x.OrderCode
	}
	return ""
}

func (x *ShopOrderDetail) GetMerchant() string {
	if x != nil {
		return x.Merchant
	}
	return ""
}

func (x *ShopOrderDetail) GetTimeExpire() string {
	if x != nil {
		return x.TimeExpire
	}
	return ""
}

func (x *ShopOrderDetail) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

func (x *ShopOrderDetail) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ShopOrderDetail) GetDetail() *TradeGoodsDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

type GetOrderDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common   *CommonResponse    `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Account  string             `protobuf:"bytes,4,opt,name=account,proto3" json:"account,omitempty"`                                                 // 订单涉及的用户
	CoinType CoinType           `protobuf:"varint,2,opt,name=coin_type,json=coinType,proto3,enum=order_business.CoinType" json:"coin_type,omitempty"` // 币种
	List     []*ShopOrderDetail `protobuf:"bytes,90,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetOrderDetailResponse) Reset() {
	*x = GetOrderDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderDetailResponse) ProtoMessage() {}

func (x *GetOrderDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderDetailResponse.ProtoReflect.Descriptor instead.
func (*GetOrderDetailResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{22}
}

func (x *GetOrderDetailResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetOrderDetailResponse) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *GetOrderDetailResponse) GetCoinType() CoinType {
	if x != nil {
		return x.CoinType
	}
	return CoinType_CNY
}

func (x *GetOrderDetailResponse) GetList() []*ShopOrderDetail {
	if x != nil {
		return x.List
	}
	return nil
}

type TradeGoodsDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Money string `protobuf:"bytes,1,opt,name=money,proto3" json:"money,omitempty"` // 需要支付金额
}

func (x *TradeGoodsDetail) Reset() {
	*x = TradeGoodsDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeGoodsDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeGoodsDetail) ProtoMessage() {}

func (x *TradeGoodsDetail) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeGoodsDetail.ProtoReflect.Descriptor instead.
func (*TradeGoodsDetail) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{23}
}

func (x *TradeGoodsDetail) GetMoney() string {
	if x != nil {
		return x.Money
	}
	return ""
}

type OrderDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopDetail []*OrderShopDetail `protobuf:"bytes,1,rep,name=shop_detail,json=shopDetail,proto3" json:"shop_detail,omitempty"`
}

func (x *OrderDetail) Reset() {
	*x = OrderDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail) ProtoMessage() {}

func (x *OrderDetail) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail.ProtoReflect.Descriptor instead.
func (*OrderDetail) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{24}
}

func (x *OrderDetail) GetShopDetail() []*OrderShopDetail {
	if x != nil {
		return x.ShopDetail
	}
	return nil
}

// 同一个门店的商品
type OrderShopDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopId    int64           `protobuf:"varint,1,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	CoinType  CoinType        `protobuf:"varint,6,opt,name=coin_type,json=coinType,proto3,enum=order_business.CoinType" json:"coin_type,omitempty"` // 同一个店铺使用一种币结算
	Goods     []*OrderGoods   `protobuf:"bytes,7,rep,name=goods,proto3" json:"goods,omitempty"`                                                     // 商品列表
	SceneInfo *OrderSceneInfo `protobuf:"bytes,199,opt,name=scene_info,json=sceneInfo,proto3" json:"scene_info,omitempty"`                          // 场景
}

func (x *OrderShopDetail) Reset() {
	*x = OrderShopDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderShopDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderShopDetail) ProtoMessage() {}

func (x *OrderShopDetail) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderShopDetail.ProtoReflect.Descriptor instead.
func (*OrderShopDetail) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{25}
}

func (x *OrderShopDetail) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *OrderShopDetail) GetCoinType() CoinType {
	if x != nil {
		return x.CoinType
	}
	return CoinType_CNY
}

func (x *OrderShopDetail) GetGoods() []*OrderGoods {
	if x != nil {
		return x.Goods
	}
	return nil
}

func (x *OrderShopDetail) GetSceneInfo() *OrderSceneInfo {
	if x != nil {
		return x.SceneInfo
	}
	return nil
}

type OrderGoods struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuCode   string `protobuf:"bytes,2,opt,name=sku_code,json=skuCode,proto3" json:"sku_code,omitempty"`
	Price     string `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	Amount    int64  `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Name      string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Reduction string `protobuf:"bytes,6,opt,name=reduction,proto3" json:"reduction,omitempty"`
	Version   int64  `protobuf:"varint,7,opt,name=version,proto3" json:"version,omitempty"` // 商品价格版本，应对商品价格调整
}

func (x *OrderGoods) Reset() {
	*x = OrderGoods{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderGoods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderGoods) ProtoMessage() {}

func (x *OrderGoods) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderGoods.ProtoReflect.Descriptor instead.
func (*OrderGoods) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{26}
}

func (x *OrderGoods) GetSkuCode() string {
	if x != nil {
		return x.SkuCode
	}
	return ""
}

func (x *OrderGoods) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *OrderGoods) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *OrderGoods) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderGoods) GetReduction() string {
	if x != nil {
		return x.Reduction
	}
	return ""
}

func (x *OrderGoods) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

// 一个店铺的商品算一个订单，如果同时包含多个店铺则有多个订单
type CreateOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid           int64              `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Time          string             `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Description   string             `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                            // 订单描述
	PayerClientIp string             `protobuf:"bytes,4,opt,name=payer_client_ip,json=payerClientIp,proto3" json:"payer_client_ip,omitempty"` // 用户终端IP
	DeviceId      string             `protobuf:"bytes,5,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`                  // 用户设备号
	OrderTxCode   string             `protobuf:"bytes,298,opt,name=order_tx_code,json=orderTxCode,proto3" json:"order_tx_code,omitempty"`
	Detail        *OrderDetail       `protobuf:"bytes,299,opt,name=detail,proto3" json:"detail,omitempty"`
	DeliveryInfo  *OrderDeliveryInfo `protobuf:"bytes,300,opt,name=delivery_info,json=deliveryInfo,proto3" json:"delivery_info,omitempty"` // 订单交付信息
}

func (x *CreateOrderRequest) Reset() {
	*x = CreateOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderRequest) ProtoMessage() {}

func (x *CreateOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateOrderRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{27}
}

func (x *CreateOrderRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CreateOrderRequest) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *CreateOrderRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateOrderRequest) GetPayerClientIp() string {
	if x != nil {
		return x.PayerClientIp
	}
	return ""
}

func (x *CreateOrderRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *CreateOrderRequest) GetOrderTxCode() string {
	if x != nil {
		return x.OrderTxCode
	}
	return ""
}

func (x *CreateOrderRequest) GetDetail() *OrderDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

func (x *CreateOrderRequest) GetDeliveryInfo() *OrderDeliveryInfo {
	if x != nil {
		return x.DeliveryInfo
	}
	return nil
}

type OrderDeliveryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserDeliveryId int32 `protobuf:"varint,1,opt,name=user_delivery_id,json=userDeliveryId,proto3" json:"user_delivery_id,omitempty"` // 用户收货地址
}

func (x *OrderDeliveryInfo) Reset() {
	*x = OrderDeliveryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDeliveryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDeliveryInfo) ProtoMessage() {}

func (x *OrderDeliveryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDeliveryInfo.ProtoReflect.Descriptor instead.
func (*OrderDeliveryInfo) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{28}
}

func (x *OrderDeliveryInfo) GetUserDeliveryId() int32 {
	if x != nil {
		return x.UserDeliveryId
	}
	return 0
}

// 支付场景信息
type OrderSceneInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreInfo *StoreInfo `protobuf:"bytes,999,opt,name=store_info,json=storeInfo,proto3" json:"store_info,omitempty"`
}

func (x *OrderSceneInfo) Reset() {
	*x = OrderSceneInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderSceneInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderSceneInfo) ProtoMessage() {}

func (x *OrderSceneInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderSceneInfo.ProtoReflect.Descriptor instead.
func (*OrderSceneInfo) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{29}
}

func (x *OrderSceneInfo) GetStoreInfo() *StoreInfo {
	if x != nil {
		return x.StoreInfo
	}
	return nil
}

// 门店信息
type StoreInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                            // 门店编号
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                         // 门店名称
	AreaCode string `protobuf:"bytes,3,opt,name=area_code,json=areaCode,proto3" json:"area_code,omitempty"` // 地区编码
	Address  string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`                   // 详细地址
}

func (x *StoreInfo) Reset() {
	*x = StoreInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreInfo) ProtoMessage() {}

func (x *StoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreInfo.ProtoReflect.Descriptor instead.
func (*StoreInfo) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{30}
}

func (x *StoreInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StoreInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StoreInfo) GetAreaCode() string {
	if x != nil {
		return x.AreaCode
	}
	return ""
}

func (x *StoreInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type OrderEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderCode  string `protobuf:"bytes,10,opt,name=order_code,json=orderCode,proto3" json:"order_code,omitempty"`    // 订单号
	TimeExpire string `protobuf:"bytes,11,opt,name=time_expire,json=timeExpire,proto3" json:"time_expire,omitempty"` // 订单有效时间
}

func (x *OrderEntry) Reset() {
	*x = OrderEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderEntry) ProtoMessage() {}

func (x *OrderEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderEntry.ProtoReflect.Descriptor instead.
func (*OrderEntry) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{31}
}

func (x *OrderEntry) GetOrderCode() string {
	if x != nil {
		return x.OrderCode
	}
	return ""
}

func (x *OrderEntry) GetTimeExpire() string {
	if x != nil {
		return x.TimeExpire
	}
	return ""
}

type CreateOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	TxCode string          `protobuf:"bytes,2,opt,name=tx_code,json=txCode,proto3" json:"tx_code,omitempty"`
}

func (x *CreateOrderResponse) Reset() {
	*x = CreateOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderResponse) ProtoMessage() {}

func (x *CreateOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderResponse.ProtoReflect.Descriptor instead.
func (*CreateOrderResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{32}
}

func (x *CreateOrderResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *CreateOrderResponse) GetTxCode() string {
	if x != nil {
		return x.TxCode
	}
	return ""
}

type CheckOrderExistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	OrderTxCode string `protobuf:"bytes,2,opt,name=order_tx_code,json=orderTxCode,proto3" json:"order_tx_code,omitempty"`
}

func (x *CheckOrderExistRequest) Reset() {
	*x = CheckOrderExistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckOrderExistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckOrderExistRequest) ProtoMessage() {}

func (x *CheckOrderExistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckOrderExistRequest.ProtoReflect.Descriptor instead.
func (*CheckOrderExistRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{33}
}

func (x *CheckOrderExistRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CheckOrderExistRequest) GetOrderTxCode() string {
	if x != nil {
		return x.OrderTxCode
	}
	return ""
}

type CheckOrderExistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common  *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	IsExist bool            `protobuf:"varint,2,opt,name=is_exist,json=isExist,proto3" json:"is_exist,omitempty"`
}

func (x *CheckOrderExistResponse) Reset() {
	*x = CheckOrderExistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckOrderExistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckOrderExistResponse) ProtoMessage() {}

func (x *CheckOrderExistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckOrderExistResponse.ProtoReflect.Descriptor instead.
func (*CheckOrderExistResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{34}
}

func (x *CheckOrderExistResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *CheckOrderExistResponse) GetIsExist() bool {
	if x != nil {
		return x.IsExist
	}
	return false
}

type GenOrderTxCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GenOrderTxCodeRequest) Reset() {
	*x = GenOrderTxCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenOrderTxCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenOrderTxCodeRequest) ProtoMessage() {}

func (x *GenOrderTxCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenOrderTxCodeRequest.ProtoReflect.Descriptor instead.
func (*GenOrderTxCodeRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{35}
}

func (x *GenOrderTxCodeRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type GenOrderTxCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common      *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	OrderTxCode string          `protobuf:"bytes,2,opt,name=order_tx_code,json=orderTxCode,proto3" json:"order_tx_code,omitempty"`
}

func (x *GenOrderTxCodeResponse) Reset() {
	*x = GenOrderTxCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenOrderTxCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenOrderTxCodeResponse) ProtoMessage() {}

func (x *GenOrderTxCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenOrderTxCodeResponse.ProtoReflect.Descriptor instead.
func (*GenOrderTxCodeResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP(), []int{36}
}

func (x *GenOrderTxCodeResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GenOrderTxCodeResponse) GetOrderTxCode() string {
	if x != nil {
		return x.OrderTxCode
	}
	return ""
}

var File_proto_micro_mall_order_proto_order_business_order_business_proto protoreflect.FileDescriptor

var file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDesc = []byte{
	0x0a, 0x40, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x5f, 0x6d, 0x61,
	0x6c, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x1a, 0x3e, 0x67, 0x69, 0x74, 0x65, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x65,
	0x6c, 0x76, 0x69, 0x6e, 0x73, 0x2d, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x4f, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x22, 0x79, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x74, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x70, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x70, 0x55, 0x69, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x6f,
	0x70, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x70, 0x49, 0x70,
	0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x70, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x42,
	0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0x4c, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x74, 0x72, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0xa6, 0x01, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x70, 0x61, 0x79,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x70, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x17, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0d, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x39, 0x0a, 0x16, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x70, 0x61, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73,
	0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x17, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x36, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x63, 0x0a, 0x17, 0x49, 0x6e, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x52,
	0x0a, 0x18, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x22, 0xcb, 0x01, 0x0a, 0x14, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x73,
	0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x07, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0xc6, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x72, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08,
	0x74, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0xc7, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x22, 0xe7, 0x02, 0x0a, 0x0e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x12, 0x1f, 0x0a, 0x0b,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x34, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x70, 0x61, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x15, 0x46,
	0x69, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x66, 0x0a, 0x17, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x78, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x54, 0x78, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x61, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x79, 0x49, 0x64, 0x22, 0x52,
	0x0a, 0x18, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x22, 0x52, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36,
	0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x2d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x78, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x78, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a,
	0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x6b, 0x75, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x5b,
	0x0a, 0x08, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6b, 0x75, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x52, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x22, 0x30, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xe9, 0x01,
	0x0a, 0x0f, 0x53, 0x68, 0x6f, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39,
	0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0xc7, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0xd6, 0x01, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x5a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x68, 0x6f,
	0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x28, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x64, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x22, 0x4f, 0x0a, 0x0b,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x40, 0x0a, 0x0b, 0x73,
	0x68, 0x6f, 0x70, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0xd3, 0x01,
	0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x09, 0x63, 0x6f,
	0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43,
	0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x30, 0x0a, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x05, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0xc7, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0xa1, 0x01, 0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xc5, 0x02, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x70, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x78, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0xaa, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x78, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x34, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0xab, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x47, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x3d, 0x0a, 0x11, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x64, 0x22, 0x4b,
	0x0a, 0x0e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xe7,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x66, 0x0a, 0x09, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x61, 0x72, 0x65, 0x61, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0x4c, 0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x22, 0x66, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x78, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x4e, 0x0a, 0x16, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74,
	0x78, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x54, 0x78, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x6c, 0x0a, 0x17, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08,
	0x69, 0x73, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x69, 0x73, 0x45, 0x78, 0x69, 0x73, 0x74, 0x22, 0x29, 0x0a, 0x15, 0x47, 0x65, 0x6e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x54, 0x78, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x22, 0x74, 0x0a, 0x16, 0x47, 0x65, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x78,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x78,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x54, 0x78, 0x43, 0x6f, 0x64, 0x65, 0x2a, 0xfe, 0x04, 0x0a, 0x07, 0x52, 0x65, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xf4, 0x03, 0x12, 0x1d, 0x0a,
	0x17, 0x45, 0x52, 0x52, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x44, 0x41, 0x54,
	0x41, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x10, 0xc0, 0xb8, 0x02, 0x12, 0x14, 0x0a, 0x0e,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xd1,
	0x86, 0x03, 0x12, 0x10, 0x0a, 0x0a, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54,
	0x10, 0xd2, 0x86, 0x03, 0x12, 0x18, 0x0a, 0x12, 0x4d, 0x45, 0x52, 0x43, 0x48, 0x41, 0x4e, 0x54,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xd3, 0x86, 0x03, 0x12, 0x14,
	0x0a, 0x0e, 0x4d, 0x45, 0x52, 0x43, 0x48, 0x41, 0x4e, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54,
	0x10, 0xd4, 0x86, 0x03, 0x12, 0x14, 0x0a, 0x0e, 0x53, 0x48, 0x4f, 0x50, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xd5, 0x86, 0x03, 0x12, 0x10, 0x0a, 0x0a, 0x53, 0x48,
	0x4f, 0x50, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xd6, 0x86, 0x03, 0x12, 0x13, 0x0a, 0x0d,
	0x53, 0x4b, 0x55, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xd7, 0x86,
	0x03, 0x12, 0x0f, 0x0a, 0x09, 0x53, 0x4b, 0x55, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xd8,
	0x86, 0x03, 0x12, 0x1b, 0x0a, 0x15, 0x53, 0x4b, 0x55, 0x5f, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x4e, 0x4f, 0x55, 0x47, 0x48, 0x10, 0xd9, 0x86, 0x03, 0x12,
	0x18, 0x0a, 0x12, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0xda, 0x86, 0x03, 0x12, 0x15, 0x0a, 0x0f, 0x4f, 0x52, 0x44,
	0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xdb, 0x86, 0x03,
	0x12, 0x11, 0x0a, 0x0b, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10,
	0xdc, 0x86, 0x03, 0x12, 0x1a, 0x0a, 0x14, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x48, 0x49, 0x42, 0x49, 0x54, 0x10, 0xdd, 0x86, 0x03, 0x12,
	0x18, 0x0a, 0x12, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4c,
	0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0xde, 0x86, 0x03, 0x12, 0x1a, 0x0a, 0x14, 0x4f, 0x50, 0x45,
	0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x46, 0x46, 0x45, 0x43,
	0x54, 0x10, 0xdf, 0x86, 0x03, 0x12, 0x19, 0x0a, 0x13, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x54,
	0x58, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0xe0, 0x86, 0x03,
	0x12, 0x1e, 0x0a, 0x18, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45,
	0x52, 0x59, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xe1, 0x86, 0x03,
	0x12, 0x1d, 0x0a, 0x17, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x54, 0x58, 0x5f, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xe2, 0x86, 0x03, 0x12,
	0x21, 0x0a, 0x1b, 0x53, 0x4b, 0x55, 0x5f, 0x50, 0x52, 0x49, 0x43, 0x45, 0x5f, 0x56, 0x45, 0x52,
	0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xe3,
	0x86, 0x03, 0x12, 0x19, 0x0a, 0x13, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x50, 0x41, 0x59, 0x5f,
	0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0xe4, 0x86, 0x03, 0x12, 0x12, 0x0a,
	0x0c, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x10, 0xe5, 0x86,
	0x03, 0x12, 0x19, 0x0a, 0x13, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0xe6, 0x86, 0x03, 0x12, 0x1b, 0x0a, 0x15,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x4f, 0x4f,
	0x5f, 0x4d, 0x55, 0x43, 0x48, 0x10, 0xe7, 0x86, 0x03, 0x2a, 0x4c, 0x0a, 0x0d, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x52,
	0x45, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x12, 0x09,
	0x0a, 0x05, 0x41, 0x55, 0x44, 0x49, 0x54, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x55, 0x54,
	0x5f, 0x41, 0x57, 0x41, 0x59, 0x10, 0x04, 0x2a, 0x1c, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x4e, 0x59, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x55, 0x53, 0x44, 0x10, 0x01, 0x2a, 0x31, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x02, 0x2a, 0x34, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x45, 0x52, 0x53, 0x4f,
	0x4e, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x4e, 0x59,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x02, 0x2a, 0x4a,
	0x0a, 0x0e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x45, 0x46, 0x46, 0x45, 0x43, 0x54,
	0x49, 0x56, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x4c,
	0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x52, 0x44, 0x45, 0x52,
	0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x02, 0x2a, 0x60, 0x0a, 0x11, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0d, 0x0a, 0x09, 0x50, 0x41, 0x59, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x50, 0x41, 0x59, 0x5f, 0x52, 0x55, 0x4e, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x50,
	0x41, 0x59, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x50,
	0x41, 0x59, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a,
	0x50, 0x41, 0x59, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x10, 0x04, 0x32, 0xf8, 0x09, 0x0a,
	0x14, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x77, 0x0a, 0x0e, 0x47, 0x65, 0x6e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x54, 0x78, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x54, 0x78, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x47, 0x65, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x78, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e,
	0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x80,
	0x01, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x12, 0x26, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31,
	0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x65, 0x78, 0x69, 0x73,
	0x74, 0x12, 0x73, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x22, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x15, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x79, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12,
	0x10, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x6d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6b, 0x75,
	0x12, 0x22, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6b,
	0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0f, 0x12, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x73, 0x6b, 0x75,
	0x12, 0x81, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x27, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14,
	0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x3a, 0x01, 0x2a, 0x12, 0x82, 0x01, 0x0a, 0x10, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x27, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x7e, 0x0a, 0x0f, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x3a, 0x01, 0x2a, 0x12, 0x74, 0x0a, 0x0d, 0x46, 0x69, 0x6e,
	0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12,
	0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x85, 0x01, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x53, 0x68, 0x6f,
	0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x49,
	0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12,
	0x16, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x2f,
	0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescOnce sync.Once
	file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescData = file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDesc
)

func file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescGZIP() []byte {
	file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescOnce.Do(func() {
		file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescData)
	})
	return file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDescData
}

var file_proto_micro_mall_order_proto_order_business_order_business_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_proto_micro_mall_order_proto_order_business_order_business_proto_goTypes = []interface{}{
	(RetCode)(0),                     // 0: order_business.RetCode
	(OperationType)(0),               // 1: order_business.OperationType
	(CoinType)(0),                    // 2: order_business.CoinType
	(AccountState)(0),                // 3: order_business.AccountState
	(AccountType)(0),                 // 4: order_business.AccountType
	(OrderStateType)(0),              // 5: order_business.OrderStateType
	(OrderPayStateType)(0),           // 6: order_business.OrderPayStateType
	(*CommonResponse)(nil),           // 7: order_business.CommonResponse
	(*OperationMeta)(nil),            // 8: order_business.OperationMeta
	(*PageMeta)(nil),                 // 9: order_business.PageMeta
	(*FiltrateTimeMeta)(nil),         // 10: order_business.FiltrateTimeMeta
	(*OrderStateEntry)(nil),          // 11: order_business.OrderStateEntry
	(*UpdateOrderStateRequest)(nil),  // 12: order_business.UpdateOrderStateRequest
	(*CheckOrderStateRequest)(nil),   // 13: order_business.CheckOrderStateRequest
	(*OrderState)(nil),               // 14: order_business.OrderState
	(*CheckOrderStateResponse)(nil),  // 15: order_business.CheckOrderStateResponse
	(*InspectShopOrderRequest)(nil),  // 16: order_business.InspectShopOrderRequest
	(*InspectShopOrderResponse)(nil), // 17: order_business.InspectShopOrderResponse
	(*FindOrderListRequest)(nil),     // 18: order_business.FindOrderListRequest
	(*OrderListEntry)(nil),           // 19: order_business.OrderListEntry
	(*FindOrderListResponse)(nil),    // 20: order_business.FindOrderListResponse
	(*OrderTradeNoticeRequest)(nil),  // 21: order_business.OrderTradeNoticeRequest
	(*OrderTradeNoticeResponse)(nil), // 22: order_business.OrderTradeNoticeResponse
	(*UpdateOrderStateResponse)(nil), // 23: order_business.UpdateOrderStateResponse
	(*GetOrderSkuRequest)(nil),       // 24: order_business.GetOrderSkuRequest
	(*GetOrderSkuResponse)(nil),      // 25: order_business.GetOrderSkuResponse
	(*OrderSku)(nil),                 // 26: order_business.OrderSku
	(*GetOrderDetailRequest)(nil),    // 27: order_business.GetOrderDetailRequest
	(*ShopOrderDetail)(nil),          // 28: order_business.ShopOrderDetail
	(*GetOrderDetailResponse)(nil),   // 29: order_business.GetOrderDetailResponse
	(*TradeGoodsDetail)(nil),         // 30: order_business.TradeGoodsDetail
	(*OrderDetail)(nil),              // 31: order_business.OrderDetail
	(*OrderShopDetail)(nil),          // 32: order_business.OrderShopDetail
	(*OrderGoods)(nil),               // 33: order_business.OrderGoods
	(*CreateOrderRequest)(nil),       // 34: order_business.CreateOrderRequest
	(*OrderDeliveryInfo)(nil),        // 35: order_business.OrderDeliveryInfo
	(*OrderSceneInfo)(nil),           // 36: order_business.OrderSceneInfo
	(*StoreInfo)(nil),                // 37: order_business.StoreInfo
	(*OrderEntry)(nil),               // 38: order_business.OrderEntry
	(*CreateOrderResponse)(nil),      // 39: order_business.CreateOrderResponse
	(*CheckOrderExistRequest)(nil),   // 40: order_business.CheckOrderExistRequest
	(*CheckOrderExistResponse)(nil),  // 41: order_business.CheckOrderExistResponse
	(*GenOrderTxCodeRequest)(nil),    // 42: order_business.GenOrderTxCodeRequest
	(*GenOrderTxCodeResponse)(nil),   // 43: order_business.GenOrderTxCodeResponse
}
var file_proto_micro_mall_order_proto_order_business_order_business_proto_depIdxs = []int32{
	0,  // 0: order_business.CommonResponse.code:type_name -> order_business.RetCode
	5,  // 1: order_business.OrderStateEntry.state:type_name -> order_business.OrderStateType
	6,  // 2: order_business.OrderStateEntry.pay_state:type_name -> order_business.OrderPayStateType
	11, // 3: order_business.UpdateOrderStateRequest.entry_list:type_name -> order_business.OrderStateEntry
	8,  // 4: order_business.UpdateOrderStateRequest.operation_meta:type_name -> order_business.OperationMeta
	6,  // 5: order_business.OrderState.pay_state:type_name -> order_business.OrderPayStateType
	5,  // 6: order_business.OrderState.state:type_name -> order_business.OrderStateType
	7,  // 7: order_business.CheckOrderStateResponse.common:type_name -> order_business.CommonResponse
	14, // 8: order_business.CheckOrderStateResponse.list:type_name -> order_business.OrderState
	7,  // 9: order_business.InspectShopOrderResponse.common:type_name -> order_business.CommonResponse
	10, // 10: order_business.FindOrderListRequest.time_meta:type_name -> order_business.FiltrateTimeMeta
	9,  // 11: order_business.FindOrderListRequest.page_meta:type_name -> order_business.PageMeta
	5,  // 12: order_business.OrderListEntry.state:type_name -> order_business.OrderStateType
	6,  // 13: order_business.OrderListEntry.pay_state:type_name -> order_business.OrderPayStateType
	7,  // 14: order_business.FindOrderListResponse.common:type_name -> order_business.CommonResponse
	19, // 15: order_business.FindOrderListResponse.list:type_name -> order_business.OrderListEntry
	7,  // 16: order_business.OrderTradeNoticeResponse.common:type_name -> order_business.CommonResponse
	7,  // 17: order_business.UpdateOrderStateResponse.common:type_name -> order_business.CommonResponse
	7,  // 18: order_business.GetOrderSkuResponse.common:type_name -> order_business.CommonResponse
	26, // 19: order_business.GetOrderSkuResponse.order_list:type_name -> order_business.OrderSku
	33, // 20: order_business.OrderSku.goods:type_name -> order_business.OrderGoods
	30, // 21: order_business.ShopOrderDetail.detail:type_name -> order_business.TradeGoodsDetail
	7,  // 22: order_business.GetOrderDetailResponse.common:type_name -> order_business.CommonResponse
	2,  // 23: order_business.GetOrderDetailResponse.coin_type:type_name -> order_business.CoinType
	28, // 24: order_business.GetOrderDetailResponse.list:type_name -> order_business.ShopOrderDetail
	32, // 25: order_business.OrderDetail.shop_detail:type_name -> order_business.OrderShopDetail
	2,  // 26: order_business.OrderShopDetail.coin_type:type_name -> order_business.CoinType
	33, // 27: order_business.OrderShopDetail.goods:type_name -> order_business.OrderGoods
	36, // 28: order_business.OrderShopDetail.scene_info:type_name -> order_business.OrderSceneInfo
	31, // 29: order_business.CreateOrderRequest.detail:type_name -> order_business.OrderDetail
	35, // 30: order_business.CreateOrderRequest.delivery_info:type_name -> order_business.OrderDeliveryInfo
	37, // 31: order_business.OrderSceneInfo.store_info:type_name -> order_business.StoreInfo
	7,  // 32: order_business.CreateOrderResponse.common:type_name -> order_business.CommonResponse
	7,  // 33: order_business.CheckOrderExistResponse.common:type_name -> order_business.CommonResponse
	7,  // 34: order_business.GenOrderTxCodeResponse.common:type_name -> order_business.CommonResponse
	42, // 35: order_business.OrderBusinessService.GenOrderTxCode:input_type -> order_business.GenOrderTxCodeRequest
	40, // 36: order_business.OrderBusinessService.CheckOrderExist:input_type -> order_business.CheckOrderExistRequest
	34, // 37: order_business.OrderBusinessService.CreateOrder:input_type -> order_business.CreateOrderRequest
	27, // 38: order_business.OrderBusinessService.GetOrderDetail:input_type -> order_business.GetOrderDetailRequest
	24, // 39: order_business.OrderBusinessService.GetOrderSku:input_type -> order_business.GetOrderSkuRequest
	12, // 40: order_business.OrderBusinessService.UpdateOrderState:input_type -> order_business.UpdateOrderStateRequest
	21, // 41: order_business.OrderBusinessService.OrderTradeNotice:input_type -> order_business.OrderTradeNoticeRequest
	13, // 42: order_business.OrderBusinessService.CheckOrderState:input_type -> order_business.CheckOrderStateRequest
	18, // 43: order_business.OrderBusinessService.FindOrderList:input_type -> order_business.FindOrderListRequest
	16, // 44: order_business.OrderBusinessService.InspectShopOrder:input_type -> order_business.InspectShopOrderRequest
	43, // 45: order_business.OrderBusinessService.GenOrderTxCode:output_type -> order_business.GenOrderTxCodeResponse
	41, // 46: order_business.OrderBusinessService.CheckOrderExist:output_type -> order_business.CheckOrderExistResponse
	39, // 47: order_business.OrderBusinessService.CreateOrder:output_type -> order_business.CreateOrderResponse
	29, // 48: order_business.OrderBusinessService.GetOrderDetail:output_type -> order_business.GetOrderDetailResponse
	25, // 49: order_business.OrderBusinessService.GetOrderSku:output_type -> order_business.GetOrderSkuResponse
	23, // 50: order_business.OrderBusinessService.UpdateOrderState:output_type -> order_business.UpdateOrderStateResponse
	22, // 51: order_business.OrderBusinessService.OrderTradeNotice:output_type -> order_business.OrderTradeNoticeResponse
	15, // 52: order_business.OrderBusinessService.CheckOrderState:output_type -> order_business.CheckOrderStateResponse
	20, // 53: order_business.OrderBusinessService.FindOrderList:output_type -> order_business.FindOrderListResponse
	17, // 54: order_business.OrderBusinessService.InspectShopOrder:output_type -> order_business.InspectShopOrderResponse
	45, // [45:55] is the sub-list for method output_type
	35, // [35:45] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_proto_micro_mall_order_proto_order_business_order_business_proto_init() }
func file_proto_micro_mall_order_proto_order_business_order_business_proto_init() {
	if File_proto_micro_mall_order_proto_order_business_order_business_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FiltrateTimeMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderStateEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckOrderStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckOrderStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InspectShopOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InspectShopOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindOrderListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderListEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindOrderListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderTradeNoticeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderTradeNoticeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderSkuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderSkuResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderSku); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopOrderDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeGoodsDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderShopDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderGoods); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDeliveryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderSceneInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckOrderExistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckOrderExistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenOrderTxCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenOrderTxCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_micro_mall_order_proto_order_business_order_business_proto_goTypes,
		DependencyIndexes: file_proto_micro_mall_order_proto_order_business_order_business_proto_depIdxs,
		EnumInfos:         file_proto_micro_mall_order_proto_order_business_order_business_proto_enumTypes,
		MessageInfos:      file_proto_micro_mall_order_proto_order_business_order_business_proto_msgTypes,
	}.Build()
	File_proto_micro_mall_order_proto_order_business_order_business_proto = out.File
	file_proto_micro_mall_order_proto_order_business_order_business_proto_rawDesc = nil
	file_proto_micro_mall_order_proto_order_business_order_business_proto_goTypes = nil
	file_proto_micro_mall_order_proto_order_business_order_business_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OrderBusinessServiceClient is the client API for OrderBusinessService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderBusinessServiceClient interface {
	// 生成唯一订单事务号
	GenOrderTxCode(ctx context.Context, in *GenOrderTxCodeRequest, opts ...grpc.CallOption) (*GenOrderTxCodeResponse, error)
	// 检查外部订单号是否存在
	CheckOrderExist(ctx context.Context, in *CheckOrderExistRequest, opts ...grpc.CallOption) (*CheckOrderExistResponse, error)
	// 创建订单
	CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*CreateOrderResponse, error)
	// 获取订单详情
	GetOrderDetail(ctx context.Context, in *GetOrderDetailRequest, opts ...grpc.CallOption) (*GetOrderDetailResponse, error)
	// 获取订单商品
	GetOrderSku(ctx context.Context, in *GetOrderSkuRequest, opts ...grpc.CallOption) (*GetOrderSkuResponse, error)
	// 更新订单状态
	UpdateOrderState(ctx context.Context, in *UpdateOrderStateRequest, opts ...grpc.CallOption) (*UpdateOrderStateResponse, error)
	// 订单支付通知
	OrderTradeNotice(ctx context.Context, in *OrderTradeNoticeRequest, opts ...grpc.CallOption) (*OrderTradeNoticeResponse, error)
	// 订单状态检查
	CheckOrderState(ctx context.Context, in *CheckOrderStateRequest, opts ...grpc.CallOption) (*CheckOrderStateResponse, error)
	// 获取订单
	FindOrderList(ctx context.Context, in *FindOrderListRequest, opts ...grpc.CallOption) (*FindOrderListResponse, error)
	// 店铺订单存在检查
	InspectShopOrder(ctx context.Context, in *InspectShopOrderRequest, opts ...grpc.CallOption) (*InspectShopOrderResponse, error)
}

type orderBusinessServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOrderBusinessServiceClient(cc grpc.ClientConnInterface) OrderBusinessServiceClient {
	return &orderBusinessServiceClient{cc}
}

func (c *orderBusinessServiceClient) GenOrderTxCode(ctx context.Context, in *GenOrderTxCodeRequest, opts ...grpc.CallOption) (*GenOrderTxCodeResponse, error) {
	out := new(GenOrderTxCodeResponse)
	err := c.cc.Invoke(ctx, "/order_business.OrderBusinessService/GenOrderTxCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderBusinessServiceClient) CheckOrderExist(ctx context.Context, in *CheckOrderExistRequest, opts ...grpc.CallOption) (*CheckOrderExistResponse, error) {
	out := new(CheckOrderExistResponse)
	err := c.cc.Invoke(ctx, "/order_business.OrderBusinessService/CheckOrderExist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderBusinessServiceClient) CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*CreateOrderResponse, error) {
	out := new(CreateOrderResponse)
	err := c.cc.Invoke(ctx, "/order_business.OrderBusinessService/CreateOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderBusinessServiceClient) GetOrderDetail(ctx context.Context, in *GetOrderDetailRequest, opts ...grpc.CallOption) (*GetOrderDetailResponse, error) {
	out := new(GetOrderDetailResponse)
	err := c.cc.Invoke(ctx, "/order_business.OrderBusinessService/GetOrderDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderBusinessServiceClient) GetOrderSku(ctx context.Context, in *GetOrderSkuRequest, opts ...grpc.CallOption) (*GetOrderSkuResponse, error) {
	out := new(GetOrderSkuResponse)
	err := c.cc.Invoke(ctx, "/order_business.OrderBusinessService/GetOrderSku", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderBusinessServiceClient) UpdateOrderState(ctx context.Context, in *UpdateOrderStateRequest, opts ...grpc.CallOption) (*UpdateOrderStateResponse, error) {
	out := new(UpdateOrderStateResponse)
	err := c.cc.Invoke(ctx, "/order_business.OrderBusinessService/UpdateOrderState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderBusinessServiceClient) OrderTradeNotice(ctx context.Context, in *OrderTradeNoticeRequest, opts ...grpc.CallOption) (*OrderTradeNoticeResponse, error) {
	out := new(OrderTradeNoticeResponse)
	err := c.cc.Invoke(ctx, "/order_business.OrderBusinessService/OrderTradeNotice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderBusinessServiceClient) CheckOrderState(ctx context.Context, in *CheckOrderStateRequest, opts ...grpc.CallOption) (*CheckOrderStateResponse, error) {
	out := new(CheckOrderStateResponse)
	err := c.cc.Invoke(ctx, "/order_business.OrderBusinessService/CheckOrderState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderBusinessServiceClient) FindOrderList(ctx context.Context, in *FindOrderListRequest, opts ...grpc.CallOption) (*FindOrderListResponse, error) {
	out := new(FindOrderListResponse)
	err := c.cc.Invoke(ctx, "/order_business.OrderBusinessService/FindOrderList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderBusinessServiceClient) InspectShopOrder(ctx context.Context, in *InspectShopOrderRequest, opts ...grpc.CallOption) (*InspectShopOrderResponse, error) {
	out := new(InspectShopOrderResponse)
	err := c.cc.Invoke(ctx, "/order_business.OrderBusinessService/InspectShopOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderBusinessServiceServer is the server API for OrderBusinessService service.
type OrderBusinessServiceServer interface {
	// 生成唯一订单事务号
	GenOrderTxCode(context.Context, *GenOrderTxCodeRequest) (*GenOrderTxCodeResponse, error)
	// 检查外部订单号是否存在
	CheckOrderExist(context.Context, *CheckOrderExistRequest) (*CheckOrderExistResponse, error)
	// 创建订单
	CreateOrder(context.Context, *CreateOrderRequest) (*CreateOrderResponse, error)
	// 获取订单详情
	GetOrderDetail(context.Context, *GetOrderDetailRequest) (*GetOrderDetailResponse, error)
	// 获取订单商品
	GetOrderSku(context.Context, *GetOrderSkuRequest) (*GetOrderSkuResponse, error)
	// 更新订单状态
	UpdateOrderState(context.Context, *UpdateOrderStateRequest) (*UpdateOrderStateResponse, error)
	// 订单支付通知
	OrderTradeNotice(context.Context, *OrderTradeNoticeRequest) (*OrderTradeNoticeResponse, error)
	// 订单状态检查
	CheckOrderState(context.Context, *CheckOrderStateRequest) (*CheckOrderStateResponse, error)
	// 获取订单
	FindOrderList(context.Context, *FindOrderListRequest) (*FindOrderListResponse, error)
	// 店铺订单存在检查
	InspectShopOrder(context.Context, *InspectShopOrderRequest) (*InspectShopOrderResponse, error)
}

// UnimplementedOrderBusinessServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOrderBusinessServiceServer struct {
}

func (*UnimplementedOrderBusinessServiceServer) GenOrderTxCode(context.Context, *GenOrderTxCodeRequest) (*GenOrderTxCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenOrderTxCode not implemented")
}
func (*UnimplementedOrderBusinessServiceServer) CheckOrderExist(context.Context, *CheckOrderExistRequest) (*CheckOrderExistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckOrderExist not implemented")
}
func (*UnimplementedOrderBusinessServiceServer) CreateOrder(context.Context, *CreateOrderRequest) (*CreateOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOrder not implemented")
}
func (*UnimplementedOrderBusinessServiceServer) GetOrderDetail(context.Context, *GetOrderDetailRequest) (*GetOrderDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrderDetail not implemented")
}
func (*UnimplementedOrderBusinessServiceServer) GetOrderSku(context.Context, *GetOrderSkuRequest) (*GetOrderSkuResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrderSku not implemented")
}
func (*UnimplementedOrderBusinessServiceServer) UpdateOrderState(context.Context, *UpdateOrderStateRequest) (*UpdateOrderStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOrderState not implemented")
}
func (*UnimplementedOrderBusinessServiceServer) OrderTradeNotice(context.Context, *OrderTradeNoticeRequest) (*OrderTradeNoticeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrderTradeNotice not implemented")
}
func (*UnimplementedOrderBusinessServiceServer) CheckOrderState(context.Context, *CheckOrderStateRequest) (*CheckOrderStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckOrderState not implemented")
}
func (*UnimplementedOrderBusinessServiceServer) FindOrderList(context.Context, *FindOrderListRequest) (*FindOrderListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindOrderList not implemented")
}
func (*UnimplementedOrderBusinessServiceServer) InspectShopOrder(context.Context, *InspectShopOrderRequest) (*InspectShopOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InspectShopOrder not implemented")
}

func RegisterOrderBusinessServiceServer(s *grpc.Server, srv OrderBusinessServiceServer) {
	s.RegisterService(&_OrderBusinessService_serviceDesc, srv)
}

func _OrderBusinessService_GenOrderTxCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenOrderTxCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderBusinessServiceServer).GenOrderTxCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order_business.OrderBusinessService/GenOrderTxCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderBusinessServiceServer).GenOrderTxCode(ctx, req.(*GenOrderTxCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderBusinessService_CheckOrderExist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckOrderExistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderBusinessServiceServer).CheckOrderExist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order_business.OrderBusinessService/CheckOrderExist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderBusinessServiceServer).CheckOrderExist(ctx, req.(*CheckOrderExistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderBusinessService_CreateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderBusinessServiceServer).CreateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order_business.OrderBusinessService/CreateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderBusinessServiceServer).CreateOrder(ctx, req.(*CreateOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderBusinessService_GetOrderDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrderDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderBusinessServiceServer).GetOrderDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order_business.OrderBusinessService/GetOrderDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderBusinessServiceServer).GetOrderDetail(ctx, req.(*GetOrderDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderBusinessService_GetOrderSku_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrderSkuRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderBusinessServiceServer).GetOrderSku(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order_business.OrderBusinessService/GetOrderSku",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderBusinessServiceServer).GetOrderSku(ctx, req.(*GetOrderSkuRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderBusinessService_UpdateOrderState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOrderStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderBusinessServiceServer).UpdateOrderState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order_business.OrderBusinessService/UpdateOrderState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderBusinessServiceServer).UpdateOrderState(ctx, req.(*UpdateOrderStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderBusinessService_OrderTradeNotice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderTradeNoticeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderBusinessServiceServer).OrderTradeNotice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order_business.OrderBusinessService/OrderTradeNotice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderBusinessServiceServer).OrderTradeNotice(ctx, req.(*OrderTradeNoticeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderBusinessService_CheckOrderState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckOrderStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderBusinessServiceServer).CheckOrderState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order_business.OrderBusinessService/CheckOrderState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderBusinessServiceServer).CheckOrderState(ctx, req.(*CheckOrderStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderBusinessService_FindOrderList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindOrderListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderBusinessServiceServer).FindOrderList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order_business.OrderBusinessService/FindOrderList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderBusinessServiceServer).FindOrderList(ctx, req.(*FindOrderListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderBusinessService_InspectShopOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InspectShopOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderBusinessServiceServer).InspectShopOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/order_business.OrderBusinessService/InspectShopOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderBusinessServiceServer).InspectShopOrder(ctx, req.(*InspectShopOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrderBusinessService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "order_business.OrderBusinessService",
	HandlerType: (*OrderBusinessServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GenOrderTxCode",
			Handler:    _OrderBusinessService_GenOrderTxCode_Handler,
		},
		{
			MethodName: "CheckOrderExist",
			Handler:    _OrderBusinessService_CheckOrderExist_Handler,
		},
		{
			MethodName: "CreateOrder",
			Handler:    _OrderBusinessService_CreateOrder_Handler,
		},
		{
			MethodName: "GetOrderDetail",
			Handler:    _OrderBusinessService_GetOrderDetail_Handler,
		},
		{
			MethodName: "GetOrderSku",
			Handler:    _OrderBusinessService_GetOrderSku_Handler,
		},
		{
			MethodName: "UpdateOrderState",
			Handler:    _OrderBusinessService_UpdateOrderState_Handler,
		},
		{
			MethodName: "OrderTradeNotice",
			Handler:    _OrderBusinessService_OrderTradeNotice_Handler,
		},
		{
			MethodName: "CheckOrderState",
			Handler:    _OrderBusinessService_CheckOrderState_Handler,
		},
		{
			MethodName: "FindOrderList",
			Handler:    _OrderBusinessService_FindOrderList_Handler,
		},
		{
			MethodName: "InspectShopOrder",
			Handler:    _OrderBusinessService_InspectShopOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/micro_mall_order_proto/order_business/order_business.proto",
}
