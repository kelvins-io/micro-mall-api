// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.5.1
// source: proto/micro_mall_comments_proto/comments_business/comments.proto

package comments_business

import (
	context "context"
	_ "gitee.com/kelvins-io/common/proto/google/api"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type StarLevel int32

const (
	StarLevel_VERY_GOOD StarLevel = 0 // 非常好
	StarLevel_GOOD      StarLevel = 1 // 好
	StarLevel_GENERAL   StarLevel = 2 // 一般
	StarLevel_BAD       StarLevel = 3 // 差
	StarLevel_VERY_BAD  StarLevel = 4 //非常差
)

// Enum value maps for StarLevel.
var (
	StarLevel_name = map[int32]string{
		0: "VERY_GOOD",
		1: "GOOD",
		2: "GENERAL",
		3: "BAD",
		4: "VERY_BAD",
	}
	StarLevel_value = map[string]int32{
		"VERY_GOOD": 0,
		"GOOD":      1,
		"GENERAL":   2,
		"BAD":       3,
		"VERY_BAD":  4,
	}
)

func (x StarLevel) Enum() *StarLevel {
	p := new(StarLevel)
	*p = x
	return p
}

func (x StarLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StarLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_micro_mall_comments_proto_comments_business_comments_proto_enumTypes[0].Descriptor()
}

func (StarLevel) Type() protoreflect.EnumType {
	return &file_proto_micro_mall_comments_proto_comments_business_comments_proto_enumTypes[0]
}

func (x StarLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StarLevel.Descriptor instead.
func (StarLevel) EnumDescriptor() ([]byte, []int) {
	return file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDescGZIP(), []int{0}
}

type RetCode int32

const (
	RetCode_SUCCESS                  RetCode = 0
	RetCode_ERROR                    RetCode = 500
	RetCode_USER_NOT_EXIST           RetCode = 500000
	RetCode_USER_EXIST               RetCode = 500001
	RetCode_USER_ORDER_NOT_EXIST     RetCode = 600000
	RetCode_USER_ORDER_STATE_INVALID RetCode = 600001
	RetCode_COMMENT_NOT_EXIST        RetCode = 700000
	RetCode_COMMENT_EXIST            RetCode = 700001
	RetCode_TRANSACTION_FAILED       RetCode = 700002
	RetCode_COMMENT_TAG_NOT_EXIST    RetCode = 700003
	RetCode_COMMENT_TAG_EXIST        RetCode = 700004
)

// Enum value maps for RetCode.
var (
	RetCode_name = map[int32]string{
		0:      "SUCCESS",
		500:    "ERROR",
		500000: "USER_NOT_EXIST",
		500001: "USER_EXIST",
		600000: "USER_ORDER_NOT_EXIST",
		600001: "USER_ORDER_STATE_INVALID",
		700000: "COMMENT_NOT_EXIST",
		700001: "COMMENT_EXIST",
		700002: "TRANSACTION_FAILED",
		700003: "COMMENT_TAG_NOT_EXIST",
		700004: "COMMENT_TAG_EXIST",
	}
	RetCode_value = map[string]int32{
		"SUCCESS":                  0,
		"ERROR":                    500,
		"USER_NOT_EXIST":           500000,
		"USER_EXIST":               500001,
		"USER_ORDER_NOT_EXIST":     600000,
		"USER_ORDER_STATE_INVALID": 600001,
		"COMMENT_NOT_EXIST":        700000,
		"COMMENT_EXIST":            700001,
		"TRANSACTION_FAILED":       700002,
		"COMMENT_TAG_NOT_EXIST":    700003,
		"COMMENT_TAG_EXIST":        700004,
	}
)

func (x RetCode) Enum() *RetCode {
	p := new(RetCode)
	*p = x
	return p
}

func (x RetCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RetCode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_micro_mall_comments_proto_comments_business_comments_proto_enumTypes[1].Descriptor()
}

func (RetCode) Type() protoreflect.EnumType {
	return &file_proto_micro_mall_comments_proto_comments_business_comments_proto_enumTypes[1]
}

func (x RetCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RetCode.Descriptor instead.
func (RetCode) EnumDescriptor() ([]byte, []int) {
	return file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDescGZIP(), []int{1}
}

type OperationType int32

const (
	OperationType_CREATE OperationType = 0
	OperationType_UPDATE OperationType = 1
	OperationType_DELETE OperationType = 2
	OperationType_AUDIT  OperationType = 3
)

// Enum value maps for OperationType.
var (
	OperationType_name = map[int32]string{
		0: "CREATE",
		1: "UPDATE",
		2: "DELETE",
		3: "AUDIT",
	}
	OperationType_value = map[string]int32{
		"CREATE": 0,
		"UPDATE": 1,
		"DELETE": 2,
		"AUDIT":  3,
	}
)

func (x OperationType) Enum() *OperationType {
	p := new(OperationType)
	*p = x
	return p
}

func (x OperationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperationType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_micro_mall_comments_proto_comments_business_comments_proto_enumTypes[2].Descriptor()
}

func (OperationType) Type() protoreflect.EnumType {
	return &file_proto_micro_mall_comments_proto_comments_business_comments_proto_enumTypes[2]
}

func (x OperationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperationType.Descriptor instead.
func (OperationType) EnumDescriptor() ([]byte, []int) {
	return file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDescGZIP(), []int{2}
}

type CommentsTags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagCode              string `protobuf:"bytes,1,opt,name=tag_code,json=tagCode,proto3" json:"tag_code,omitempty"`
	ClassificationMajor  string `protobuf:"bytes,2,opt,name=classification_major,json=classificationMajor,proto3" json:"classification_major,omitempty"`
	ClassificationMedium string `protobuf:"bytes,3,opt,name=classification_medium,json=classificationMedium,proto3" json:"classification_medium,omitempty"`
	ClassificationMinor  string `protobuf:"bytes,4,opt,name=classification_minor,json=classificationMinor,proto3" json:"classification_minor,omitempty"`
	Content              string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	State                bool   `protobuf:"varint,6,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *CommentsTags) Reset() {
	*x = CommentsTags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentsTags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentsTags) ProtoMessage() {}

func (x *CommentsTags) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentsTags.ProtoReflect.Descriptor instead.
func (*CommentsTags) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDescGZIP(), []int{0}
}

func (x *CommentsTags) GetTagCode() string {
	if x != nil {
		return x.TagCode
	}
	return ""
}

func (x *CommentsTags) GetClassificationMajor() string {
	if x != nil {
		return x.ClassificationMajor
	}
	return ""
}

func (x *CommentsTags) GetClassificationMedium() string {
	if x != nil {
		return x.ClassificationMedium
	}
	return ""
}

func (x *CommentsTags) GetClassificationMinor() string {
	if x != nil {
		return x.ClassificationMinor
	}
	return ""
}

func (x *CommentsTags) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CommentsTags) GetState() bool {
	if x != nil {
		return x.State
	}
	return false
}

type ModifyCommentsTagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpType OperationType `protobuf:"varint,1,opt,name=op_type,json=opType,proto3,enum=comments_business.OperationType" json:"op_type,omitempty"`
	Tag    *CommentsTags `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *ModifyCommentsTagsRequest) Reset() {
	*x = ModifyCommentsTagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyCommentsTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyCommentsTagsRequest) ProtoMessage() {}

func (x *ModifyCommentsTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyCommentsTagsRequest.ProtoReflect.Descriptor instead.
func (*ModifyCommentsTagsRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDescGZIP(), []int{1}
}

func (x *ModifyCommentsTagsRequest) GetOpType() OperationType {
	if x != nil {
		return x.OpType
	}
	return OperationType_CREATE
}

func (x *ModifyCommentsTagsRequest) GetTag() *CommentsTags {
	if x != nil {
		return x.Tag
	}
	return nil
}

type ModifyCommentsTagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common  *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	TagCode string          `protobuf:"bytes,2,opt,name=tag_code,json=tagCode,proto3" json:"tag_code,omitempty"`
}

func (x *ModifyCommentsTagsResponse) Reset() {
	*x = ModifyCommentsTagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyCommentsTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyCommentsTagsResponse) ProtoMessage() {}

func (x *ModifyCommentsTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyCommentsTagsResponse.ProtoReflect.Descriptor instead.
func (*ModifyCommentsTagsResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDescGZIP(), []int{2}
}

func (x *ModifyCommentsTagsResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *ModifyCommentsTagsResponse) GetTagCode() string {
	if x != nil {
		return x.TagCode
	}
	return ""
}

type FindCommentsTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagCode              string `protobuf:"bytes,1,opt,name=tag_code,json=tagCode,proto3" json:"tag_code,omitempty"`
	ClassificationMajor  string `protobuf:"bytes,2,opt,name=classification_major,json=classificationMajor,proto3" json:"classification_major,omitempty"`
	ClassificationMedium string `protobuf:"bytes,3,opt,name=classification_medium,json=classificationMedium,proto3" json:"classification_medium,omitempty"`
}

func (x *FindCommentsTagRequest) Reset() {
	*x = FindCommentsTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindCommentsTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCommentsTagRequest) ProtoMessage() {}

func (x *FindCommentsTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCommentsTagRequest.ProtoReflect.Descriptor instead.
func (*FindCommentsTagRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDescGZIP(), []int{3}
}

func (x *FindCommentsTagRequest) GetTagCode() string {
	if x != nil {
		return x.TagCode
	}
	return ""
}

func (x *FindCommentsTagRequest) GetClassificationMajor() string {
	if x != nil {
		return x.ClassificationMajor
	}
	return ""
}

func (x *FindCommentsTagRequest) GetClassificationMedium() string {
	if x != nil {
		return x.ClassificationMedium
	}
	return ""
}

type FindCommentsTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Tags   []*CommentsTags `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *FindCommentsTagResponse) Reset() {
	*x = FindCommentsTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindCommentsTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCommentsTagResponse) ProtoMessage() {}

func (x *FindCommentsTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCommentsTagResponse.ProtoReflect.Descriptor instead.
func (*FindCommentsTagResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDescGZIP(), []int{4}
}

func (x *FindCommentsTagResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *FindCommentsTagResponse) GetTags() []*CommentsTags {
	if x != nil {
		return x.Tags
	}
	return nil
}

type FindShopCommentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopId int64 `protobuf:"varint,1,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	Uid    int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *FindShopCommentsRequest) Reset() {
	*x = FindShopCommentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindShopCommentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindShopCommentsRequest) ProtoMessage() {}

func (x *FindShopCommentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindShopCommentsRequest.ProtoReflect.Descriptor instead.
func (*FindShopCommentsRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDescGZIP(), []int{5}
}

func (x *FindShopCommentsRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *FindShopCommentsRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type FindShopCommentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common       *CommonResponse      `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	CommentsList []*OrderCommentsInfo `protobuf:"bytes,2,rep,name=comments_list,json=commentsList,proto3" json:"comments_list,omitempty"`
}

func (x *FindShopCommentsResponse) Reset() {
	*x = FindShopCommentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindShopCommentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindShopCommentsResponse) ProtoMessage() {}

func (x *FindShopCommentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindShopCommentsResponse.ProtoReflect.Descriptor instead.
func (*FindShopCommentsResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDescGZIP(), []int{6}
}

func (x *FindShopCommentsResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *FindShopCommentsResponse) GetCommentsList() []*OrderCommentsInfo {
	if x != nil {
		return x.CommentsList
	}
	return nil
}

type OrderCommentsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopId    int64     `protobuf:"varint,1,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	OrderCode string    `protobuf:"bytes,2,opt,name=order_code,json=orderCode,proto3" json:"order_code,omitempty"`                                   // 订单号
	StarLevel StarLevel `protobuf:"varint,3,opt,name=star_level,json=starLevel,proto3,enum=comments_business.StarLevel" json:"star_level,omitempty"` // 星级
	Content   string    `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`                                                        // 评价内容
	ImgList   []string  `protobuf:"bytes,5,rep,name=img_list,json=imgList,proto3" json:"img_list,omitempty"`                                         // 附加图片
	CommentId string    `protobuf:"bytes,199,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`                                 // 评论ID
}

func (x *OrderCommentsInfo) Reset() {
	*x = OrderCommentsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCommentsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCommentsInfo) ProtoMessage() {}

func (x *OrderCommentsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCommentsInfo.ProtoReflect.Descriptor instead.
func (*OrderCommentsInfo) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDescGZIP(), []int{7}
}

func (x *OrderCommentsInfo) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *OrderCommentsInfo) GetOrderCode() string {
	if x != nil {
		return x.OrderCode
	}
	return ""
}

func (x *OrderCommentsInfo) GetStarLevel() StarLevel {
	if x != nil {
		return x.StarLevel
	}
	return StarLevel_VERY_GOOD
}

func (x *OrderCommentsInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *OrderCommentsInfo) GetImgList() []string {
	if x != nil {
		return x.ImgList
	}
	return nil
}

func (x *OrderCommentsInfo) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

type LogisticsCommentsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogisticsCode        string    `protobuf:"bytes,1,opt,name=logistics_code,json=logisticsCode,proto3" json:"logistics_code,omitempty"`                        // 订单关联的物流号
	FedexPack            StarLevel `protobuf:"varint,10,opt,name=fedex_pack,json=fedexPack,proto3,enum=comments_business.StarLevel" json:"fedex_pack,omitempty"` // 快递包装
	FedexLabel           []string  `protobuf:"bytes,11,rep,name=fedex_label,json=fedexLabel,proto3" json:"fedex_label,omitempty"`
	DeliverySpeed        StarLevel `protobuf:"varint,20,opt,name=delivery_speed,json=deliverySpeed,proto3,enum=comments_business.StarLevel" json:"delivery_speed,omitempty"` // 送货速度
	DeliverySpeedLabel   []string  `protobuf:"bytes,21,rep,name=delivery_speed_label,json=deliverySpeedLabel,proto3" json:"delivery_speed_label,omitempty"`
	DeliveryService      StarLevel `protobuf:"varint,30,opt,name=delivery_service,json=deliveryService,proto3,enum=comments_business.StarLevel" json:"delivery_service,omitempty"` // 配送员服务
	DeliveryServiceLabel []string  `protobuf:"bytes,31,rep,name=delivery_service_label,json=deliveryServiceLabel,proto3" json:"delivery_service_label,omitempty"`
	Comment              string    `protobuf:"bytes,100,opt,name=comment,proto3" json:"comment,omitempty"` // 总体描述
}

func (x *LogisticsCommentsInfo) Reset() {
	*x = LogisticsCommentsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogisticsCommentsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogisticsCommentsInfo) ProtoMessage() {}

func (x *LogisticsCommentsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogisticsCommentsInfo.ProtoReflect.Descriptor instead.
func (*LogisticsCommentsInfo) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDescGZIP(), []int{8}
}

func (x *LogisticsCommentsInfo) GetLogisticsCode() string {
	if x != nil {
		return x.LogisticsCode
	}
	return ""
}

func (x *LogisticsCommentsInfo) GetFedexPack() StarLevel {
	if x != nil {
		return x.FedexPack
	}
	return StarLevel_VERY_GOOD
}

func (x *LogisticsCommentsInfo) GetFedexLabel() []string {
	if x != nil {
		return x.FedexLabel
	}
	return nil
}

func (x *LogisticsCommentsInfo) GetDeliverySpeed() StarLevel {
	if x != nil {
		return x.DeliverySpeed
	}
	return StarLevel_VERY_GOOD
}

func (x *LogisticsCommentsInfo) GetDeliverySpeedLabel() []string {
	if x != nil {
		return x.DeliverySpeedLabel
	}
	return nil
}

func (x *LogisticsCommentsInfo) GetDeliveryService() StarLevel {
	if x != nil {
		return x.DeliveryService
	}
	return StarLevel_VERY_GOOD
}

func (x *LogisticsCommentsInfo) GetDeliveryServiceLabel() []string {
	if x != nil {
		return x.DeliveryServiceLabel
	}
	return nil
}

func (x *LogisticsCommentsInfo) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type CommentsOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid           int64                  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	OrderInfo     *OrderCommentsInfo     `protobuf:"bytes,2,opt,name=order_info,json=orderInfo,proto3" json:"order_info,omitempty"`             // 订单评价
	LogisticsInfo *LogisticsCommentsInfo `protobuf:"bytes,3,opt,name=logistics_info,json=logisticsInfo,proto3" json:"logistics_info,omitempty"` // 物流评价
	Anonymity     bool                   `protobuf:"varint,4,opt,name=anonymity,proto3" json:"anonymity,omitempty"`                             // 是否匿名
}

func (x *CommentsOrderRequest) Reset() {
	*x = CommentsOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentsOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentsOrderRequest) ProtoMessage() {}

func (x *CommentsOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentsOrderRequest.ProtoReflect.Descriptor instead.
func (*CommentsOrderRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDescGZIP(), []int{9}
}

func (x *CommentsOrderRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CommentsOrderRequest) GetOrderInfo() *OrderCommentsInfo {
	if x != nil {
		return x.OrderInfo
	}
	return nil
}

func (x *CommentsOrderRequest) GetLogisticsInfo() *LogisticsCommentsInfo {
	if x != nil {
		return x.LogisticsInfo
	}
	return nil
}

func (x *CommentsOrderRequest) GetAnonymity() bool {
	if x != nil {
		return x.Anonymity
	}
	return false
}

type CommentsOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *CommentsOrderResponse) Reset() {
	*x = CommentsOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentsOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentsOrderResponse) ProtoMessage() {}

func (x *CommentsOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentsOrderResponse.ProtoReflect.Descriptor instead.
func (*CommentsOrderResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDescGZIP(), []int{10}
}

func (x *CommentsOrderResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

type CommonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code RetCode `protobuf:"varint,1,opt,name=code,proto3,enum=comments_business.RetCode" json:"code,omitempty"`
	Msg  string  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *CommonResponse) Reset() {
	*x = CommonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResponse) ProtoMessage() {}

func (x *CommonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResponse.ProtoReflect.Descriptor instead.
func (*CommonResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDescGZIP(), []int{11}
}

func (x *CommonResponse) GetCode() RetCode {
	if x != nil {
		return x.Code
	}
	return RetCode_SUCCESS
}

func (x *CommonResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type OperationMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpUid      int64  `protobuf:"varint,1,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
	OpIp       string `protobuf:"bytes,2,opt,name=op_ip,json=opIp,proto3" json:"op_ip,omitempty"`
	OpPlatform string `protobuf:"bytes,3,opt,name=op_platform,json=opPlatform,proto3" json:"op_platform,omitempty"` // 操作平台
	OpDevice   string `protobuf:"bytes,4,opt,name=op_device,json=opDevice,proto3" json:"op_device,omitempty"`       // 操作设备
}

func (x *OperationMeta) Reset() {
	*x = OperationMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationMeta) ProtoMessage() {}

func (x *OperationMeta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationMeta.ProtoReflect.Descriptor instead.
func (*OperationMeta) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDescGZIP(), []int{12}
}

func (x *OperationMeta) GetOpUid() int64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

func (x *OperationMeta) GetOpIp() string {
	if x != nil {
		return x.OpIp
	}
	return ""
}

func (x *OperationMeta) GetOpPlatform() string {
	if x != nil {
		return x.OpPlatform
	}
	return ""
}

func (x *OperationMeta) GetOpDevice() string {
	if x != nil {
		return x.OpDevice
	}
	return ""
}

type PageMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int32 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *PageMeta) Reset() {
	*x = PageMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageMeta) ProtoMessage() {}

func (x *PageMeta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageMeta.ProtoReflect.Descriptor instead.
func (*PageMeta) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDescGZIP(), []int{13}
}

func (x *PageMeta) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *PageMeta) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type FiltrateTimeMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime string `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   string `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *FiltrateTimeMeta) Reset() {
	*x = FiltrateTimeMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FiltrateTimeMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FiltrateTimeMeta) ProtoMessage() {}

func (x *FiltrateTimeMeta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FiltrateTimeMeta.ProtoReflect.Descriptor instead.
func (*FiltrateTimeMeta) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDescGZIP(), []int{14}
}

func (x *FiltrateTimeMeta) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *FiltrateTimeMeta) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

var File_proto_micro_mall_comments_proto_comments_business_comments_proto protoreflect.FileDescriptor

var file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDesc = []byte{
	0x0a, 0x40, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x5f, 0x6d, 0x61,
	0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x1a, 0x3e, 0x67, 0x69, 0x74, 0x65, 0x65, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6b, 0x65, 0x6c, 0x76, 0x69, 0x6e, 0x73, 0x2d, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf4, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x54, 0x61, 0x67, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x67, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x31, 0x0a, 0x14, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x61, 0x6a, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x15, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x12, 0x31, 0x0a, 0x14, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x89, 0x01, 0x0a,
	0x19, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54,
	0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x07, 0x6f, 0x70,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x6f,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54,
	0x61, 0x67, 0x73, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x72, 0x0a, 0x1a, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x9b, 0x01, 0x0a,
	0x16, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x61, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x67, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x31, 0x0a, 0x14, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x15, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x22, 0x89, 0x01, 0x0a, 0x17, 0x46,
	0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x61, 0x67, 0x73,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x44, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x68,
	0x6f, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0xa0, 0x01, 0x0a,
	0x18, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0xdd, 0x01, 0x0a, 0x11, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3b, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0xc7, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0xac, 0x03, 0x0a, 0x15, 0x4c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x6f, 0x67,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x3b, 0x0a, 0x0a, 0x66, 0x65, 0x64, 0x65, 0x78, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x52, 0x09, 0x66, 0x65, 0x64, 0x65, 0x78, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x1f, 0x0a,
	0x0b, 0x66, 0x65, 0x64, 0x65, 0x78, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x66, 0x65, 0x64, 0x65, 0x78, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x43,
	0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f,
	0x73, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x15, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x12, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x47, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x0f, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34,
	0x0a, 0x16, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xdc,
	0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x0a, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4f,
	0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x69, 0x74, 0x79, 0x22, 0x52, 0x0a,
	0x15, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x22, 0x52, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x79, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x70, 0x5f, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x70, 0x55, 0x69, 0x64, 0x12, 0x13, 0x0a,
	0x05, 0x6f, 0x70, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x70,
	0x49, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x70, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x22, 0x42, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0x4c, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x2a, 0x48, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x0d, 0x0a, 0x09, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x47, 0x4f, 0x4f, 0x44, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x47, 0x4f, 0x4f, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x45, 0x4e, 0x45,
	0x52, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x41, 0x44, 0x10, 0x03, 0x12, 0x0c,
	0x0a, 0x08, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x42, 0x41, 0x44, 0x10, 0x04, 0x2a, 0x84, 0x02, 0x0a,
	0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43,
	0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xf4,
	0x03, 0x12, 0x14, 0x0a, 0x0e, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58,
	0x49, 0x53, 0x54, 0x10, 0xa0, 0xc2, 0x1e, 0x12, 0x10, 0x0a, 0x0a, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xa1, 0xc2, 0x1e, 0x12, 0x1a, 0x0a, 0x14, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53,
	0x54, 0x10, 0xc0, 0xcf, 0x24, 0x12, 0x1e, 0x0a, 0x18, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4f, 0x52,
	0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x10, 0xc1, 0xcf, 0x24, 0x12, 0x17, 0x0a, 0x11, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xe0, 0xdc, 0x2a, 0x12, 0x13,
	0x0a, 0x0d, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10,
	0xe1, 0xdc, 0x2a, 0x12, 0x18, 0x0a, 0x12, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0xe2, 0xdc, 0x2a, 0x12, 0x1b, 0x0a,
	0x15, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x41, 0x47, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xe3, 0xdc, 0x2a, 0x12, 0x17, 0x0a, 0x11, 0x43, 0x4f,
	0x4d, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x41, 0x47, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10,
	0xe4, 0xdc, 0x2a, 0x2a, 0x3e, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x55, 0x44, 0x49,
	0x54, 0x10, 0x03, 0x32, 0xcb, 0x04, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x81, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x3a, 0x01, 0x2a, 0x12, 0x86, 0x01, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x70,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x68, 0x6f,
	0x70, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x89, 0x01, 0x0a,
	0x10, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x61, 0x67,
	0x73, 0x12, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x61, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18,
	0x12, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x74,
	0x61, 0x67, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x96, 0x01, 0x0a, 0x12, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x61, 0x67, 0x73, 0x12,
	0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x74, 0x61, 0x67, 0x73, 0x2f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x3a, 0x01,
	0x2a, 0x42, 0x45, 0x5a, 0x43, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x5f, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x3b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDescOnce sync.Once
	file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDescData = file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDesc
)

func file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDescGZIP() []byte {
	file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDescOnce.Do(func() {
		file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDescData)
	})
	return file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDescData
}

var file_proto_micro_mall_comments_proto_comments_business_comments_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_micro_mall_comments_proto_comments_business_comments_proto_goTypes = []interface{}{
	(StarLevel)(0),                     // 0: comments_business.StarLevel
	(RetCode)(0),                       // 1: comments_business.RetCode
	(OperationType)(0),                 // 2: comments_business.OperationType
	(*CommentsTags)(nil),               // 3: comments_business.CommentsTags
	(*ModifyCommentsTagsRequest)(nil),  // 4: comments_business.ModifyCommentsTagsRequest
	(*ModifyCommentsTagsResponse)(nil), // 5: comments_business.ModifyCommentsTagsResponse
	(*FindCommentsTagRequest)(nil),     // 6: comments_business.FindCommentsTagRequest
	(*FindCommentsTagResponse)(nil),    // 7: comments_business.FindCommentsTagResponse
	(*FindShopCommentsRequest)(nil),    // 8: comments_business.FindShopCommentsRequest
	(*FindShopCommentsResponse)(nil),   // 9: comments_business.FindShopCommentsResponse
	(*OrderCommentsInfo)(nil),          // 10: comments_business.OrderCommentsInfo
	(*LogisticsCommentsInfo)(nil),      // 11: comments_business.LogisticsCommentsInfo
	(*CommentsOrderRequest)(nil),       // 12: comments_business.CommentsOrderRequest
	(*CommentsOrderResponse)(nil),      // 13: comments_business.CommentsOrderResponse
	(*CommonResponse)(nil),             // 14: comments_business.CommonResponse
	(*OperationMeta)(nil),              // 15: comments_business.OperationMeta
	(*PageMeta)(nil),                   // 16: comments_business.PageMeta
	(*FiltrateTimeMeta)(nil),           // 17: comments_business.FiltrateTimeMeta
}
var file_proto_micro_mall_comments_proto_comments_business_comments_proto_depIdxs = []int32{
	2,  // 0: comments_business.ModifyCommentsTagsRequest.op_type:type_name -> comments_business.OperationType
	3,  // 1: comments_business.ModifyCommentsTagsRequest.tag:type_name -> comments_business.CommentsTags
	14, // 2: comments_business.ModifyCommentsTagsResponse.common:type_name -> comments_business.CommonResponse
	14, // 3: comments_business.FindCommentsTagResponse.common:type_name -> comments_business.CommonResponse
	3,  // 4: comments_business.FindCommentsTagResponse.tags:type_name -> comments_business.CommentsTags
	14, // 5: comments_business.FindShopCommentsResponse.common:type_name -> comments_business.CommonResponse
	10, // 6: comments_business.FindShopCommentsResponse.comments_list:type_name -> comments_business.OrderCommentsInfo
	0,  // 7: comments_business.OrderCommentsInfo.star_level:type_name -> comments_business.StarLevel
	0,  // 8: comments_business.LogisticsCommentsInfo.fedex_pack:type_name -> comments_business.StarLevel
	0,  // 9: comments_business.LogisticsCommentsInfo.delivery_speed:type_name -> comments_business.StarLevel
	0,  // 10: comments_business.LogisticsCommentsInfo.delivery_service:type_name -> comments_business.StarLevel
	10, // 11: comments_business.CommentsOrderRequest.order_info:type_name -> comments_business.OrderCommentsInfo
	11, // 12: comments_business.CommentsOrderRequest.logistics_info:type_name -> comments_business.LogisticsCommentsInfo
	14, // 13: comments_business.CommentsOrderResponse.common:type_name -> comments_business.CommonResponse
	1,  // 14: comments_business.CommonResponse.code:type_name -> comments_business.RetCode
	12, // 15: comments_business.CommentsBusinessService.CommentsOrder:input_type -> comments_business.CommentsOrderRequest
	8,  // 16: comments_business.CommentsBusinessService.FindShopComments:input_type -> comments_business.FindShopCommentsRequest
	6,  // 17: comments_business.CommentsBusinessService.FindCommentsTags:input_type -> comments_business.FindCommentsTagRequest
	4,  // 18: comments_business.CommentsBusinessService.ModifyCommentsTags:input_type -> comments_business.ModifyCommentsTagsRequest
	13, // 19: comments_business.CommentsBusinessService.CommentsOrder:output_type -> comments_business.CommentsOrderResponse
	9,  // 20: comments_business.CommentsBusinessService.FindShopComments:output_type -> comments_business.FindShopCommentsResponse
	7,  // 21: comments_business.CommentsBusinessService.FindCommentsTags:output_type -> comments_business.FindCommentsTagResponse
	5,  // 22: comments_business.CommentsBusinessService.ModifyCommentsTags:output_type -> comments_business.ModifyCommentsTagsResponse
	19, // [19:23] is the sub-list for method output_type
	15, // [15:19] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_proto_micro_mall_comments_proto_comments_business_comments_proto_init() }
func file_proto_micro_mall_comments_proto_comments_business_comments_proto_init() {
	if File_proto_micro_mall_comments_proto_comments_business_comments_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentsTags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyCommentsTagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyCommentsTagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindCommentsTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindCommentsTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindShopCommentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindShopCommentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCommentsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogisticsCommentsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentsOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentsOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FiltrateTimeMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_micro_mall_comments_proto_comments_business_comments_proto_goTypes,
		DependencyIndexes: file_proto_micro_mall_comments_proto_comments_business_comments_proto_depIdxs,
		EnumInfos:         file_proto_micro_mall_comments_proto_comments_business_comments_proto_enumTypes,
		MessageInfos:      file_proto_micro_mall_comments_proto_comments_business_comments_proto_msgTypes,
	}.Build()
	File_proto_micro_mall_comments_proto_comments_business_comments_proto = out.File
	file_proto_micro_mall_comments_proto_comments_business_comments_proto_rawDesc = nil
	file_proto_micro_mall_comments_proto_comments_business_comments_proto_goTypes = nil
	file_proto_micro_mall_comments_proto_comments_business_comments_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CommentsBusinessServiceClient is the client API for CommentsBusinessService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CommentsBusinessServiceClient interface {
	// 订单评价
	CommentsOrder(ctx context.Context, in *CommentsOrderRequest, opts ...grpc.CallOption) (*CommentsOrderResponse, error)
	// 获取店铺评论列表
	FindShopComments(ctx context.Context, in *FindShopCommentsRequest, opts ...grpc.CallOption) (*FindShopCommentsResponse, error)
	// 获取评论标签
	FindCommentsTags(ctx context.Context, in *FindCommentsTagRequest, opts ...grpc.CallOption) (*FindCommentsTagResponse, error)
	// 修改评论标签
	ModifyCommentsTags(ctx context.Context, in *ModifyCommentsTagsRequest, opts ...grpc.CallOption) (*ModifyCommentsTagsResponse, error)
}

type commentsBusinessServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCommentsBusinessServiceClient(cc grpc.ClientConnInterface) CommentsBusinessServiceClient {
	return &commentsBusinessServiceClient{cc}
}

func (c *commentsBusinessServiceClient) CommentsOrder(ctx context.Context, in *CommentsOrderRequest, opts ...grpc.CallOption) (*CommentsOrderResponse, error) {
	out := new(CommentsOrderResponse)
	err := c.cc.Invoke(ctx, "/comments_business.CommentsBusinessService/CommentsOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commentsBusinessServiceClient) FindShopComments(ctx context.Context, in *FindShopCommentsRequest, opts ...grpc.CallOption) (*FindShopCommentsResponse, error) {
	out := new(FindShopCommentsResponse)
	err := c.cc.Invoke(ctx, "/comments_business.CommentsBusinessService/FindShopComments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commentsBusinessServiceClient) FindCommentsTags(ctx context.Context, in *FindCommentsTagRequest, opts ...grpc.CallOption) (*FindCommentsTagResponse, error) {
	out := new(FindCommentsTagResponse)
	err := c.cc.Invoke(ctx, "/comments_business.CommentsBusinessService/FindCommentsTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commentsBusinessServiceClient) ModifyCommentsTags(ctx context.Context, in *ModifyCommentsTagsRequest, opts ...grpc.CallOption) (*ModifyCommentsTagsResponse, error) {
	out := new(ModifyCommentsTagsResponse)
	err := c.cc.Invoke(ctx, "/comments_business.CommentsBusinessService/ModifyCommentsTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CommentsBusinessServiceServer is the server API for CommentsBusinessService service.
type CommentsBusinessServiceServer interface {
	// 订单评价
	CommentsOrder(context.Context, *CommentsOrderRequest) (*CommentsOrderResponse, error)
	// 获取店铺评论列表
	FindShopComments(context.Context, *FindShopCommentsRequest) (*FindShopCommentsResponse, error)
	// 获取评论标签
	FindCommentsTags(context.Context, *FindCommentsTagRequest) (*FindCommentsTagResponse, error)
	// 修改评论标签
	ModifyCommentsTags(context.Context, *ModifyCommentsTagsRequest) (*ModifyCommentsTagsResponse, error)
}

// UnimplementedCommentsBusinessServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCommentsBusinessServiceServer struct {
}

func (*UnimplementedCommentsBusinessServiceServer) CommentsOrder(context.Context, *CommentsOrderRequest) (*CommentsOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CommentsOrder not implemented")
}
func (*UnimplementedCommentsBusinessServiceServer) FindShopComments(context.Context, *FindShopCommentsRequest) (*FindShopCommentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindShopComments not implemented")
}
func (*UnimplementedCommentsBusinessServiceServer) FindCommentsTags(context.Context, *FindCommentsTagRequest) (*FindCommentsTagResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindCommentsTags not implemented")
}
func (*UnimplementedCommentsBusinessServiceServer) ModifyCommentsTags(context.Context, *ModifyCommentsTagsRequest) (*ModifyCommentsTagsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyCommentsTags not implemented")
}

func RegisterCommentsBusinessServiceServer(s *grpc.Server, srv CommentsBusinessServiceServer) {
	s.RegisterService(&_CommentsBusinessService_serviceDesc, srv)
}

func _CommentsBusinessService_CommentsOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommentsOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommentsBusinessServiceServer).CommentsOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comments_business.CommentsBusinessService/CommentsOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommentsBusinessServiceServer).CommentsOrder(ctx, req.(*CommentsOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommentsBusinessService_FindShopComments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindShopCommentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommentsBusinessServiceServer).FindShopComments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comments_business.CommentsBusinessService/FindShopComments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommentsBusinessServiceServer).FindShopComments(ctx, req.(*FindShopCommentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommentsBusinessService_FindCommentsTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindCommentsTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommentsBusinessServiceServer).FindCommentsTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comments_business.CommentsBusinessService/FindCommentsTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommentsBusinessServiceServer).FindCommentsTags(ctx, req.(*FindCommentsTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommentsBusinessService_ModifyCommentsTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyCommentsTagsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommentsBusinessServiceServer).ModifyCommentsTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comments_business.CommentsBusinessService/ModifyCommentsTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommentsBusinessServiceServer).ModifyCommentsTags(ctx, req.(*ModifyCommentsTagsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CommentsBusinessService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "comments_business.CommentsBusinessService",
	HandlerType: (*CommentsBusinessServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CommentsOrder",
			Handler:    _CommentsBusinessService_CommentsOrder_Handler,
		},
		{
			MethodName: "FindShopComments",
			Handler:    _CommentsBusinessService_FindShopComments_Handler,
		},
		{
			MethodName: "FindCommentsTags",
			Handler:    _CommentsBusinessService_FindCommentsTags_Handler,
		},
		{
			MethodName: "ModifyCommentsTags",
			Handler:    _CommentsBusinessService_ModifyCommentsTags_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/micro_mall_comments_proto/comments_business/comments.proto",
}
