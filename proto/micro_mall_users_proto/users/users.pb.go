// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.5.1
// source: proto/micro_mall_users_proto/users/users.proto

package users

import (
	context "context"
	_ "gitee.com/kelvins-io/common/proto/google/api"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RetCode int32

const (
	RetCode_SUCCESS                      RetCode = 0
	RetCode_ERROR                        RetCode = 500
	RetCode_USER_NOT_EXIST               RetCode = 50001
	RetCode_USER_EXIST                   RetCode = 50002
	RetCode_MERCHANT_NOT_EXIST           RetCode = 50003
	RetCode_MERCHANT_EXIST               RetCode = 50004
	RetCode_ACCOUNT_EXIST                RetCode = 50005
	RetCode_ACCOUNT_NOT_EXIST            RetCode = 50006
	RetCode_USER_PWD_NOT_MATCH           RetCode = 50007
	RetCode_USER_LOGIN_NOT_ALLOW         RetCode = 50008
	RetCode_USER_DELIVERY_INFO_EXIST     RetCode = 50009
	RetCode_USER_DELIVERY_INFO_NOT_EXIST RetCode = 50010
	RetCode_TRANSACTION_FAILED           RetCode = 50011
	RetCode_ACCOUNT_LOCK                 RetCode = 50012
	RetCode_ACCOUNT_INVALID              RetCode = 50013
	RetCode_USER_CHARGE_RUN              RetCode = 50014
	RetCode_USER_CHARGE_SUCCESS          RetCode = 50015
	RetCode_USER_CHARGE_TRADE_NO_EMPTY   RetCode = 50016
	RetCode_USER_STATE_NOT_VERIFY        RetCode = 50017
)

// Enum value maps for RetCode.
var (
	RetCode_name = map[int32]string{
		0:     "SUCCESS",
		500:   "ERROR",
		50001: "USER_NOT_EXIST",
		50002: "USER_EXIST",
		50003: "MERCHANT_NOT_EXIST",
		50004: "MERCHANT_EXIST",
		50005: "ACCOUNT_EXIST",
		50006: "ACCOUNT_NOT_EXIST",
		50007: "USER_PWD_NOT_MATCH",
		50008: "USER_LOGIN_NOT_ALLOW",
		50009: "USER_DELIVERY_INFO_EXIST",
		50010: "USER_DELIVERY_INFO_NOT_EXIST",
		50011: "TRANSACTION_FAILED",
		50012: "ACCOUNT_LOCK",
		50013: "ACCOUNT_INVALID",
		50014: "USER_CHARGE_RUN",
		50015: "USER_CHARGE_SUCCESS",
		50016: "USER_CHARGE_TRADE_NO_EMPTY",
		50017: "USER_STATE_NOT_VERIFY",
	}
	RetCode_value = map[string]int32{
		"SUCCESS":                      0,
		"ERROR":                        500,
		"USER_NOT_EXIST":               50001,
		"USER_EXIST":                   50002,
		"MERCHANT_NOT_EXIST":           50003,
		"MERCHANT_EXIST":               50004,
		"ACCOUNT_EXIST":                50005,
		"ACCOUNT_NOT_EXIST":            50006,
		"USER_PWD_NOT_MATCH":           50007,
		"USER_LOGIN_NOT_ALLOW":         50008,
		"USER_DELIVERY_INFO_EXIST":     50009,
		"USER_DELIVERY_INFO_NOT_EXIST": 50010,
		"TRANSACTION_FAILED":           50011,
		"ACCOUNT_LOCK":                 50012,
		"ACCOUNT_INVALID":              50013,
		"USER_CHARGE_RUN":              50014,
		"USER_CHARGE_SUCCESS":          50015,
		"USER_CHARGE_TRADE_NO_EMPTY":   50016,
		"USER_STATE_NOT_VERIFY":        50017,
	}
)

func (x RetCode) Enum() *RetCode {
	p := new(RetCode)
	*p = x
	return p
}

func (x RetCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RetCode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_micro_mall_users_proto_users_users_proto_enumTypes[0].Descriptor()
}

func (RetCode) Type() protoreflect.EnumType {
	return &file_proto_micro_mall_users_proto_users_users_proto_enumTypes[0]
}

func (x RetCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RetCode.Descriptor instead.
func (RetCode) EnumDescriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{0}
}

type OperationType int32

const (
	OperationType_CREATE OperationType = 0
	OperationType_UPDATE OperationType = 1
	OperationType_DELETE OperationType = 2
	OperationType_AUDIT  OperationType = 3
)

// Enum value maps for OperationType.
var (
	OperationType_name = map[int32]string{
		0: "CREATE",
		1: "UPDATE",
		2: "DELETE",
		3: "AUDIT",
	}
	OperationType_value = map[string]int32{
		"CREATE": 0,
		"UPDATE": 1,
		"DELETE": 2,
		"AUDIT":  3,
	}
)

func (x OperationType) Enum() *OperationType {
	p := new(OperationType)
	*p = x
	return p
}

func (x OperationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperationType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_micro_mall_users_proto_users_users_proto_enumTypes[1].Descriptor()
}

func (OperationType) Type() protoreflect.EnumType {
	return &file_proto_micro_mall_users_proto_users_users_proto_enumTypes[1]
}

func (x OperationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperationType.Descriptor instead.
func (OperationType) EnumDescriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{1}
}

type CoinType int32

const (
	CoinType_CNY CoinType = 0
	CoinType_USD CoinType = 1
)

// Enum value maps for CoinType.
var (
	CoinType_name = map[int32]string{
		0: "CNY",
		1: "USD",
	}
	CoinType_value = map[string]int32{
		"CNY": 0,
		"USD": 1,
	}
)

func (x CoinType) Enum() *CoinType {
	p := new(CoinType)
	*p = x
	return p
}

func (x CoinType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CoinType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_micro_mall_users_proto_users_users_proto_enumTypes[2].Descriptor()
}

func (CoinType) Type() protoreflect.EnumType {
	return &file_proto_micro_mall_users_proto_users_users_proto_enumTypes[2]
}

func (x CoinType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CoinType.Descriptor instead.
func (CoinType) EnumDescriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{2}
}

type AccountState int32

const (
	AccountState_NORMAL  AccountState = 0
	AccountState_LOCK    AccountState = 1
	AccountState_INVALID AccountState = 2
)

// Enum value maps for AccountState.
var (
	AccountState_name = map[int32]string{
		0: "NORMAL",
		1: "LOCK",
		2: "INVALID",
	}
	AccountState_value = map[string]int32{
		"NORMAL":  0,
		"LOCK":    1,
		"INVALID": 2,
	}
)

func (x AccountState) Enum() *AccountState {
	p := new(AccountState)
	*p = x
	return p
}

func (x AccountState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountState) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_micro_mall_users_proto_users_users_proto_enumTypes[3].Descriptor()
}

func (AccountState) Type() protoreflect.EnumType {
	return &file_proto_micro_mall_users_proto_users_users_proto_enumTypes[3]
}

func (x AccountState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountState.Descriptor instead.
func (AccountState) EnumDescriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{3}
}

type AccountType int32

const (
	AccountType_PERSONAL AccountType = 0
	AccountType_COMPANY  AccountType = 1
	AccountType_SYSTEM   AccountType = 2
)

// Enum value maps for AccountType.
var (
	AccountType_name = map[int32]string{
		0: "PERSONAL",
		1: "COMPANY",
		2: "SYSTEM",
	}
	AccountType_value = map[string]int32{
		"PERSONAL": 0,
		"COMPANY":  1,
		"SYSTEM":   2,
	}
)

func (x AccountType) Enum() *AccountType {
	p := new(AccountType)
	*p = x
	return p
}

func (x AccountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_micro_mall_users_proto_users_users_proto_enumTypes[4].Descriptor()
}

func (AccountType) Type() protoreflect.EnumType {
	return &file_proto_micro_mall_users_proto_users_users_proto_enumTypes[4]
}

func (x AccountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountType.Descriptor instead.
func (AccountType) EnumDescriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{4}
}

type LoginType int32

const (
	LoginType_PWD         LoginType = 0
	LoginType_VERIFY_CODE LoginType = 1
	LoginType_TOKEN       LoginType = 2
)

// Enum value maps for LoginType.
var (
	LoginType_name = map[int32]string{
		0: "PWD",
		1: "VERIFY_CODE",
		2: "TOKEN",
	}
	LoginType_value = map[string]int32{
		"PWD":         0,
		"VERIFY_CODE": 1,
		"TOKEN":       2,
	}
)

func (x LoginType) Enum() *LoginType {
	p := new(LoginType)
	*p = x
	return p
}

func (x LoginType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoginType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_micro_mall_users_proto_users_users_proto_enumTypes[5].Descriptor()
}

func (LoginType) Type() protoreflect.EnumType {
	return &file_proto_micro_mall_users_proto_users_users_proto_enumTypes[5]
}

func (x LoginType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoginType.Descriptor instead.
func (LoginType) EnumDescriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{5}
}

type LoginPwdKind int32

const (
	LoginPwdKind_MOBILE_PHONE LoginPwdKind = 0
	LoginPwdKind_EMAIL        LoginPwdKind = 1
)

// Enum value maps for LoginPwdKind.
var (
	LoginPwdKind_name = map[int32]string{
		0: "MOBILE_PHONE",
		1: "EMAIL",
	}
	LoginPwdKind_value = map[string]int32{
		"MOBILE_PHONE": 0,
		"EMAIL":        1,
	}
)

func (x LoginPwdKind) Enum() *LoginPwdKind {
	p := new(LoginPwdKind)
	*p = x
	return p
}

func (x LoginPwdKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoginPwdKind) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_micro_mall_users_proto_users_users_proto_enumTypes[6].Descriptor()
}

func (LoginPwdKind) Type() protoreflect.EnumType {
	return &file_proto_micro_mall_users_proto_users_users_proto_enumTypes[6]
}

func (x LoginPwdKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoginPwdKind.Descriptor instead.
func (LoginPwdKind) EnumDescriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{6}
}

type IsDefaultType int32

const (
	IsDefaultType_DEFAULT_TYPE_FALSE IsDefaultType = 0
	IsDefaultType_DEFAULT_TYPE_TRUE  IsDefaultType = 1
)

// Enum value maps for IsDefaultType.
var (
	IsDefaultType_name = map[int32]string{
		0: "DEFAULT_TYPE_FALSE",
		1: "DEFAULT_TYPE_TRUE",
	}
	IsDefaultType_value = map[string]int32{
		"DEFAULT_TYPE_FALSE": 0,
		"DEFAULT_TYPE_TRUE":  1,
	}
)

func (x IsDefaultType) Enum() *IsDefaultType {
	p := new(IsDefaultType)
	*p = x
	return p
}

func (x IsDefaultType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IsDefaultType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_micro_mall_users_proto_users_users_proto_enumTypes[7].Descriptor()
}

func (IsDefaultType) Type() protoreflect.EnumType {
	return &file_proto_micro_mall_users_proto_users_users_proto_enumTypes[7]
}

func (x IsDefaultType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IsDefaultType.Descriptor instead.
func (IsDefaultType) EnumDescriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{7}
}

type Email struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Email) Reset() {
	*x = Email{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Email) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Email) ProtoMessage() {}

func (x *Email) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Email.ProtoReflect.Descriptor instead.
func (*Email) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{0}
}

func (x *Email) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type MobilePhone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountryCode string `protobuf:"bytes,1,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Phone       string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *MobilePhone) Reset() {
	*x = MobilePhone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MobilePhone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MobilePhone) ProtoMessage() {}

func (x *MobilePhone) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MobilePhone.ProtoReflect.Descriptor instead.
func (*MobilePhone) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{1}
}

func (x *MobilePhone) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *MobilePhone) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type LoginByPassword struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginKind LoginPwdKind `protobuf:"varint,1,opt,name=login_kind,json=loginKind,proto3,enum=users.LoginPwdKind" json:"login_kind,omitempty"` // 登录类型，数值代表info的序号
	// Types that are assignable to Info:
	//	*LoginByPassword_Email
	//	*LoginByPassword_Phone
	Info isLoginByPassword_Info `protobuf_oneof:"info"`
	Pwd  string                 `protobuf:"bytes,2,opt,name=pwd,proto3" json:"pwd,omitempty"`
}

func (x *LoginByPassword) Reset() {
	*x = LoginByPassword{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginByPassword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginByPassword) ProtoMessage() {}

func (x *LoginByPassword) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginByPassword.ProtoReflect.Descriptor instead.
func (*LoginByPassword) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{2}
}

func (x *LoginByPassword) GetLoginKind() LoginPwdKind {
	if x != nil {
		return x.LoginKind
	}
	return LoginPwdKind_MOBILE_PHONE
}

func (m *LoginByPassword) GetInfo() isLoginByPassword_Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (x *LoginByPassword) GetEmail() *Email {
	if x, ok := x.GetInfo().(*LoginByPassword_Email); ok {
		return x.Email
	}
	return nil
}

func (x *LoginByPassword) GetPhone() *MobilePhone {
	if x, ok := x.GetInfo().(*LoginByPassword_Phone); ok {
		return x.Phone
	}
	return nil
}

func (x *LoginByPassword) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

type isLoginByPassword_Info interface {
	isLoginByPassword_Info()
}

type LoginByPassword_Email struct {
	Email *Email `protobuf:"bytes,100,opt,name=email,proto3,oneof"`
}

type LoginByPassword_Phone struct {
	Phone *MobilePhone `protobuf:"bytes,101,opt,name=phone,proto3,oneof"`
}

func (*LoginByPassword_Email) isLoginByPassword_Info() {}

func (*LoginByPassword_Phone) isLoginByPassword_Info() {}

type LoginVerifyCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone      *MobilePhone `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	VerifyCode string       `protobuf:"bytes,3,opt,name=verify_code,json=verifyCode,proto3" json:"verify_code,omitempty"`
}

func (x *LoginVerifyCode) Reset() {
	*x = LoginVerifyCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginVerifyCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginVerifyCode) ProtoMessage() {}

func (x *LoginVerifyCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginVerifyCode.ProtoReflect.Descriptor instead.
func (*LoginVerifyCode) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{3}
}

func (x *LoginVerifyCode) GetPhone() *MobilePhone {
	if x != nil {
		return x.Phone
	}
	return nil
}

func (x *LoginVerifyCode) GetVerifyCode() string {
	if x != nil {
		return x.VerifyCode
	}
	return ""
}

type LoginToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *LoginToken) Reset() {
	*x = LoginToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginToken) ProtoMessage() {}

func (x *LoginToken) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginToken.ProtoReflect.Descriptor instead.
func (*LoginToken) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{4}
}

func (x *LoginToken) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type UserDeliveryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DeliveryUser string        `protobuf:"bytes,2,opt,name=delivery_user,json=deliveryUser,proto3" json:"delivery_user,omitempty"`
	MobilePhone  string        `protobuf:"bytes,3,opt,name=mobile_phone,json=mobilePhone,proto3" json:"mobile_phone,omitempty"`
	Area         string        `protobuf:"bytes,4,opt,name=area,proto3" json:"area,omitempty"`
	DetailedArea string        `protobuf:"bytes,5,opt,name=detailed_area,json=detailedArea,proto3" json:"detailed_area,omitempty"`
	Label        []string      `protobuf:"bytes,6,rep,name=label,proto3" json:"label,omitempty"`                                                    // 标签，多个标签以|分割开
	IsDefault    IsDefaultType `protobuf:"varint,7,opt,name=is_default,json=isDefault,proto3,enum=users.IsDefaultType" json:"is_default,omitempty"` // 是否默认地址
}

func (x *UserDeliveryInfo) Reset() {
	*x = UserDeliveryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDeliveryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDeliveryInfo) ProtoMessage() {}

func (x *UserDeliveryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDeliveryInfo.ProtoReflect.Descriptor instead.
func (*UserDeliveryInfo) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{5}
}

func (x *UserDeliveryInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserDeliveryInfo) GetDeliveryUser() string {
	if x != nil {
		return x.DeliveryUser
	}
	return ""
}

func (x *UserDeliveryInfo) GetMobilePhone() string {
	if x != nil {
		return x.MobilePhone
	}
	return ""
}

func (x *UserDeliveryInfo) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *UserDeliveryInfo) GetDetailedArea() string {
	if x != nil {
		return x.DetailedArea
	}
	return ""
}

func (x *UserDeliveryInfo) GetLabel() []string {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *UserDeliveryInfo) GetIsDefault() IsDefaultType {
	if x != nil {
		return x.IsDefault
	}
	return IsDefaultType_DEFAULT_TYPE_FALSE
}

type FindUserInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UidList []int64 `protobuf:"varint,1,rep,packed,name=uid_list,json=uidList,proto3" json:"uid_list,omitempty"`
}

func (x *FindUserInfoRequest) Reset() {
	*x = FindUserInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserInfoRequest) ProtoMessage() {}

func (x *FindUserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserInfoRequest.ProtoReflect.Descriptor instead.
func (*FindUserInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{6}
}

func (x *FindUserInfoRequest) GetUidList() []int64 {
	if x != nil {
		return x.UidList
	}
	return nil
}

// 用户主要信息
type UserInfoMain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CountryCode string `protobuf:"bytes,3,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Phone       string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Age         int32  `protobuf:"varint,5,opt,name=age,proto3" json:"age,omitempty"`
	Address     string `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *UserInfoMain) Reset() {
	*x = UserInfoMain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoMain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoMain) ProtoMessage() {}

func (x *UserInfoMain) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoMain.ProtoReflect.Descriptor instead.
func (*UserInfoMain) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{7}
}

func (x *UserInfoMain) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserInfoMain) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInfoMain) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *UserInfoMain) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserInfoMain) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *UserInfoMain) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type FindUserInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common   *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	InfoList []*UserInfoMain `protobuf:"bytes,2,rep,name=info_list,json=infoList,proto3" json:"info_list,omitempty"`
}

func (x *FindUserInfoResponse) Reset() {
	*x = FindUserInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindUserInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindUserInfoResponse) ProtoMessage() {}

func (x *FindUserInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindUserInfoResponse.ProtoReflect.Descriptor instead.
func (*FindUserInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{8}
}

func (x *FindUserInfoResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *FindUserInfoResponse) GetInfoList() []*UserInfoMain {
	if x != nil {
		return x.InfoList
	}
	return nil
}

type UserAccountChargeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UidList     []int64        `protobuf:"varint,1,rep,packed,name=uid_list,json=uidList,proto3" json:"uid_list,omitempty"`
	AccountType AccountType    `protobuf:"varint,2,opt,name=account_type,json=accountType,proto3,enum=users.AccountType" json:"account_type,omitempty"` // 账户类型
	CoinType    CoinType       `protobuf:"varint,3,opt,name=coin_type,json=coinType,proto3,enum=users.CoinType" json:"coin_type,omitempty"`             // 币种
	Amount      string         `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`                                                      // 数量
	OutTradeNo  string         `protobuf:"bytes,5,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"`                          // 外部交易号
	OpMeta      *OperationMeta `protobuf:"bytes,199,opt,name=op_meta,json=opMeta,proto3" json:"op_meta,omitempty"`
}

func (x *UserAccountChargeRequest) Reset() {
	*x = UserAccountChargeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountChargeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountChargeRequest) ProtoMessage() {}

func (x *UserAccountChargeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountChargeRequest.ProtoReflect.Descriptor instead.
func (*UserAccountChargeRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{9}
}

func (x *UserAccountChargeRequest) GetUidList() []int64 {
	if x != nil {
		return x.UidList
	}
	return nil
}

func (x *UserAccountChargeRequest) GetAccountType() AccountType {
	if x != nil {
		return x.AccountType
	}
	return AccountType_PERSONAL
}

func (x *UserAccountChargeRequest) GetCoinType() CoinType {
	if x != nil {
		return x.CoinType
	}
	return CoinType_CNY
}

func (x *UserAccountChargeRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *UserAccountChargeRequest) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *UserAccountChargeRequest) GetOpMeta() *OperationMeta {
	if x != nil {
		return x.OpMeta
	}
	return nil
}

type UserAccountChargeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"` // 全部充值成功，或全部失败
}

func (x *UserAccountChargeResponse) Reset() {
	*x = UserAccountChargeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountChargeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountChargeResponse) ProtoMessage() {}

func (x *UserAccountChargeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountChargeResponse.ProtoReflect.Descriptor instead.
func (*UserAccountChargeResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{10}
}

func (x *UserAccountChargeResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

type ModifyUserDeliveryInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationType OperationType     `protobuf:"varint,1,opt,name=operation_type,json=operationType,proto3,enum=users.OperationType" json:"operation_type,omitempty"`
	Info          *UserDeliveryInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	Uid           int64             `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *ModifyUserDeliveryInfoRequest) Reset() {
	*x = ModifyUserDeliveryInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyUserDeliveryInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyUserDeliveryInfoRequest) ProtoMessage() {}

func (x *ModifyUserDeliveryInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyUserDeliveryInfoRequest.ProtoReflect.Descriptor instead.
func (*ModifyUserDeliveryInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{11}
}

func (x *ModifyUserDeliveryInfoRequest) GetOperationType() OperationType {
	if x != nil {
		return x.OperationType
	}
	return OperationType_CREATE
}

func (x *ModifyUserDeliveryInfoRequest) GetInfo() *UserDeliveryInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ModifyUserDeliveryInfoRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type ModifyUserDeliveryInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *ModifyUserDeliveryInfoResponse) Reset() {
	*x = ModifyUserDeliveryInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyUserDeliveryInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyUserDeliveryInfoResponse) ProtoMessage() {}

func (x *ModifyUserDeliveryInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyUserDeliveryInfoResponse.ProtoReflect.Descriptor instead.
func (*ModifyUserDeliveryInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{12}
}

func (x *ModifyUserDeliveryInfoResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

type GetUserDeliveryInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid            int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`                                               // 不为0
	UserDeliveryId int32 `protobuf:"varint,2,opt,name=user_delivery_id,json=userDeliveryId,proto3" json:"user_delivery_id,omitempty"` // 为0则查询用户下全部
}

func (x *GetUserDeliveryInfoRequest) Reset() {
	*x = GetUserDeliveryInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDeliveryInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDeliveryInfoRequest) ProtoMessage() {}

func (x *GetUserDeliveryInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDeliveryInfoRequest.ProtoReflect.Descriptor instead.
func (*GetUserDeliveryInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{13}
}

func (x *GetUserDeliveryInfoRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GetUserDeliveryInfoRequest) GetUserDeliveryId() int32 {
	if x != nil {
		return x.UserDeliveryId
	}
	return 0
}

type GetUserDeliveryInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonResponse     `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Info   []*UserDeliveryInfo `protobuf:"bytes,2,rep,name=info,proto3" json:"info,omitempty"`
}

func (x *GetUserDeliveryInfoResponse) Reset() {
	*x = GetUserDeliveryInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDeliveryInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDeliveryInfoResponse) ProtoMessage() {}

func (x *GetUserDeliveryInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDeliveryInfoResponse.ProtoReflect.Descriptor instead.
func (*GetUserDeliveryInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{14}
}

func (x *GetUserDeliveryInfoResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetUserDeliveryInfoResponse) GetInfo() []*UserDeliveryInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type CheckUserDeliveryInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         int64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	DeliveryIds []int32 `protobuf:"varint,2,rep,packed,name=delivery_ids,json=deliveryIds,proto3" json:"delivery_ids,omitempty"`
}

func (x *CheckUserDeliveryInfoRequest) Reset() {
	*x = CheckUserDeliveryInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUserDeliveryInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserDeliveryInfoRequest) ProtoMessage() {}

func (x *CheckUserDeliveryInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserDeliveryInfoRequest.ProtoReflect.Descriptor instead.
func (*CheckUserDeliveryInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{15}
}

func (x *CheckUserDeliveryInfoRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CheckUserDeliveryInfoRequest) GetDeliveryIds() []int32 {
	if x != nil {
		return x.DeliveryIds
	}
	return nil
}

type CheckUserDeliveryInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *CheckUserDeliveryInfoResponse) Reset() {
	*x = CheckUserDeliveryInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUserDeliveryInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserDeliveryInfoResponse) ProtoMessage() {}

func (x *CheckUserDeliveryInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserDeliveryInfoResponse.ProtoReflect.Descriptor instead.
func (*CheckUserDeliveryInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{16}
}

func (x *CheckUserDeliveryInfoResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

type CheckUserStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UidList []int64 `protobuf:"varint,1,rep,packed,name=uid_list,json=uidList,proto3" json:"uid_list,omitempty"`
}

func (x *CheckUserStateRequest) Reset() {
	*x = CheckUserStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUserStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserStateRequest) ProtoMessage() {}

func (x *CheckUserStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserStateRequest.ProtoReflect.Descriptor instead.
func (*CheckUserStateRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{17}
}

func (x *CheckUserStateRequest) GetUidList() []int64 {
	if x != nil {
		return x.UidList
	}
	return nil
}

type CheckUserStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *CheckUserStateResponse) Reset() {
	*x = CheckUserStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUserStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserStateResponse) ProtoMessage() {}

func (x *CheckUserStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserStateResponse.ProtoReflect.Descriptor instead.
func (*CheckUserStateResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{18}
}

func (x *CheckUserStateResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

type GetUserAccountIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UidList []int64 `protobuf:"varint,1,rep,packed,name=uid_list,json=uidList,proto3" json:"uid_list,omitempty"`
}

func (x *GetUserAccountIdRequest) Reset() {
	*x = GetUserAccountIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAccountIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAccountIdRequest) ProtoMessage() {}

func (x *GetUserAccountIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAccountIdRequest.ProtoReflect.Descriptor instead.
func (*GetUserAccountIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{19}
}

func (x *GetUserAccountIdRequest) GetUidList() []int64 {
	if x != nil {
		return x.UidList
	}
	return nil
}

type UserAccountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *UserAccountInfo) Reset() {
	*x = UserAccountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAccountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAccountInfo) ProtoMessage() {}

func (x *UserAccountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAccountInfo.ProtoReflect.Descriptor instead.
func (*UserAccountInfo) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{20}
}

func (x *UserAccountInfo) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserAccountInfo) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type GetUserAccountIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common   *CommonResponse    `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	InfoList []*UserAccountInfo `protobuf:"bytes,2,rep,name=info_list,json=infoList,proto3" json:"info_list,omitempty"`
}

func (x *GetUserAccountIdResponse) Reset() {
	*x = GetUserAccountIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserAccountIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserAccountIdResponse) ProtoMessage() {}

func (x *GetUserAccountIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserAccountIdResponse.ProtoReflect.Descriptor instead.
func (*GetUserAccountIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{21}
}

func (x *GetUserAccountIdResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetUserAccountIdResponse) GetInfoList() []*UserAccountInfo {
	if x != nil {
		return x.InfoList
	}
	return nil
}

type CheckUserIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountryCode string `protobuf:"bytes,1,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Phone       string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	Pwd         string `protobuf:"bytes,3,opt,name=pwd,proto3" json:"pwd,omitempty"`
}

func (x *CheckUserIdentityRequest) Reset() {
	*x = CheckUserIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUserIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserIdentityRequest) ProtoMessage() {}

func (x *CheckUserIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserIdentityRequest.ProtoReflect.Descriptor instead.
func (*CheckUserIdentityRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{22}
}

func (x *CheckUserIdentityRequest) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *CheckUserIdentityRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CheckUserIdentityRequest) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

type CheckUserIdentityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *CheckUserIdentityResponse) Reset() {
	*x = CheckUserIdentityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUserIdentityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserIdentityResponse) ProtoMessage() {}

func (x *CheckUserIdentityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserIdentityResponse.ProtoReflect.Descriptor instead.
func (*CheckUserIdentityResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{23}
}

func (x *CheckUserIdentityResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

type GetUserByInviteCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteCode string `protobuf:"bytes,1,opt,name=invite_code,json=inviteCode,proto3" json:"invite_code,omitempty"`
}

func (x *GetUserByInviteCodeRequest) Reset() {
	*x = GetUserByInviteCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserByInviteCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserByInviteCodeRequest) ProtoMessage() {}

func (x *GetUserByInviteCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserByInviteCodeRequest.ProtoReflect.Descriptor instead.
func (*GetUserByInviteCodeRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{24}
}

func (x *GetUserByInviteCodeRequest) GetInviteCode() string {
	if x != nil {
		return x.InviteCode
	}
	return ""
}

type GetUserByInviteCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Info   *UserInfo       `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetUserByInviteCodeResponse) Reset() {
	*x = GetUserByInviteCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserByInviteCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserByInviteCodeResponse) ProtoMessage() {}

func (x *GetUserByInviteCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserByInviteCodeResponse.ProtoReflect.Descriptor instead.
func (*GetUserByInviteCodeResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{25}
}

func (x *GetUserByInviteCodeResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetUserByInviteCodeResponse) GetInfo() *UserInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type LoginUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginType LoginType `protobuf:"varint,1,opt,name=login_type,json=loginType,proto3,enum=users.LoginType" json:"login_type,omitempty"`
	// Types that are assignable to LoginInfo:
	//	*LoginUserRequest_Pwd
	//	*LoginUserRequest_VerifyCode
	//	*LoginUserRequest_Token
	LoginInfo isLoginUserRequest_LoginInfo `protobuf_oneof:"login_info"`
}

func (x *LoginUserRequest) Reset() {
	*x = LoginUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginUserRequest) ProtoMessage() {}

func (x *LoginUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginUserRequest.ProtoReflect.Descriptor instead.
func (*LoginUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{26}
}

func (x *LoginUserRequest) GetLoginType() LoginType {
	if x != nil {
		return x.LoginType
	}
	return LoginType_PWD
}

func (m *LoginUserRequest) GetLoginInfo() isLoginUserRequest_LoginInfo {
	if m != nil {
		return m.LoginInfo
	}
	return nil
}

func (x *LoginUserRequest) GetPwd() *LoginByPassword {
	if x, ok := x.GetLoginInfo().(*LoginUserRequest_Pwd); ok {
		return x.Pwd
	}
	return nil
}

func (x *LoginUserRequest) GetVerifyCode() *LoginVerifyCode {
	if x, ok := x.GetLoginInfo().(*LoginUserRequest_VerifyCode); ok {
		return x.VerifyCode
	}
	return nil
}

func (x *LoginUserRequest) GetToken() *LoginToken {
	if x, ok := x.GetLoginInfo().(*LoginUserRequest_Token); ok {
		return x.Token
	}
	return nil
}

type isLoginUserRequest_LoginInfo interface {
	isLoginUserRequest_LoginInfo()
}

type LoginUserRequest_Pwd struct {
	Pwd *LoginByPassword `protobuf:"bytes,100,opt,name=pwd,proto3,oneof"`
}

type LoginUserRequest_VerifyCode struct {
	VerifyCode *LoginVerifyCode `protobuf:"bytes,101,opt,name=verify_code,json=verifyCode,proto3,oneof"`
}

type LoginUserRequest_Token struct {
	Token *LoginToken `protobuf:"bytes,102,opt,name=token,proto3,oneof"`
}

func (*LoginUserRequest_Pwd) isLoginUserRequest_LoginInfo() {}

func (*LoginUserRequest_VerifyCode) isLoginUserRequest_LoginInfo() {}

func (*LoginUserRequest_Token) isLoginUserRequest_LoginInfo() {}

type LoginUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common        *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	IdentityToken string          `protobuf:"bytes,2,opt,name=identity_token,json=identityToken,proto3" json:"identity_token,omitempty"`
}

func (x *LoginUserResponse) Reset() {
	*x = LoginUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginUserResponse) ProtoMessage() {}

func (x *LoginUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginUserResponse.ProtoReflect.Descriptor instead.
func (*LoginUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{27}
}

func (x *LoginUserResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *LoginUserResponse) GetIdentityToken() string {
	if x != nil {
		return x.IdentityToken
	}
	return ""
}

type PasswordResetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Pwd string `protobuf:"bytes,2,opt,name=pwd,proto3" json:"pwd,omitempty"`
}

func (x *PasswordResetRequest) Reset() {
	*x = PasswordResetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PasswordResetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswordResetRequest) ProtoMessage() {}

func (x *PasswordResetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswordResetRequest.ProtoReflect.Descriptor instead.
func (*PasswordResetRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{28}
}

func (x *PasswordResetRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *PasswordResetRequest) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

type PasswordResetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *PasswordResetResponse) Reset() {
	*x = PasswordResetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PasswordResetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswordResetResponse) ProtoMessage() {}

func (x *PasswordResetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswordResetResponse.ProtoReflect.Descriptor instead.
func (*PasswordResetResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{29}
}

func (x *PasswordResetResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

type UserLoginState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Time    int64  `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *UserLoginState) Reset() {
	*x = UserLoginState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoginState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginState) ProtoMessage() {}

func (x *UserLoginState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginState.ProtoReflect.Descriptor instead.
func (*UserLoginState) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{30}
}

func (x *UserLoginState) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UserLoginState) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type UpdateUserLoginStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid   int64           `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	State *UserLoginState `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *UpdateUserLoginStateRequest) Reset() {
	*x = UpdateUserLoginStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserLoginStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserLoginStateRequest) ProtoMessage() {}

func (x *UpdateUserLoginStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserLoginStateRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserLoginStateRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateUserLoginStateRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UpdateUserLoginStateRequest) GetState() *UserLoginState {
	if x != nil {
		return x.State
	}
	return nil
}

type UpdateUserLoginStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *UpdateUserLoginStateResponse) Reset() {
	*x = UpdateUserLoginStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserLoginStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserLoginStateResponse) ProtoMessage() {}

func (x *UpdateUserLoginStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserLoginStateResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserLoginStateResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateUserLoginStateResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

type RegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName    string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Sex         int32  `protobuf:"varint,2,opt,name=sex,proto3" json:"sex,omitempty"`
	CountryCode string `protobuf:"bytes,3,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Phone       string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Email       string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	State       int32  `protobuf:"varint,6,opt,name=state,proto3" json:"state,omitempty"`
	IdCardNo    string `protobuf:"bytes,7,opt,name=id_card_no,json=idCardNo,proto3" json:"id_card_no,omitempty"`
	InviterUser int64  `protobuf:"varint,8,opt,name=inviter_user,json=inviterUser,proto3" json:"inviter_user,omitempty"`
	ContactAddr string `protobuf:"bytes,9,opt,name=contact_addr,json=contactAddr,proto3" json:"contact_addr,omitempty"`
	Age         int32  `protobuf:"varint,10,opt,name=age,proto3" json:"age,omitempty"`
	Password    string `protobuf:"bytes,11,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{33}
}

func (x *RegisterRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *RegisterRequest) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *RegisterRequest) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *RegisterRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *RegisterRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RegisterRequest) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *RegisterRequest) GetIdCardNo() string {
	if x != nil {
		return x.IdCardNo
	}
	return ""
}

func (x *RegisterRequest) GetInviterUser() int64 {
	if x != nil {
		return x.InviterUser
	}
	return 0
}

func (x *RegisterRequest) GetContactAddr() string {
	if x != nil {
		return x.ContactAddr
	}
	return ""
}

func (x *RegisterRequest) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *RegisterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type RegisterResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteCode string `protobuf:"bytes,3,opt,name=invite_code,json=inviteCode,proto3" json:"invite_code,omitempty"`
}

func (x *RegisterResult) Reset() {
	*x = RegisterResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResult) ProtoMessage() {}

func (x *RegisterResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResult.ProtoReflect.Descriptor instead.
func (*RegisterResult) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{34}
}

func (x *RegisterResult) GetInviteCode() string {
	if x != nil {
		return x.InviteCode
	}
	return ""
}

type RegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Result *RegisterResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{35}
}

func (x *RegisterResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *RegisterResponse) GetResult() *RegisterResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type CheckUserByPhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountryCode string `protobuf:"bytes,1,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Phone       string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *CheckUserByPhoneRequest) Reset() {
	*x = CheckUserByPhoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUserByPhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserByPhoneRequest) ProtoMessage() {}

func (x *CheckUserByPhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserByPhoneRequest.ProtoReflect.Descriptor instead.
func (*CheckUserByPhoneRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{36}
}

func (x *CheckUserByPhoneRequest) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *CheckUserByPhoneRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type CheckUserByPhoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common  *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	IsExist bool            `protobuf:"varint,2,opt,name=is_exist,json=isExist,proto3" json:"is_exist,omitempty"`
}

func (x *CheckUserByPhoneResponse) Reset() {
	*x = CheckUserByPhoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUserByPhoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserByPhoneResponse) ProtoMessage() {}

func (x *CheckUserByPhoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserByPhoneResponse.ProtoReflect.Descriptor instead.
func (*CheckUserByPhoneResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{37}
}

func (x *CheckUserByPhoneResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *CheckUserByPhoneResponse) GetIsExist() bool {
	if x != nil {
		return x.IsExist
	}
	return false
}

type GetUserInfoByPhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountryCode string `protobuf:"bytes,1,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Phone       string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *GetUserInfoByPhoneRequest) Reset() {
	*x = GetUserInfoByPhoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoByPhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoByPhoneRequest) ProtoMessage() {}

func (x *GetUserInfoByPhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoByPhoneRequest.ProtoReflect.Descriptor instead.
func (*GetUserInfoByPhoneRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{38}
}

func (x *GetUserInfoByPhoneRequest) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *GetUserInfoByPhoneRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type GetUserInfoByPhoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Info   *UserInfo       `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetUserInfoByPhoneResponse) Reset() {
	*x = GetUserInfoByPhoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoByPhoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoByPhoneResponse) ProtoMessage() {}

func (x *GetUserInfoByPhoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoByPhoneResponse.ProtoReflect.Descriptor instead.
func (*GetUserInfoByPhoneResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{39}
}

func (x *GetUserInfoByPhoneResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetUserInfoByPhoneResponse) GetInfo() *UserInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetUserInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetUserInfoRequest) Reset() {
	*x = GetUserInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoRequest) ProtoMessage() {}

func (x *GetUserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoRequest.ProtoReflect.Descriptor instead.
func (*GetUserInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{40}
}

func (x *GetUserInfoRequest) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	AccountId   string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	UserName    string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Sex         int32  `protobuf:"varint,4,opt,name=sex,proto3" json:"sex,omitempty"`
	CountryCode string `protobuf:"bytes,5,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Phone       string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	Email       string `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	State       int32  `protobuf:"varint,8,opt,name=state,proto3" json:"state,omitempty"`
	IdCardNo    string `protobuf:"bytes,9,opt,name=id_card_no,json=idCardNo,proto3" json:"id_card_no,omitempty"`
	Inviter     int64  `protobuf:"varint,10,opt,name=inviter,proto3" json:"inviter,omitempty"`
	InviterCode string `protobuf:"bytes,11,opt,name=inviter_code,json=inviterCode,proto3" json:"inviter_code,omitempty"`
	ContactAddr string `protobuf:"bytes,12,opt,name=contact_addr,json=contactAddr,proto3" json:"contact_addr,omitempty"`
	Age         int32  `protobuf:"varint,13,opt,name=age,proto3" json:"age,omitempty"`
	CreateTime  string `protobuf:"bytes,14,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime  string `protobuf:"bytes,15,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{41}
}

func (x *UserInfo) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserInfo) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *UserInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserInfo) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *UserInfo) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *UserInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserInfo) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *UserInfo) GetIdCardNo() string {
	if x != nil {
		return x.IdCardNo
	}
	return ""
}

func (x *UserInfo) GetInviter() int64 {
	if x != nil {
		return x.Inviter
	}
	return 0
}

func (x *UserInfo) GetInviterCode() string {
	if x != nil {
		return x.InviterCode
	}
	return ""
}

func (x *UserInfo) GetContactAddr() string {
	if x != nil {
		return x.ContactAddr
	}
	return ""
}

func (x *UserInfo) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *UserInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *UserInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type GetUserInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Info   *UserInfo       `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetUserInfoResponse) Reset() {
	*x = GetUserInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoResponse) ProtoMessage() {}

func (x *GetUserInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoResponse.ProtoReflect.Descriptor instead.
func (*GetUserInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{42}
}

func (x *GetUserInfoResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetUserInfoResponse) GetInfo() *UserInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type MerchantsMaterialInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid          int64  `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	MaterialId   int64  `protobuf:"varint,2,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
	RegisterAddr string `protobuf:"bytes,3,opt,name=register_addr,json=registerAddr,proto3" json:"register_addr,omitempty"`
	HealthCardNo string `protobuf:"bytes,4,opt,name=health_card_no,json=healthCardNo,proto3" json:"health_card_no,omitempty"`
	Identity     int32  `protobuf:"varint,5,opt,name=identity,proto3" json:"identity,omitempty"`
	State        int32  `protobuf:"varint,6,opt,name=state,proto3" json:"state,omitempty"`
	TaxCardNo    string `protobuf:"bytes,7,opt,name=tax_card_no,json=taxCardNo,proto3" json:"tax_card_no,omitempty"`
	CreateTime   string `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime   string `protobuf:"bytes,9,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *MerchantsMaterialInfo) Reset() {
	*x = MerchantsMaterialInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantsMaterialInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantsMaterialInfo) ProtoMessage() {}

func (x *MerchantsMaterialInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantsMaterialInfo.ProtoReflect.Descriptor instead.
func (*MerchantsMaterialInfo) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{43}
}

func (x *MerchantsMaterialInfo) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *MerchantsMaterialInfo) GetMaterialId() int64 {
	if x != nil {
		return x.MaterialId
	}
	return 0
}

func (x *MerchantsMaterialInfo) GetRegisterAddr() string {
	if x != nil {
		return x.RegisterAddr
	}
	return ""
}

func (x *MerchantsMaterialInfo) GetHealthCardNo() string {
	if x != nil {
		return x.HealthCardNo
	}
	return ""
}

func (x *MerchantsMaterialInfo) GetIdentity() int32 {
	if x != nil {
		return x.Identity
	}
	return 0
}

func (x *MerchantsMaterialInfo) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *MerchantsMaterialInfo) GetTaxCardNo() string {
	if x != nil {
		return x.TaxCardNo
	}
	return ""
}

func (x *MerchantsMaterialInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *MerchantsMaterialInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type MerchantsMaterialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info          *MerchantsMaterialInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	OperationType OperationType          `protobuf:"varint,2,opt,name=operation_type,json=operationType,proto3,enum=users.OperationType" json:"operation_type,omitempty"`
}

func (x *MerchantsMaterialRequest) Reset() {
	*x = MerchantsMaterialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantsMaterialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantsMaterialRequest) ProtoMessage() {}

func (x *MerchantsMaterialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantsMaterialRequest.ProtoReflect.Descriptor instead.
func (*MerchantsMaterialRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{44}
}

func (x *MerchantsMaterialRequest) GetInfo() *MerchantsMaterialInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *MerchantsMaterialRequest) GetOperationType() OperationType {
	if x != nil {
		return x.OperationType
	}
	return OperationType_CREATE
}

type MerchantsMaterialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common     *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	MaterialId int64           `protobuf:"varint,2,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
}

func (x *MerchantsMaterialResponse) Reset() {
	*x = MerchantsMaterialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantsMaterialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantsMaterialResponse) ProtoMessage() {}

func (x *MerchantsMaterialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantsMaterialResponse.ProtoReflect.Descriptor instead.
func (*MerchantsMaterialResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{45}
}

func (x *MerchantsMaterialResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *MerchantsMaterialResponse) GetMaterialId() int64 {
	if x != nil {
		return x.MaterialId
	}
	return 0
}

type GetMerchantsMaterialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaterialId int64 `protobuf:"varint,1,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
}

func (x *GetMerchantsMaterialRequest) Reset() {
	*x = GetMerchantsMaterialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMerchantsMaterialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMerchantsMaterialRequest) ProtoMessage() {}

func (x *GetMerchantsMaterialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMerchantsMaterialRequest.ProtoReflect.Descriptor instead.
func (*GetMerchantsMaterialRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{46}
}

func (x *GetMerchantsMaterialRequest) GetMaterialId() int64 {
	if x != nil {
		return x.MaterialId
	}
	return 0
}

type GetMerchantsMaterialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonResponse        `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Info   *MerchantsMaterialInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetMerchantsMaterialResponse) Reset() {
	*x = GetMerchantsMaterialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMerchantsMaterialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMerchantsMaterialResponse) ProtoMessage() {}

func (x *GetMerchantsMaterialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMerchantsMaterialResponse.ProtoReflect.Descriptor instead.
func (*GetMerchantsMaterialResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{47}
}

func (x *GetMerchantsMaterialResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetMerchantsMaterialResponse) GetInfo() *MerchantsMaterialInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type MerchantsAssociateShopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaterialId  int64 `protobuf:"varint,1,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
	ShopId      int64 `protobuf:"varint,2,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	IsAssociate bool  `protobuf:"varint,3,opt,name=is_associate,json=isAssociate,proto3" json:"is_associate,omitempty"`
}

func (x *MerchantsAssociateShopRequest) Reset() {
	*x = MerchantsAssociateShopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantsAssociateShopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantsAssociateShopRequest) ProtoMessage() {}

func (x *MerchantsAssociateShopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantsAssociateShopRequest.ProtoReflect.Descriptor instead.
func (*MerchantsAssociateShopRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{48}
}

func (x *MerchantsAssociateShopRequest) GetMaterialId() int64 {
	if x != nil {
		return x.MaterialId
	}
	return 0
}

func (x *MerchantsAssociateShopRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *MerchantsAssociateShopRequest) GetIsAssociate() bool {
	if x != nil {
		return x.IsAssociate
	}
	return false
}

type MerchantsAssociateShopResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
}

func (x *MerchantsAssociateShopResponse) Reset() {
	*x = MerchantsAssociateShopResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantsAssociateShopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantsAssociateShopResponse) ProtoMessage() {}

func (x *MerchantsAssociateShopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantsAssociateShopResponse.ProtoReflect.Descriptor instead.
func (*MerchantsAssociateShopResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{49}
}

func (x *MerchantsAssociateShopResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

type MerchantsMaterialAuditRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaterialId int64  `protobuf:"varint,1,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
	AuditUid   int64  `protobuf:"varint,2,opt,name=audit_uid,json=auditUid,proto3" json:"audit_uid,omitempty"`
	Comment    string `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *MerchantsMaterialAuditRequest) Reset() {
	*x = MerchantsMaterialAuditRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantsMaterialAuditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantsMaterialAuditRequest) ProtoMessage() {}

func (x *MerchantsMaterialAuditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantsMaterialAuditRequest.ProtoReflect.Descriptor instead.
func (*MerchantsMaterialAuditRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{50}
}

func (x *MerchantsMaterialAuditRequest) GetMaterialId() int64 {
	if x != nil {
		return x.MaterialId
	}
	return 0
}

func (x *MerchantsMaterialAuditRequest) GetAuditUid() int64 {
	if x != nil {
		return x.AuditUid
	}
	return 0
}

func (x *MerchantsMaterialAuditRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type MerchantsMaterialAuditResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common       *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	State        int32           `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	Comment      string          `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	NextAuditUid int64           `protobuf:"varint,4,opt,name=next_audit_uid,json=nextAuditUid,proto3" json:"next_audit_uid,omitempty"`
	IsOver       bool            `protobuf:"varint,5,opt,name=is_over,json=isOver,proto3" json:"is_over,omitempty"`
}

func (x *MerchantsMaterialAuditResponse) Reset() {
	*x = MerchantsMaterialAuditResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerchantsMaterialAuditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantsMaterialAuditResponse) ProtoMessage() {}

func (x *MerchantsMaterialAuditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantsMaterialAuditResponse.ProtoReflect.Descriptor instead.
func (*MerchantsMaterialAuditResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{51}
}

func (x *MerchantsMaterialAuditResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *MerchantsMaterialAuditResponse) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *MerchantsMaterialAuditResponse) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *MerchantsMaterialAuditResponse) GetNextAuditUid() int64 {
	if x != nil {
		return x.NextAuditUid
	}
	return 0
}

func (x *MerchantsMaterialAuditResponse) GetIsOver() bool {
	if x != nil {
		return x.IsOver
	}
	return false
}

type ListUserInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageMeta *PageMeta `protobuf:"bytes,1,opt,name=page_meta,json=pageMeta,proto3" json:"page_meta,omitempty"`
	Token    string    `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"` // 因为该接口可以批量获取用户，因此需要token
}

func (x *ListUserInfoRequest) Reset() {
	*x = ListUserInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserInfoRequest) ProtoMessage() {}

func (x *ListUserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserInfoRequest.ProtoReflect.Descriptor instead.
func (*ListUserInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{52}
}

func (x *ListUserInfoRequest) GetPageMeta() *PageMeta {
	if x != nil {
		return x.PageMeta
	}
	return nil
}

func (x *ListUserInfoRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ListUserInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common       *CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	UserInfoList []*MobilePhone  `protobuf:"bytes,2,rep,name=user_info_list,json=userInfoList,proto3" json:"user_info_list,omitempty"`
}

func (x *ListUserInfoResponse) Reset() {
	*x = ListUserInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserInfoResponse) ProtoMessage() {}

func (x *ListUserInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserInfoResponse.ProtoReflect.Descriptor instead.
func (*ListUserInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{53}
}

func (x *ListUserInfoResponse) GetCommon() *CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *ListUserInfoResponse) GetUserInfoList() []*MobilePhone {
	if x != nil {
		return x.UserInfoList
	}
	return nil
}

type CommonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code RetCode `protobuf:"varint,1,opt,name=code,proto3,enum=users.RetCode" json:"code,omitempty"`
	Msg  string  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *CommonResponse) Reset() {
	*x = CommonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResponse) ProtoMessage() {}

func (x *CommonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResponse.ProtoReflect.Descriptor instead.
func (*CommonResponse) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{54}
}

func (x *CommonResponse) GetCode() RetCode {
	if x != nil {
		return x.Code
	}
	return RetCode_SUCCESS
}

func (x *CommonResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type PageMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum  int32 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *PageMeta) Reset() {
	*x = PageMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageMeta) ProtoMessage() {}

func (x *PageMeta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageMeta.ProtoReflect.Descriptor instead.
func (*PageMeta) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{55}
}

func (x *PageMeta) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *PageMeta) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type OperationMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpUid      int64  `protobuf:"varint,1,opt,name=op_uid,json=opUid,proto3" json:"op_uid,omitempty"`
	OpIp       string `protobuf:"bytes,2,opt,name=op_ip,json=opIp,proto3" json:"op_ip,omitempty"`
	OpPlatform string `protobuf:"bytes,3,opt,name=op_platform,json=opPlatform,proto3" json:"op_platform,omitempty"` // 操作平台
	OpDevice   string `protobuf:"bytes,4,opt,name=op_device,json=opDevice,proto3" json:"op_device,omitempty"`       // 操作设备
}

func (x *OperationMeta) Reset() {
	*x = OperationMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationMeta) ProtoMessage() {}

func (x *OperationMeta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_micro_mall_users_proto_users_users_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationMeta.ProtoReflect.Descriptor instead.
func (*OperationMeta) Descriptor() ([]byte, []int) {
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP(), []int{56}
}

func (x *OperationMeta) GetOpUid() int64 {
	if x != nil {
		return x.OpUid
	}
	return 0
}

func (x *OperationMeta) GetOpIp() string {
	if x != nil {
		return x.OpIp
	}
	return ""
}

func (x *OperationMeta) GetOpPlatform() string {
	if x != nil {
		return x.OpPlatform
	}
	return ""
}

func (x *OperationMeta) GetOpDevice() string {
	if x != nil {
		return x.OpDevice
	}
	return ""
}

var File_proto_micro_mall_users_proto_users_users_proto protoreflect.FileDescriptor

var file_proto_micro_mall_users_proto_users_users_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x5f, 0x6d, 0x61,
	0x6c, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x1a, 0x3e, 0x67, 0x69, 0x74, 0x65, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6b, 0x65, 0x6c, 0x76, 0x69, 0x6e, 0x73, 0x2d, 0x69, 0x6f, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x21, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x46, 0x0a, 0x0b, 0x4d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x32, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x77, 0x64, 0x4b, 0x69, 0x6e, 0x64, 0x52,
	0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x2a, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x70, 0x77, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x77, 0x64, 0x42, 0x06,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x5c, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2e, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x22, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xee, 0x01, 0x0a, 0x10, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x33, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2e, 0x49, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x30, 0x0a, 0x13, 0x46, 0x69, 0x6e,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x07, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x99, 0x01, 0x0a, 0x0c,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x77, 0x0a, 0x14, 0x46, 0x69, 0x6e, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2d, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x30,
	0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x4d, 0x61, 0x69, 0x6e, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x84, 0x02, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x07, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2c, 0x0a, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x2e, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0xc7, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x06, 0x6f, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x4a, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x22, 0x9b, 0x01, 0x0a, 0x1d, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x22, 0x4f, 0x0a, 0x1e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x22, 0x58, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x75, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x53, 0x0a, 0x1c, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x64, 0x73, 0x22, 0x4e, 0x0a, 0x1d,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a,
	0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x15,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x47, 0x0a, 0x16, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x34, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x42, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x7e, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2d, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x33,
	0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x65, 0x0a, 0x18, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x77, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x77, 0x64, 0x22, 0x4a, 0x0a, 0x19, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x3d, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x71, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xe3, 0x01, 0x0a, 0x10, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a,
	0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x10, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a,
	0x0a, 0x03, 0x70, 0x77, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x48, 0x00, 0x52, 0x03, 0x70, 0x77, 0x64, 0x12, 0x39, 0x0a, 0x0b, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x66,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x42, 0x0c, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x69,
	0x0a, 0x11, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x3a, 0x0a, 0x14, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x77, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x70, 0x77, 0x64, 0x22, 0x46, 0x0a, 0x15, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d,
	0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x3e, 0x0a,
	0x0e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x5c, 0x0a,
	0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x2b,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x4d, 0x0a, 0x1c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0xb7, 0x02, 0x0a, 0x0f, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x69, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x6f,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x6f,
	0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x22, 0x31, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x70, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x52, 0x0a, 0x17, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x64, 0x0a,
	0x18, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x65,
	0x78, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x70, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x26, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x22, 0xa1, 0x03, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x69, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x6e, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x43, 0x61, 0x72,
	0x64, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x69, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d,
	0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x23, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x22, 0xa9, 0x02, 0x0a, 0x15, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x73,
	0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0b,
	0x74, 0x61, 0x78, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x61, 0x78, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x89,
	0x01, 0x0a, 0x18, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x73, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x73, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a,
	0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x6b, 0x0a, 0x19, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x73, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x73, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x7f, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x73, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x73, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x7c, 0x0a, 0x1d, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x73, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x53, 0x68,
	0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68,
	0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f,
	0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x73, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x22, 0x4f, 0x0a, 0x1e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x73, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x77, 0x0a, 0x1d, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x73, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x55, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0xbe, 0x01, 0x0a, 0x1e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x73, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6e, 0x65, 0x78, 0x74,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x55, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6f,
	0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4f, 0x76, 0x65,
	0x72, 0x22, 0x59, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x85, 0x01, 0x0a,
	0x14, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2e, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x4a, 0x04,
	0x08, 0x03, 0x10, 0x04, 0x22, 0x46, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x52, 0x65, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x42, 0x0a, 0x08,
	0x50, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0x79, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74,
	0x61, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x70, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6f, 0x70, 0x55, 0x69, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x6f, 0x70, 0x5f, 0x69,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x70, 0x49, 0x70, 0x12, 0x1f, 0x0a,
	0x0b, 0x6f, 0x70, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1b,
	0x0a, 0x09, 0x6f, 0x70, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6f, 0x70, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2a, 0xd8, 0x03, 0x0a, 0x07,
	0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45,
	0x53, 0x53, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xf4, 0x03,
	0x12, 0x14, 0x0a, 0x0e, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49,
	0x53, 0x54, 0x10, 0xd1, 0x86, 0x03, 0x12, 0x10, 0x0a, 0x0a, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45,
	0x58, 0x49, 0x53, 0x54, 0x10, 0xd2, 0x86, 0x03, 0x12, 0x18, 0x0a, 0x12, 0x4d, 0x45, 0x52, 0x43,
	0x48, 0x41, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xd3,
	0x86, 0x03, 0x12, 0x14, 0x0a, 0x0e, 0x4d, 0x45, 0x52, 0x43, 0x48, 0x41, 0x4e, 0x54, 0x5f, 0x45,
	0x58, 0x49, 0x53, 0x54, 0x10, 0xd4, 0x86, 0x03, 0x12, 0x13, 0x0a, 0x0d, 0x41, 0x43, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xd5, 0x86, 0x03, 0x12, 0x17, 0x0a,
	0x11, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49,
	0x53, 0x54, 0x10, 0xd6, 0x86, 0x03, 0x12, 0x18, 0x0a, 0x12, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50,
	0x57, 0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0xd7, 0x86, 0x03,
	0x12, 0x1a, 0x0a, 0x14, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0xd8, 0x86, 0x03, 0x12, 0x1e, 0x0a, 0x18,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x49, 0x4e,
	0x46, 0x4f, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xd9, 0x86, 0x03, 0x12, 0x22, 0x0a, 0x1c,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x49, 0x4e,
	0x46, 0x4f, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xda, 0x86, 0x03,
	0x12, 0x18, 0x0a, 0x12, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0xdb, 0x86, 0x03, 0x12, 0x12, 0x0a, 0x0c, 0x41, 0x43,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0xdc, 0x86, 0x03, 0x12, 0x15,
	0x0a, 0x0f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x10, 0xdd, 0x86, 0x03, 0x12, 0x15, 0x0a, 0x0f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x48,
	0x41, 0x52, 0x47, 0x45, 0x5f, 0x52, 0x55, 0x4e, 0x10, 0xde, 0x86, 0x03, 0x12, 0x19, 0x0a, 0x13,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x5f, 0x53, 0x55, 0x43, 0x43,
	0x45, 0x53, 0x53, 0x10, 0xdf, 0x86, 0x03, 0x12, 0x20, 0x0a, 0x1a, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x5f,
	0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0xe0, 0x86, 0x03, 0x12, 0x1b, 0x0a, 0x15, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x56, 0x45, 0x52, 0x49,
	0x46, 0x59, 0x10, 0xe1, 0x86, 0x03, 0x2a, 0x3e, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x41,
	0x55, 0x44, 0x49, 0x54, 0x10, 0x03, 0x2a, 0x1c, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x4e, 0x59, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x55,
	0x53, 0x44, 0x10, 0x01, 0x2a, 0x31, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x02, 0x2a, 0x34, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x45, 0x52, 0x53, 0x4f, 0x4e,
	0x41, 0x4c, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x4e, 0x59, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x02, 0x2a, 0x30, 0x0a,
	0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x57,
	0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x56, 0x45, 0x52, 0x49, 0x46, 0x59, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x02, 0x2a,
	0x2b, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x77, 0x64, 0x4b, 0x69, 0x6e, 0x64, 0x12,
	0x10, 0x0a, 0x0c, 0x4d, 0x4f, 0x42, 0x49, 0x4c, 0x45, 0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x01, 0x2a, 0x3e, 0x0a, 0x0d,
	0x49, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x12, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x41,
	0x4c, 0x53, 0x45, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x52, 0x55, 0x45, 0x10, 0x01, 0x32, 0xac, 0x0f, 0x0a,
	0x0c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5b, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x76, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f,
	0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x71, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12,
	0x14, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x2f,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x21, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b,
	0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2f,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x59, 0x0a, 0x08, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16,
	0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x59, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x1a, 0x0e,
	0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x3a, 0x01,
	0x2a, 0x12, 0x71, 0x0a, 0x11, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x13, 0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x6e, 0x0a, 0x0d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x1a, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2f, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x3a, 0x01, 0x2a, 0x12, 0x80, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x22, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x1a, 0x14,
	0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x88, 0x01, 0x0a, 0x16, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x24, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x1a, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x3a,
	0x01, 0x2a, 0x12, 0x7c, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x12, 0x63, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x14, 0x12, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x66, 0x6f,
	0x2f, 0x66, 0x69, 0x6e, 0x64, 0x12, 0x7a, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x1a, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x3a, 0x01,
	0x2a, 0x12, 0x7f, 0x0a, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f,
	0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x12, 0x6b, 0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x12,
	0x75, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x76,
	0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x12, 0x63, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x32, 0xc5, 0x04, 0x0a, 0x10,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x7e, 0x0a, 0x11, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x73, 0x4d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x73, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x73, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20,
	0x22, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x73, 0x2f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x3a, 0x01, 0x2a,
	0x12, 0x8a, 0x01, 0x0a, 0x16, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x73, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x12, 0x24, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x73, 0x4d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x73, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d,
	0x1a, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x73, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x84, 0x01,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x73, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x73, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x73, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x2f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x73, 0x2f, 0x6d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x12, 0x9c, 0x01, 0x0a, 0x16, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x73, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x12,
	0x24, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x73, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x73, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65,
	0x53, 0x68, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2f, 0x1a, 0x2a, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x73, 0x2f, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x74, 0x65, 0x2f, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x3a, 0x01, 0x2a, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_micro_mall_users_proto_users_users_proto_rawDescOnce sync.Once
	file_proto_micro_mall_users_proto_users_users_proto_rawDescData = file_proto_micro_mall_users_proto_users_users_proto_rawDesc
)

func file_proto_micro_mall_users_proto_users_users_proto_rawDescGZIP() []byte {
	file_proto_micro_mall_users_proto_users_users_proto_rawDescOnce.Do(func() {
		file_proto_micro_mall_users_proto_users_users_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_micro_mall_users_proto_users_users_proto_rawDescData)
	})
	return file_proto_micro_mall_users_proto_users_users_proto_rawDescData
}

var file_proto_micro_mall_users_proto_users_users_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_proto_micro_mall_users_proto_users_users_proto_msgTypes = make([]protoimpl.MessageInfo, 57)
var file_proto_micro_mall_users_proto_users_users_proto_goTypes = []interface{}{
	(RetCode)(0),                           // 0: users.RetCode
	(OperationType)(0),                     // 1: users.OperationType
	(CoinType)(0),                          // 2: users.CoinType
	(AccountState)(0),                      // 3: users.AccountState
	(AccountType)(0),                       // 4: users.AccountType
	(LoginType)(0),                         // 5: users.LoginType
	(LoginPwdKind)(0),                      // 6: users.LoginPwdKind
	(IsDefaultType)(0),                     // 7: users.IsDefaultType
	(*Email)(nil),                          // 8: users.Email
	(*MobilePhone)(nil),                    // 9: users.MobilePhone
	(*LoginByPassword)(nil),                // 10: users.LoginByPassword
	(*LoginVerifyCode)(nil),                // 11: users.LoginVerifyCode
	(*LoginToken)(nil),                     // 12: users.LoginToken
	(*UserDeliveryInfo)(nil),               // 13: users.UserDeliveryInfo
	(*FindUserInfoRequest)(nil),            // 14: users.FindUserInfoRequest
	(*UserInfoMain)(nil),                   // 15: users.UserInfoMain
	(*FindUserInfoResponse)(nil),           // 16: users.FindUserInfoResponse
	(*UserAccountChargeRequest)(nil),       // 17: users.UserAccountChargeRequest
	(*UserAccountChargeResponse)(nil),      // 18: users.UserAccountChargeResponse
	(*ModifyUserDeliveryInfoRequest)(nil),  // 19: users.ModifyUserDeliveryInfoRequest
	(*ModifyUserDeliveryInfoResponse)(nil), // 20: users.ModifyUserDeliveryInfoResponse
	(*GetUserDeliveryInfoRequest)(nil),     // 21: users.GetUserDeliveryInfoRequest
	(*GetUserDeliveryInfoResponse)(nil),    // 22: users.GetUserDeliveryInfoResponse
	(*CheckUserDeliveryInfoRequest)(nil),   // 23: users.CheckUserDeliveryInfoRequest
	(*CheckUserDeliveryInfoResponse)(nil),  // 24: users.CheckUserDeliveryInfoResponse
	(*CheckUserStateRequest)(nil),          // 25: users.CheckUserStateRequest
	(*CheckUserStateResponse)(nil),         // 26: users.CheckUserStateResponse
	(*GetUserAccountIdRequest)(nil),        // 27: users.GetUserAccountIdRequest
	(*UserAccountInfo)(nil),                // 28: users.UserAccountInfo
	(*GetUserAccountIdResponse)(nil),       // 29: users.GetUserAccountIdResponse
	(*CheckUserIdentityRequest)(nil),       // 30: users.CheckUserIdentityRequest
	(*CheckUserIdentityResponse)(nil),      // 31: users.CheckUserIdentityResponse
	(*GetUserByInviteCodeRequest)(nil),     // 32: users.GetUserByInviteCodeRequest
	(*GetUserByInviteCodeResponse)(nil),    // 33: users.GetUserByInviteCodeResponse
	(*LoginUserRequest)(nil),               // 34: users.LoginUserRequest
	(*LoginUserResponse)(nil),              // 35: users.LoginUserResponse
	(*PasswordResetRequest)(nil),           // 36: users.PasswordResetRequest
	(*PasswordResetResponse)(nil),          // 37: users.PasswordResetResponse
	(*UserLoginState)(nil),                 // 38: users.UserLoginState
	(*UpdateUserLoginStateRequest)(nil),    // 39: users.UpdateUserLoginStateRequest
	(*UpdateUserLoginStateResponse)(nil),   // 40: users.UpdateUserLoginStateResponse
	(*RegisterRequest)(nil),                // 41: users.RegisterRequest
	(*RegisterResult)(nil),                 // 42: users.RegisterResult
	(*RegisterResponse)(nil),               // 43: users.RegisterResponse
	(*CheckUserByPhoneRequest)(nil),        // 44: users.CheckUserByPhoneRequest
	(*CheckUserByPhoneResponse)(nil),       // 45: users.CheckUserByPhoneResponse
	(*GetUserInfoByPhoneRequest)(nil),      // 46: users.GetUserInfoByPhoneRequest
	(*GetUserInfoByPhoneResponse)(nil),     // 47: users.GetUserInfoByPhoneResponse
	(*GetUserInfoRequest)(nil),             // 48: users.GetUserInfoRequest
	(*UserInfo)(nil),                       // 49: users.UserInfo
	(*GetUserInfoResponse)(nil),            // 50: users.GetUserInfoResponse
	(*MerchantsMaterialInfo)(nil),          // 51: users.MerchantsMaterialInfo
	(*MerchantsMaterialRequest)(nil),       // 52: users.MerchantsMaterialRequest
	(*MerchantsMaterialResponse)(nil),      // 53: users.MerchantsMaterialResponse
	(*GetMerchantsMaterialRequest)(nil),    // 54: users.GetMerchantsMaterialRequest
	(*GetMerchantsMaterialResponse)(nil),   // 55: users.GetMerchantsMaterialResponse
	(*MerchantsAssociateShopRequest)(nil),  // 56: users.MerchantsAssociateShopRequest
	(*MerchantsAssociateShopResponse)(nil), // 57: users.MerchantsAssociateShopResponse
	(*MerchantsMaterialAuditRequest)(nil),  // 58: users.MerchantsMaterialAuditRequest
	(*MerchantsMaterialAuditResponse)(nil), // 59: users.MerchantsMaterialAuditResponse
	(*ListUserInfoRequest)(nil),            // 60: users.ListUserInfoRequest
	(*ListUserInfoResponse)(nil),           // 61: users.ListUserInfoResponse
	(*CommonResponse)(nil),                 // 62: users.CommonResponse
	(*PageMeta)(nil),                       // 63: users.PageMeta
	(*OperationMeta)(nil),                  // 64: users.OperationMeta
}
var file_proto_micro_mall_users_proto_users_users_proto_depIdxs = []int32{
	6,  // 0: users.LoginByPassword.login_kind:type_name -> users.LoginPwdKind
	8,  // 1: users.LoginByPassword.email:type_name -> users.Email
	9,  // 2: users.LoginByPassword.phone:type_name -> users.MobilePhone
	9,  // 3: users.LoginVerifyCode.phone:type_name -> users.MobilePhone
	7,  // 4: users.UserDeliveryInfo.is_default:type_name -> users.IsDefaultType
	62, // 5: users.FindUserInfoResponse.common:type_name -> users.CommonResponse
	15, // 6: users.FindUserInfoResponse.info_list:type_name -> users.UserInfoMain
	4,  // 7: users.UserAccountChargeRequest.account_type:type_name -> users.AccountType
	2,  // 8: users.UserAccountChargeRequest.coin_type:type_name -> users.CoinType
	64, // 9: users.UserAccountChargeRequest.op_meta:type_name -> users.OperationMeta
	62, // 10: users.UserAccountChargeResponse.common:type_name -> users.CommonResponse
	1,  // 11: users.ModifyUserDeliveryInfoRequest.operation_type:type_name -> users.OperationType
	13, // 12: users.ModifyUserDeliveryInfoRequest.info:type_name -> users.UserDeliveryInfo
	62, // 13: users.ModifyUserDeliveryInfoResponse.common:type_name -> users.CommonResponse
	62, // 14: users.GetUserDeliveryInfoResponse.common:type_name -> users.CommonResponse
	13, // 15: users.GetUserDeliveryInfoResponse.info:type_name -> users.UserDeliveryInfo
	62, // 16: users.CheckUserDeliveryInfoResponse.common:type_name -> users.CommonResponse
	62, // 17: users.CheckUserStateResponse.common:type_name -> users.CommonResponse
	62, // 18: users.GetUserAccountIdResponse.common:type_name -> users.CommonResponse
	28, // 19: users.GetUserAccountIdResponse.info_list:type_name -> users.UserAccountInfo
	62, // 20: users.CheckUserIdentityResponse.common:type_name -> users.CommonResponse
	62, // 21: users.GetUserByInviteCodeResponse.common:type_name -> users.CommonResponse
	49, // 22: users.GetUserByInviteCodeResponse.info:type_name -> users.UserInfo
	5,  // 23: users.LoginUserRequest.login_type:type_name -> users.LoginType
	10, // 24: users.LoginUserRequest.pwd:type_name -> users.LoginByPassword
	11, // 25: users.LoginUserRequest.verify_code:type_name -> users.LoginVerifyCode
	12, // 26: users.LoginUserRequest.token:type_name -> users.LoginToken
	62, // 27: users.LoginUserResponse.common:type_name -> users.CommonResponse
	62, // 28: users.PasswordResetResponse.common:type_name -> users.CommonResponse
	38, // 29: users.UpdateUserLoginStateRequest.state:type_name -> users.UserLoginState
	62, // 30: users.UpdateUserLoginStateResponse.common:type_name -> users.CommonResponse
	62, // 31: users.RegisterResponse.common:type_name -> users.CommonResponse
	42, // 32: users.RegisterResponse.result:type_name -> users.RegisterResult
	62, // 33: users.CheckUserByPhoneResponse.common:type_name -> users.CommonResponse
	62, // 34: users.GetUserInfoByPhoneResponse.common:type_name -> users.CommonResponse
	49, // 35: users.GetUserInfoByPhoneResponse.info:type_name -> users.UserInfo
	62, // 36: users.GetUserInfoResponse.common:type_name -> users.CommonResponse
	49, // 37: users.GetUserInfoResponse.info:type_name -> users.UserInfo
	51, // 38: users.MerchantsMaterialRequest.info:type_name -> users.MerchantsMaterialInfo
	1,  // 39: users.MerchantsMaterialRequest.operation_type:type_name -> users.OperationType
	62, // 40: users.MerchantsMaterialResponse.common:type_name -> users.CommonResponse
	62, // 41: users.GetMerchantsMaterialResponse.common:type_name -> users.CommonResponse
	51, // 42: users.GetMerchantsMaterialResponse.info:type_name -> users.MerchantsMaterialInfo
	62, // 43: users.MerchantsAssociateShopResponse.common:type_name -> users.CommonResponse
	62, // 44: users.MerchantsMaterialAuditResponse.common:type_name -> users.CommonResponse
	63, // 45: users.ListUserInfoRequest.page_meta:type_name -> users.PageMeta
	62, // 46: users.ListUserInfoResponse.common:type_name -> users.CommonResponse
	9,  // 47: users.ListUserInfoResponse.user_info_list:type_name -> users.MobilePhone
	0,  // 48: users.CommonResponse.code:type_name -> users.RetCode
	48, // 49: users.UsersService.GetUserInfo:input_type -> users.GetUserInfoRequest
	46, // 50: users.UsersService.GetUserInfoByPhone:input_type -> users.GetUserInfoByPhoneRequest
	44, // 51: users.UsersService.CheckUserByPhone:input_type -> users.CheckUserByPhoneRequest
	32, // 52: users.UsersService.GetUserInfoByInviteCode:input_type -> users.GetUserByInviteCodeRequest
	41, // 53: users.UsersService.Register:input_type -> users.RegisterRequest
	34, // 54: users.UsersService.LoginUser:input_type -> users.LoginUserRequest
	30, // 55: users.UsersService.CheckUserIdentity:input_type -> users.CheckUserIdentityRequest
	36, // 56: users.UsersService.PasswordReset:input_type -> users.PasswordResetRequest
	39, // 57: users.UsersService.UpdateUserLoginState:input_type -> users.UpdateUserLoginStateRequest
	19, // 58: users.UsersService.ModifyUserDeliveryInfo:input_type -> users.ModifyUserDeliveryInfoRequest
	21, // 59: users.UsersService.GetUserDeliveryInfo:input_type -> users.GetUserDeliveryInfoRequest
	14, // 60: users.UsersService.FindUserInfo:input_type -> users.FindUserInfoRequest
	17, // 61: users.UsersService.UserAccountCharge:input_type -> users.UserAccountChargeRequest
	23, // 62: users.UsersService.CheckUserDeliveryInfo:input_type -> users.CheckUserDeliveryInfoRequest
	25, // 63: users.UsersService.CheckUserState:input_type -> users.CheckUserStateRequest
	27, // 64: users.UsersService.GetUserAccountId:input_type -> users.GetUserAccountIdRequest
	60, // 65: users.UsersService.ListUserInfo:input_type -> users.ListUserInfoRequest
	52, // 66: users.MerchantsService.MerchantsMaterial:input_type -> users.MerchantsMaterialRequest
	58, // 67: users.MerchantsService.MerchantsMaterialAudit:input_type -> users.MerchantsMaterialAuditRequest
	54, // 68: users.MerchantsService.GetMerchantsMaterial:input_type -> users.GetMerchantsMaterialRequest
	56, // 69: users.MerchantsService.MerchantsAssociateShop:input_type -> users.MerchantsAssociateShopRequest
	50, // 70: users.UsersService.GetUserInfo:output_type -> users.GetUserInfoResponse
	47, // 71: users.UsersService.GetUserInfoByPhone:output_type -> users.GetUserInfoByPhoneResponse
	45, // 72: users.UsersService.CheckUserByPhone:output_type -> users.CheckUserByPhoneResponse
	33, // 73: users.UsersService.GetUserInfoByInviteCode:output_type -> users.GetUserByInviteCodeResponse
	43, // 74: users.UsersService.Register:output_type -> users.RegisterResponse
	35, // 75: users.UsersService.LoginUser:output_type -> users.LoginUserResponse
	31, // 76: users.UsersService.CheckUserIdentity:output_type -> users.CheckUserIdentityResponse
	37, // 77: users.UsersService.PasswordReset:output_type -> users.PasswordResetResponse
	40, // 78: users.UsersService.UpdateUserLoginState:output_type -> users.UpdateUserLoginStateResponse
	20, // 79: users.UsersService.ModifyUserDeliveryInfo:output_type -> users.ModifyUserDeliveryInfoResponse
	22, // 80: users.UsersService.GetUserDeliveryInfo:output_type -> users.GetUserDeliveryInfoResponse
	16, // 81: users.UsersService.FindUserInfo:output_type -> users.FindUserInfoResponse
	18, // 82: users.UsersService.UserAccountCharge:output_type -> users.UserAccountChargeResponse
	24, // 83: users.UsersService.CheckUserDeliveryInfo:output_type -> users.CheckUserDeliveryInfoResponse
	26, // 84: users.UsersService.CheckUserState:output_type -> users.CheckUserStateResponse
	29, // 85: users.UsersService.GetUserAccountId:output_type -> users.GetUserAccountIdResponse
	61, // 86: users.UsersService.ListUserInfo:output_type -> users.ListUserInfoResponse
	53, // 87: users.MerchantsService.MerchantsMaterial:output_type -> users.MerchantsMaterialResponse
	59, // 88: users.MerchantsService.MerchantsMaterialAudit:output_type -> users.MerchantsMaterialAuditResponse
	55, // 89: users.MerchantsService.GetMerchantsMaterial:output_type -> users.GetMerchantsMaterialResponse
	57, // 90: users.MerchantsService.MerchantsAssociateShop:output_type -> users.MerchantsAssociateShopResponse
	70, // [70:91] is the sub-list for method output_type
	49, // [49:70] is the sub-list for method input_type
	49, // [49:49] is the sub-list for extension type_name
	49, // [49:49] is the sub-list for extension extendee
	0,  // [0:49] is the sub-list for field type_name
}

func init() { file_proto_micro_mall_users_proto_users_users_proto_init() }
func file_proto_micro_mall_users_proto_users_users_proto_init() {
	if File_proto_micro_mall_users_proto_users_users_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Email); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MobilePhone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginByPassword); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginVerifyCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDeliveryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoMain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindUserInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountChargeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountChargeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyUserDeliveryInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyUserDeliveryInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDeliveryInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDeliveryInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUserDeliveryInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUserDeliveryInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUserStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUserStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAccountIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAccountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserAccountIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUserIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUserIdentityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserByInviteCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserByInviteCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PasswordResetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PasswordResetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoginState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserLoginStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserLoginStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUserByPhoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUserByPhoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoByPhoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoByPhoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantsMaterialInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantsMaterialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantsMaterialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMerchantsMaterialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMerchantsMaterialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantsAssociateShopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantsAssociateShopResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantsMaterialAuditRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerchantsMaterialAuditResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_micro_mall_users_proto_users_users_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_micro_mall_users_proto_users_users_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*LoginByPassword_Email)(nil),
		(*LoginByPassword_Phone)(nil),
	}
	file_proto_micro_mall_users_proto_users_users_proto_msgTypes[26].OneofWrappers = []interface{}{
		(*LoginUserRequest_Pwd)(nil),
		(*LoginUserRequest_VerifyCode)(nil),
		(*LoginUserRequest_Token)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_micro_mall_users_proto_users_users_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   57,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_micro_mall_users_proto_users_users_proto_goTypes,
		DependencyIndexes: file_proto_micro_mall_users_proto_users_users_proto_depIdxs,
		EnumInfos:         file_proto_micro_mall_users_proto_users_users_proto_enumTypes,
		MessageInfos:      file_proto_micro_mall_users_proto_users_users_proto_msgTypes,
	}.Build()
	File_proto_micro_mall_users_proto_users_users_proto = out.File
	file_proto_micro_mall_users_proto_users_users_proto_rawDesc = nil
	file_proto_micro_mall_users_proto_users_users_proto_goTypes = nil
	file_proto_micro_mall_users_proto_users_users_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UsersServiceClient is the client API for UsersService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UsersServiceClient interface {
	// 获取用户信息
	GetUserInfo(ctx context.Context, in *GetUserInfoRequest, opts ...grpc.CallOption) (*GetUserInfoResponse, error)
	// 获取用户信息-手机号
	GetUserInfoByPhone(ctx context.Context, in *GetUserInfoByPhoneRequest, opts ...grpc.CallOption) (*GetUserInfoByPhoneResponse, error)
	// 检查用户是否注册-手机号
	CheckUserByPhone(ctx context.Context, in *CheckUserByPhoneRequest, opts ...grpc.CallOption) (*CheckUserByPhoneResponse, error)
	// 根据邀请码获取邀请人
	GetUserInfoByInviteCode(ctx context.Context, in *GetUserByInviteCodeRequest, opts ...grpc.CallOption) (*GetUserByInviteCodeResponse, error)
	// 注册用户
	Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
	// 登录
	LoginUser(ctx context.Context, in *LoginUserRequest, opts ...grpc.CallOption) (*LoginUserResponse, error)
	// 检查用户身份
	CheckUserIdentity(ctx context.Context, in *CheckUserIdentityRequest, opts ...grpc.CallOption) (*CheckUserIdentityResponse, error)
	// 重置登录密码
	PasswordReset(ctx context.Context, in *PasswordResetRequest, opts ...grpc.CallOption) (*PasswordResetResponse, error)
	// 更新用户登录态
	UpdateUserLoginState(ctx context.Context, in *UpdateUserLoginStateRequest, opts ...grpc.CallOption) (*UpdateUserLoginStateResponse, error)
	// 修改用户收货信息
	ModifyUserDeliveryInfo(ctx context.Context, in *ModifyUserDeliveryInfoRequest, opts ...grpc.CallOption) (*ModifyUserDeliveryInfoResponse, error)
	// 获取用户收货信息
	GetUserDeliveryInfo(ctx context.Context, in *GetUserDeliveryInfoRequest, opts ...grpc.CallOption) (*GetUserDeliveryInfoResponse, error)
	// 查找用户信息
	FindUserInfo(ctx context.Context, in *FindUserInfoRequest, opts ...grpc.CallOption) (*FindUserInfoResponse, error)
	// 用户账户充值
	UserAccountCharge(ctx context.Context, in *UserAccountChargeRequest, opts ...grpc.CallOption) (*UserAccountChargeResponse, error)
	// 检查用户收货地址
	CheckUserDeliveryInfo(ctx context.Context, in *CheckUserDeliveryInfoRequest, opts ...grpc.CallOption) (*CheckUserDeliveryInfoResponse, error)
	// 检查用户
	CheckUserState(ctx context.Context, in *CheckUserStateRequest, opts ...grpc.CallOption) (*CheckUserStateResponse, error)
	// 获取用户accountId
	GetUserAccountId(ctx context.Context, in *GetUserAccountIdRequest, opts ...grpc.CallOption) (*GetUserAccountIdResponse, error)
	// 列表所有用户
	ListUserInfo(ctx context.Context, in *ListUserInfoRequest, opts ...grpc.CallOption) (*ListUserInfoResponse, error)
}

type usersServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUsersServiceClient(cc grpc.ClientConnInterface) UsersServiceClient {
	return &usersServiceClient{cc}
}

func (c *usersServiceClient) GetUserInfo(ctx context.Context, in *GetUserInfoRequest, opts ...grpc.CallOption) (*GetUserInfoResponse, error) {
	out := new(GetUserInfoResponse)
	err := c.cc.Invoke(ctx, "/users.UsersService/GetUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersServiceClient) GetUserInfoByPhone(ctx context.Context, in *GetUserInfoByPhoneRequest, opts ...grpc.CallOption) (*GetUserInfoByPhoneResponse, error) {
	out := new(GetUserInfoByPhoneResponse)
	err := c.cc.Invoke(ctx, "/users.UsersService/GetUserInfoByPhone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersServiceClient) CheckUserByPhone(ctx context.Context, in *CheckUserByPhoneRequest, opts ...grpc.CallOption) (*CheckUserByPhoneResponse, error) {
	out := new(CheckUserByPhoneResponse)
	err := c.cc.Invoke(ctx, "/users.UsersService/CheckUserByPhone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersServiceClient) GetUserInfoByInviteCode(ctx context.Context, in *GetUserByInviteCodeRequest, opts ...grpc.CallOption) (*GetUserByInviteCodeResponse, error) {
	out := new(GetUserByInviteCodeResponse)
	err := c.cc.Invoke(ctx, "/users.UsersService/GetUserInfoByInviteCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersServiceClient) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	out := new(RegisterResponse)
	err := c.cc.Invoke(ctx, "/users.UsersService/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersServiceClient) LoginUser(ctx context.Context, in *LoginUserRequest, opts ...grpc.CallOption) (*LoginUserResponse, error) {
	out := new(LoginUserResponse)
	err := c.cc.Invoke(ctx, "/users.UsersService/LoginUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersServiceClient) CheckUserIdentity(ctx context.Context, in *CheckUserIdentityRequest, opts ...grpc.CallOption) (*CheckUserIdentityResponse, error) {
	out := new(CheckUserIdentityResponse)
	err := c.cc.Invoke(ctx, "/users.UsersService/CheckUserIdentity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersServiceClient) PasswordReset(ctx context.Context, in *PasswordResetRequest, opts ...grpc.CallOption) (*PasswordResetResponse, error) {
	out := new(PasswordResetResponse)
	err := c.cc.Invoke(ctx, "/users.UsersService/PasswordReset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersServiceClient) UpdateUserLoginState(ctx context.Context, in *UpdateUserLoginStateRequest, opts ...grpc.CallOption) (*UpdateUserLoginStateResponse, error) {
	out := new(UpdateUserLoginStateResponse)
	err := c.cc.Invoke(ctx, "/users.UsersService/UpdateUserLoginState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersServiceClient) ModifyUserDeliveryInfo(ctx context.Context, in *ModifyUserDeliveryInfoRequest, opts ...grpc.CallOption) (*ModifyUserDeliveryInfoResponse, error) {
	out := new(ModifyUserDeliveryInfoResponse)
	err := c.cc.Invoke(ctx, "/users.UsersService/ModifyUserDeliveryInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersServiceClient) GetUserDeliveryInfo(ctx context.Context, in *GetUserDeliveryInfoRequest, opts ...grpc.CallOption) (*GetUserDeliveryInfoResponse, error) {
	out := new(GetUserDeliveryInfoResponse)
	err := c.cc.Invoke(ctx, "/users.UsersService/GetUserDeliveryInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersServiceClient) FindUserInfo(ctx context.Context, in *FindUserInfoRequest, opts ...grpc.CallOption) (*FindUserInfoResponse, error) {
	out := new(FindUserInfoResponse)
	err := c.cc.Invoke(ctx, "/users.UsersService/FindUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersServiceClient) UserAccountCharge(ctx context.Context, in *UserAccountChargeRequest, opts ...grpc.CallOption) (*UserAccountChargeResponse, error) {
	out := new(UserAccountChargeResponse)
	err := c.cc.Invoke(ctx, "/users.UsersService/UserAccountCharge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersServiceClient) CheckUserDeliveryInfo(ctx context.Context, in *CheckUserDeliveryInfoRequest, opts ...grpc.CallOption) (*CheckUserDeliveryInfoResponse, error) {
	out := new(CheckUserDeliveryInfoResponse)
	err := c.cc.Invoke(ctx, "/users.UsersService/CheckUserDeliveryInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersServiceClient) CheckUserState(ctx context.Context, in *CheckUserStateRequest, opts ...grpc.CallOption) (*CheckUserStateResponse, error) {
	out := new(CheckUserStateResponse)
	err := c.cc.Invoke(ctx, "/users.UsersService/CheckUserState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersServiceClient) GetUserAccountId(ctx context.Context, in *GetUserAccountIdRequest, opts ...grpc.CallOption) (*GetUserAccountIdResponse, error) {
	out := new(GetUserAccountIdResponse)
	err := c.cc.Invoke(ctx, "/users.UsersService/GetUserAccountId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersServiceClient) ListUserInfo(ctx context.Context, in *ListUserInfoRequest, opts ...grpc.CallOption) (*ListUserInfoResponse, error) {
	out := new(ListUserInfoResponse)
	err := c.cc.Invoke(ctx, "/users.UsersService/ListUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UsersServiceServer is the server API for UsersService service.
type UsersServiceServer interface {
	// 获取用户信息
	GetUserInfo(context.Context, *GetUserInfoRequest) (*GetUserInfoResponse, error)
	// 获取用户信息-手机号
	GetUserInfoByPhone(context.Context, *GetUserInfoByPhoneRequest) (*GetUserInfoByPhoneResponse, error)
	// 检查用户是否注册-手机号
	CheckUserByPhone(context.Context, *CheckUserByPhoneRequest) (*CheckUserByPhoneResponse, error)
	// 根据邀请码获取邀请人
	GetUserInfoByInviteCode(context.Context, *GetUserByInviteCodeRequest) (*GetUserByInviteCodeResponse, error)
	// 注册用户
	Register(context.Context, *RegisterRequest) (*RegisterResponse, error)
	// 登录
	LoginUser(context.Context, *LoginUserRequest) (*LoginUserResponse, error)
	// 检查用户身份
	CheckUserIdentity(context.Context, *CheckUserIdentityRequest) (*CheckUserIdentityResponse, error)
	// 重置登录密码
	PasswordReset(context.Context, *PasswordResetRequest) (*PasswordResetResponse, error)
	// 更新用户登录态
	UpdateUserLoginState(context.Context, *UpdateUserLoginStateRequest) (*UpdateUserLoginStateResponse, error)
	// 修改用户收货信息
	ModifyUserDeliveryInfo(context.Context, *ModifyUserDeliveryInfoRequest) (*ModifyUserDeliveryInfoResponse, error)
	// 获取用户收货信息
	GetUserDeliveryInfo(context.Context, *GetUserDeliveryInfoRequest) (*GetUserDeliveryInfoResponse, error)
	// 查找用户信息
	FindUserInfo(context.Context, *FindUserInfoRequest) (*FindUserInfoResponse, error)
	// 用户账户充值
	UserAccountCharge(context.Context, *UserAccountChargeRequest) (*UserAccountChargeResponse, error)
	// 检查用户收货地址
	CheckUserDeliveryInfo(context.Context, *CheckUserDeliveryInfoRequest) (*CheckUserDeliveryInfoResponse, error)
	// 检查用户
	CheckUserState(context.Context, *CheckUserStateRequest) (*CheckUserStateResponse, error)
	// 获取用户accountId
	GetUserAccountId(context.Context, *GetUserAccountIdRequest) (*GetUserAccountIdResponse, error)
	// 列表所有用户
	ListUserInfo(context.Context, *ListUserInfoRequest) (*ListUserInfoResponse, error)
}

// UnimplementedUsersServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUsersServiceServer struct {
}

func (*UnimplementedUsersServiceServer) GetUserInfo(context.Context, *GetUserInfoRequest) (*GetUserInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInfo not implemented")
}
func (*UnimplementedUsersServiceServer) GetUserInfoByPhone(context.Context, *GetUserInfoByPhoneRequest) (*GetUserInfoByPhoneResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInfoByPhone not implemented")
}
func (*UnimplementedUsersServiceServer) CheckUserByPhone(context.Context, *CheckUserByPhoneRequest) (*CheckUserByPhoneResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckUserByPhone not implemented")
}
func (*UnimplementedUsersServiceServer) GetUserInfoByInviteCode(context.Context, *GetUserByInviteCodeRequest) (*GetUserByInviteCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInfoByInviteCode not implemented")
}
func (*UnimplementedUsersServiceServer) Register(context.Context, *RegisterRequest) (*RegisterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedUsersServiceServer) LoginUser(context.Context, *LoginUserRequest) (*LoginUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginUser not implemented")
}
func (*UnimplementedUsersServiceServer) CheckUserIdentity(context.Context, *CheckUserIdentityRequest) (*CheckUserIdentityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckUserIdentity not implemented")
}
func (*UnimplementedUsersServiceServer) PasswordReset(context.Context, *PasswordResetRequest) (*PasswordResetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PasswordReset not implemented")
}
func (*UnimplementedUsersServiceServer) UpdateUserLoginState(context.Context, *UpdateUserLoginStateRequest) (*UpdateUserLoginStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserLoginState not implemented")
}
func (*UnimplementedUsersServiceServer) ModifyUserDeliveryInfo(context.Context, *ModifyUserDeliveryInfoRequest) (*ModifyUserDeliveryInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyUserDeliveryInfo not implemented")
}
func (*UnimplementedUsersServiceServer) GetUserDeliveryInfo(context.Context, *GetUserDeliveryInfoRequest) (*GetUserDeliveryInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserDeliveryInfo not implemented")
}
func (*UnimplementedUsersServiceServer) FindUserInfo(context.Context, *FindUserInfoRequest) (*FindUserInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindUserInfo not implemented")
}
func (*UnimplementedUsersServiceServer) UserAccountCharge(context.Context, *UserAccountChargeRequest) (*UserAccountChargeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserAccountCharge not implemented")
}
func (*UnimplementedUsersServiceServer) CheckUserDeliveryInfo(context.Context, *CheckUserDeliveryInfoRequest) (*CheckUserDeliveryInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckUserDeliveryInfo not implemented")
}
func (*UnimplementedUsersServiceServer) CheckUserState(context.Context, *CheckUserStateRequest) (*CheckUserStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckUserState not implemented")
}
func (*UnimplementedUsersServiceServer) GetUserAccountId(context.Context, *GetUserAccountIdRequest) (*GetUserAccountIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserAccountId not implemented")
}
func (*UnimplementedUsersServiceServer) ListUserInfo(context.Context, *ListUserInfoRequest) (*ListUserInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListUserInfo not implemented")
}

func RegisterUsersServiceServer(s *grpc.Server, srv UsersServiceServer) {
	s.RegisterService(&_UsersService_serviceDesc, srv)
}

func _UsersService_GetUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServiceServer).GetUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.UsersService/GetUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServiceServer).GetUserInfo(ctx, req.(*GetUserInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersService_GetUserInfoByPhone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInfoByPhoneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServiceServer).GetUserInfoByPhone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.UsersService/GetUserInfoByPhone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServiceServer).GetUserInfoByPhone(ctx, req.(*GetUserInfoByPhoneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersService_CheckUserByPhone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckUserByPhoneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServiceServer).CheckUserByPhone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.UsersService/CheckUserByPhone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServiceServer).CheckUserByPhone(ctx, req.(*CheckUserByPhoneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersService_GetUserInfoByInviteCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserByInviteCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServiceServer).GetUserInfoByInviteCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.UsersService/GetUserInfoByInviteCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServiceServer).GetUserInfoByInviteCode(ctx, req.(*GetUserByInviteCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersService_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServiceServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.UsersService/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServiceServer).Register(ctx, req.(*RegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersService_LoginUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServiceServer).LoginUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.UsersService/LoginUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServiceServer).LoginUser(ctx, req.(*LoginUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersService_CheckUserIdentity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckUserIdentityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServiceServer).CheckUserIdentity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.UsersService/CheckUserIdentity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServiceServer).CheckUserIdentity(ctx, req.(*CheckUserIdentityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersService_PasswordReset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PasswordResetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServiceServer).PasswordReset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.UsersService/PasswordReset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServiceServer).PasswordReset(ctx, req.(*PasswordResetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersService_UpdateUserLoginState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserLoginStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServiceServer).UpdateUserLoginState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.UsersService/UpdateUserLoginState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServiceServer).UpdateUserLoginState(ctx, req.(*UpdateUserLoginStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersService_ModifyUserDeliveryInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyUserDeliveryInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServiceServer).ModifyUserDeliveryInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.UsersService/ModifyUserDeliveryInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServiceServer).ModifyUserDeliveryInfo(ctx, req.(*ModifyUserDeliveryInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersService_GetUserDeliveryInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserDeliveryInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServiceServer).GetUserDeliveryInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.UsersService/GetUserDeliveryInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServiceServer).GetUserDeliveryInfo(ctx, req.(*GetUserDeliveryInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersService_FindUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindUserInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServiceServer).FindUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.UsersService/FindUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServiceServer).FindUserInfo(ctx, req.(*FindUserInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersService_UserAccountCharge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserAccountChargeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServiceServer).UserAccountCharge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.UsersService/UserAccountCharge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServiceServer).UserAccountCharge(ctx, req.(*UserAccountChargeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersService_CheckUserDeliveryInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckUserDeliveryInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServiceServer).CheckUserDeliveryInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.UsersService/CheckUserDeliveryInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServiceServer).CheckUserDeliveryInfo(ctx, req.(*CheckUserDeliveryInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersService_CheckUserState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckUserStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServiceServer).CheckUserState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.UsersService/CheckUserState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServiceServer).CheckUserState(ctx, req.(*CheckUserStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersService_GetUserAccountId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserAccountIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServiceServer).GetUserAccountId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.UsersService/GetUserAccountId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServiceServer).GetUserAccountId(ctx, req.(*GetUserAccountIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersService_ListUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUserInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServiceServer).ListUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.UsersService/ListUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServiceServer).ListUserInfo(ctx, req.(*ListUserInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UsersService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "users.UsersService",
	HandlerType: (*UsersServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserInfo",
			Handler:    _UsersService_GetUserInfo_Handler,
		},
		{
			MethodName: "GetUserInfoByPhone",
			Handler:    _UsersService_GetUserInfoByPhone_Handler,
		},
		{
			MethodName: "CheckUserByPhone",
			Handler:    _UsersService_CheckUserByPhone_Handler,
		},
		{
			MethodName: "GetUserInfoByInviteCode",
			Handler:    _UsersService_GetUserInfoByInviteCode_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _UsersService_Register_Handler,
		},
		{
			MethodName: "LoginUser",
			Handler:    _UsersService_LoginUser_Handler,
		},
		{
			MethodName: "CheckUserIdentity",
			Handler:    _UsersService_CheckUserIdentity_Handler,
		},
		{
			MethodName: "PasswordReset",
			Handler:    _UsersService_PasswordReset_Handler,
		},
		{
			MethodName: "UpdateUserLoginState",
			Handler:    _UsersService_UpdateUserLoginState_Handler,
		},
		{
			MethodName: "ModifyUserDeliveryInfo",
			Handler:    _UsersService_ModifyUserDeliveryInfo_Handler,
		},
		{
			MethodName: "GetUserDeliveryInfo",
			Handler:    _UsersService_GetUserDeliveryInfo_Handler,
		},
		{
			MethodName: "FindUserInfo",
			Handler:    _UsersService_FindUserInfo_Handler,
		},
		{
			MethodName: "UserAccountCharge",
			Handler:    _UsersService_UserAccountCharge_Handler,
		},
		{
			MethodName: "CheckUserDeliveryInfo",
			Handler:    _UsersService_CheckUserDeliveryInfo_Handler,
		},
		{
			MethodName: "CheckUserState",
			Handler:    _UsersService_CheckUserState_Handler,
		},
		{
			MethodName: "GetUserAccountId",
			Handler:    _UsersService_GetUserAccountId_Handler,
		},
		{
			MethodName: "ListUserInfo",
			Handler:    _UsersService_ListUserInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/micro_mall_users_proto/users/users.proto",
}

// MerchantsServiceClient is the client API for MerchantsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MerchantsServiceClient interface {
	// 商户提交资料
	MerchantsMaterial(ctx context.Context, in *MerchantsMaterialRequest, opts ...grpc.CallOption) (*MerchantsMaterialResponse, error)
	// 审核商户,返回审核结果
	MerchantsMaterialAudit(ctx context.Context, in *MerchantsMaterialAuditRequest, opts ...grpc.CallOption) (*MerchantsMaterialAuditResponse, error)
	// 获取商户资料
	GetMerchantsMaterial(ctx context.Context, in *GetMerchantsMaterialRequest, opts ...grpc.CallOption) (*GetMerchantsMaterialResponse, error)
	// 商户关联店铺
	MerchantsAssociateShop(ctx context.Context, in *MerchantsAssociateShopRequest, opts ...grpc.CallOption) (*MerchantsAssociateShopResponse, error)
}

type merchantsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMerchantsServiceClient(cc grpc.ClientConnInterface) MerchantsServiceClient {
	return &merchantsServiceClient{cc}
}

func (c *merchantsServiceClient) MerchantsMaterial(ctx context.Context, in *MerchantsMaterialRequest, opts ...grpc.CallOption) (*MerchantsMaterialResponse, error) {
	out := new(MerchantsMaterialResponse)
	err := c.cc.Invoke(ctx, "/users.MerchantsService/MerchantsMaterial", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantsServiceClient) MerchantsMaterialAudit(ctx context.Context, in *MerchantsMaterialAuditRequest, opts ...grpc.CallOption) (*MerchantsMaterialAuditResponse, error) {
	out := new(MerchantsMaterialAuditResponse)
	err := c.cc.Invoke(ctx, "/users.MerchantsService/MerchantsMaterialAudit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantsServiceClient) GetMerchantsMaterial(ctx context.Context, in *GetMerchantsMaterialRequest, opts ...grpc.CallOption) (*GetMerchantsMaterialResponse, error) {
	out := new(GetMerchantsMaterialResponse)
	err := c.cc.Invoke(ctx, "/users.MerchantsService/GetMerchantsMaterial", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantsServiceClient) MerchantsAssociateShop(ctx context.Context, in *MerchantsAssociateShopRequest, opts ...grpc.CallOption) (*MerchantsAssociateShopResponse, error) {
	out := new(MerchantsAssociateShopResponse)
	err := c.cc.Invoke(ctx, "/users.MerchantsService/MerchantsAssociateShop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MerchantsServiceServer is the server API for MerchantsService service.
type MerchantsServiceServer interface {
	// 商户提交资料
	MerchantsMaterial(context.Context, *MerchantsMaterialRequest) (*MerchantsMaterialResponse, error)
	// 审核商户,返回审核结果
	MerchantsMaterialAudit(context.Context, *MerchantsMaterialAuditRequest) (*MerchantsMaterialAuditResponse, error)
	// 获取商户资料
	GetMerchantsMaterial(context.Context, *GetMerchantsMaterialRequest) (*GetMerchantsMaterialResponse, error)
	// 商户关联店铺
	MerchantsAssociateShop(context.Context, *MerchantsAssociateShopRequest) (*MerchantsAssociateShopResponse, error)
}

// UnimplementedMerchantsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMerchantsServiceServer struct {
}

func (*UnimplementedMerchantsServiceServer) MerchantsMaterial(context.Context, *MerchantsMaterialRequest) (*MerchantsMaterialResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MerchantsMaterial not implemented")
}
func (*UnimplementedMerchantsServiceServer) MerchantsMaterialAudit(context.Context, *MerchantsMaterialAuditRequest) (*MerchantsMaterialAuditResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MerchantsMaterialAudit not implemented")
}
func (*UnimplementedMerchantsServiceServer) GetMerchantsMaterial(context.Context, *GetMerchantsMaterialRequest) (*GetMerchantsMaterialResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMerchantsMaterial not implemented")
}
func (*UnimplementedMerchantsServiceServer) MerchantsAssociateShop(context.Context, *MerchantsAssociateShopRequest) (*MerchantsAssociateShopResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MerchantsAssociateShop not implemented")
}

func RegisterMerchantsServiceServer(s *grpc.Server, srv MerchantsServiceServer) {
	s.RegisterService(&_MerchantsService_serviceDesc, srv)
}

func _MerchantsService_MerchantsMaterial_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantsMaterialRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantsServiceServer).MerchantsMaterial(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.MerchantsService/MerchantsMaterial",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantsServiceServer).MerchantsMaterial(ctx, req.(*MerchantsMaterialRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantsService_MerchantsMaterialAudit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantsMaterialAuditRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantsServiceServer).MerchantsMaterialAudit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.MerchantsService/MerchantsMaterialAudit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantsServiceServer).MerchantsMaterialAudit(ctx, req.(*MerchantsMaterialAuditRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantsService_GetMerchantsMaterial_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMerchantsMaterialRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantsServiceServer).GetMerchantsMaterial(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.MerchantsService/GetMerchantsMaterial",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantsServiceServer).GetMerchantsMaterial(ctx, req.(*GetMerchantsMaterialRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantsService_MerchantsAssociateShop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantsAssociateShopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantsServiceServer).MerchantsAssociateShop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.MerchantsService/MerchantsAssociateShop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantsServiceServer).MerchantsAssociateShop(ctx, req.(*MerchantsAssociateShopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MerchantsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "users.MerchantsService",
	HandlerType: (*MerchantsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MerchantsMaterial",
			Handler:    _MerchantsService_MerchantsMaterial_Handler,
		},
		{
			MethodName: "MerchantsMaterialAudit",
			Handler:    _MerchantsService_MerchantsMaterialAudit_Handler,
		},
		{
			MethodName: "GetMerchantsMaterial",
			Handler:    _MerchantsService_GetMerchantsMaterial_Handler,
		},
		{
			MethodName: "MerchantsAssociateShop",
			Handler:    _MerchantsService_MerchantsAssociateShop_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/micro_mall_users_proto/users/users.proto",
}
