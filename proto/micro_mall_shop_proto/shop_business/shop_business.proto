syntax = "proto3";

package shop_business;

import "gitee.com/kelvins-io/common/proto/google/api/annotations.proto";

service ShopBusinessService {
    // 提交店铺申请材料
    rpc ShopApply(ShopApplyRequest) returns (ShopApplyResponse) {
        option (google.api.http) = {
            get: "/v1/shop_business/shop/apply"
        };
    }
    // 店铺质押保证金
    rpc ShopPledge(ShopPledgeRequest) returns (ShopPledgeResponse) {
        option (google.api.http) = {
            get: "/v1/shop_business/shop/pledge"
        };
    }

}

enum RetCode {
    SUCCESS = 0;
    ERROR = 500;
    USER_NOT_EXIST = 50001;
    USER_EXIST = 50002;
    MERCHANT_NOT_EXIST = 50003;
    MERCHANT_EXIST = 50004;
    SHOP_NOT_EXIST = 50005;
    SHOP_EXIST = 50006;
}

enum OperationType {
    CREATE = 0;
    UPDATE = 1;
    DELETE = 2;
    AUDIT = 3;
}

enum CoinType {
    CNY = 0; // 人民币
    USD = 1; // 美元
    HKD = 2; // 港币
    EUR = 3; // 欧元
}

message CommonResponse {
    RetCode code = 1;
    string msg = 2;
}

message ShopPledgeRequest {
    int64 op_uid = 1; // 操作员
    string op_ip = 2; // 操作员IP
    int64 shop_id = 3;
    string amount = 4;
    CoinType coin_type = 5;
}

message ShopPledgeResponse {
    CommonResponse common = 1;
    int32 state = 2;
}

message ShopApplyRequest {
    OperationType operation_type = 1;
    int64 op_uid = 2; // 操作员
    string op_ip = 3; // 操作员IP
    int64 shop_id = 4;
    int64 merchant_id = 5; // 店铺法人
    string nick_name = 6;
    string full_name = 7;
    string register_addr = 8;
    string business_addr = 9;
    string business_license = 10;
    string tax_card_no = 11;
    string business_desc = 12;
    string social_credit_code = 13;
    string organization_code = 14;
}

message ShopApplyResponse {
    CommonResponse common = 1;
    int64 shop_id = 2;
}